//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data;
using System.Data.SqlClient;

namespace Attune.KernelV2.Cmd
{
    public class KernelV2_Command
    {
        public static SqlCommand pGetLandingPage_V2Command(long pRoleID, DataTable ContextInfo)
        {
            SqlCommand cmd;
            cmd = new SqlCommand();
            cmd.CommandText = "pGetLandingPage_V2";
            cmd.CommandTimeout = 180;
            cmd.CommandType = CommandType.StoredProcedure;
            SqlParameter _pRoleID = new SqlParameter();
            _pRoleID.ParameterName = "@pRoleID";
            _pRoleID.Size = -1;
            _pRoleID.Value = pRoleID;
            cmd.Parameters.Add(_pRoleID);
            SqlParameter _ContextInfo = new SqlParameter();
            _ContextInfo.ParameterName = "@ContextInfo";
            _ContextInfo.Size = -1;
            _ContextInfo.Value = ContextInfo;
            cmd.Parameters.Add(_ContextInfo);
            return cmd;
        }
        public static SqlCommand pGetAllMenuItems_V2Command(long OrgID, string langCode, long RoleID, int LocationType, DataTable ContextInfo)
        {
            SqlCommand cmd;
            cmd = new SqlCommand();
            cmd.CommandText = "pGetAllMenuItems_V2";
            cmd.CommandTimeout = 180;
            cmd.CommandType = CommandType.StoredProcedure;
            SqlParameter _OrgID = new SqlParameter();
            _OrgID.ParameterName = "@OrgID";
            _OrgID.Size = -1;
            _OrgID.Value = OrgID;
            cmd.Parameters.Add(_OrgID);
            SqlParameter _langCode = new SqlParameter();
            _langCode.ParameterName = "@langCode";
            _langCode.Size = 10;
            _langCode.Value = langCode;
            cmd.Parameters.Add(_langCode);
            SqlParameter _RoleID = new SqlParameter();
            _RoleID.ParameterName = "@RoleID";
            _RoleID.Size = -1;
            _RoleID.Value = RoleID;
            cmd.Parameters.Add(_RoleID);
            SqlParameter _LocationType = new SqlParameter();
            _LocationType.ParameterName = "@LocationType";
            _LocationType.Size = -1;
            _LocationType.Value = LocationType;
            cmd.Parameters.Add(_LocationType);
            SqlParameter _ContextInfo = new SqlParameter();
            _ContextInfo.ParameterName = "@ContextInfo";
            _ContextInfo.Size = -1;
            _ContextInfo.Value = ContextInfo;
            cmd.Parameters.Add(_ContextInfo);
            return cmd;
        }
        public static SqlCommand pGetLoginInfo_V2Command(long LoginID, string LangCode, DataTable ContextInfo)
        {
            SqlCommand cmd;
            cmd = new SqlCommand();
            cmd.CommandText = "pGetLoginInfo_V2";
            cmd.CommandTimeout = 180;
            cmd.CommandType = CommandType.StoredProcedure;
            SqlParameter _LoginID = new SqlParameter();
            _LoginID.ParameterName = "@LoginID";
            _LoginID.Size = -1;
            _LoginID.Value = LoginID;
            cmd.Parameters.Add(_LoginID);
            SqlParameter _LangCode = new SqlParameter();
            _LangCode.ParameterName = "@LangCode";
            _LangCode.Size = 10;
            _LangCode.Value = LangCode;
            cmd.Parameters.Add(_LangCode);
            SqlParameter _ContextInfo = new SqlParameter();
            _ContextInfo.ParameterName = "@ContextInfo";
            _ContextInfo.Size = -1;
            _ContextInfo.Value = ContextInfo;
            cmd.Parameters.Add(_ContextInfo);
            return cmd;
        }
        public static SqlCommand pGetLabVisitDetails_v2Command(long pVisitID, int pOrgID, string UID, DataTable ContextInfo)
        {
            SqlCommand cmd;
            cmd = new SqlCommand();
            cmd.CommandText = "pGetLabVisitDetails_v2";
            cmd.CommandTimeout = 180;
            cmd.CommandType = CommandType.StoredProcedure;
            SqlParameter _pVisitID = new SqlParameter();
            _pVisitID.ParameterName = "@pVisitID";
            _pVisitID.Size = -1;
            _pVisitID.Value = pVisitID;
            cmd.Parameters.Add(_pVisitID);
            SqlParameter _pOrgID = new SqlParameter();
            _pOrgID.ParameterName = "@pOrgID";
            _pOrgID.Size = -1;
            _pOrgID.Value = pOrgID;
            cmd.Parameters.Add(_pOrgID);
            SqlParameter _UID = new SqlParameter();
            _UID.ParameterName = "@UID";
            _UID.Size = 255;
            _UID.Value = UID;
            cmd.Parameters.Add(_UID);
            SqlParameter _ContextInfo = new SqlParameter();
            _ContextInfo.ParameterName = "@ContextInfo";
            _ContextInfo.Size = -1;
            _ContextInfo.Value = ContextInfo;
            cmd.Parameters.Add(_ContextInfo);
            return cmd;
        }
        public static SqlCommand pGetpatientInvestigationForVisit_V2Command(long pVisitID, int pOrgid, int pLocation, string pGUID, DataTable ContextInfo)
        {
            SqlCommand cmd;
            cmd = new SqlCommand();
            cmd.CommandText = "pGetpatientInvestigationForVisit_V2";
            cmd.CommandTimeout = 180;
            cmd.CommandType = CommandType.StoredProcedure;
            SqlParameter _pVisitID = new SqlParameter();
            _pVisitID.ParameterName = "@pVisitID";
            _pVisitID.Size = -1;
            _pVisitID.Value = pVisitID;
            cmd.Parameters.Add(_pVisitID);
            SqlParameter _pOrgid = new SqlParameter();
            _pOrgid.ParameterName = "@pOrgid";
            _pOrgid.Size = -1;
            _pOrgid.Value = pOrgid;
            cmd.Parameters.Add(_pOrgid);
            SqlParameter _pLocation = new SqlParameter();
            _pLocation.ParameterName = "@pLocation";
            _pLocation.Size = -1;
            _pLocation.Value = pLocation;
            cmd.Parameters.Add(_pLocation);
            SqlParameter _pGUID = new SqlParameter();
            _pGUID.ParameterName = "@pGUID";
            _pGUID.Size = 255;
            _pGUID.Value = pGUID;
            cmd.Parameters.Add(_pGUID);
            SqlParameter _ContextInfo = new SqlParameter();
            _ContextInfo.ParameterName = "@ContextInfo";
            _ContextInfo.Size = -1;
            _ContextInfo.Value = ContextInfo;
            cmd.Parameters.Add(_ContextInfo);
            return cmd;
        }
        public static SqlCommand pGetInvestigationResultsCapture_V2Command(long VID, int OrgID, long RoleID, string pGUID, long DeptID, string pInvID, int pLocationID, long TaskID, DataTable LoginDetail, DataTable ContextInfo, string IsTrustedDetails, string Status)
        {
            SqlCommand cmd;
            cmd = new SqlCommand();
            cmd.CommandText = "pGetInvestigationResultsCapture_V2";
            cmd.CommandTimeout = 180;
            cmd.CommandType = CommandType.StoredProcedure;
            SqlParameter _VID = new SqlParameter();
            _VID.ParameterName = "@VID";
            _VID.Size = -1;
            _VID.Value = VID;
            cmd.Parameters.Add(_VID);
            SqlParameter _OrgID = new SqlParameter();
            _OrgID.ParameterName = "@OrgID";
            _OrgID.Size = -1;
            _OrgID.Value = OrgID;
            cmd.Parameters.Add(_OrgID);
            SqlParameter _RoleID = new SqlParameter();
            _RoleID.ParameterName = "@RoleID";
            _RoleID.Size = -1;
            _RoleID.Value = RoleID;
            cmd.Parameters.Add(_RoleID);
            SqlParameter _pGUID = new SqlParameter();
            _pGUID.ParameterName = "@pGUID";
            _pGUID.Size = 255;
            _pGUID.Value = pGUID;
            cmd.Parameters.Add(_pGUID);
            SqlParameter _DeptID = new SqlParameter();
            _DeptID.ParameterName = "@DeptID";
            _DeptID.Size = -1;
            _DeptID.Value = DeptID;
            cmd.Parameters.Add(_DeptID);
            SqlParameter _pInvID = new SqlParameter();
            _pInvID.ParameterName = "@pInvID";
            _pInvID.Size = -1;
            _pInvID.Value = pInvID;
            cmd.Parameters.Add(_pInvID);
            SqlParameter _pLocationID = new SqlParameter();
            _pLocationID.ParameterName = "@pLocationID";
            _pLocationID.Size = -1;
            _pLocationID.Value = pLocationID;
            cmd.Parameters.Add(_pLocationID);
            SqlParameter _TaskID = new SqlParameter();
            _TaskID.ParameterName = "@TaskID";
            _TaskID.Size = -1;
            _TaskID.Value = TaskID;
            cmd.Parameters.Add(_TaskID);
            SqlParameter _LoginDetail = new SqlParameter();
            _LoginDetail.ParameterName = "@LoginDetail";
            _LoginDetail.Size = -1;
            _LoginDetail.Value = LoginDetail;
            cmd.Parameters.Add(_LoginDetail);
            SqlParameter _ContextInfo = new SqlParameter();
            _ContextInfo.ParameterName = "@ContextInfo";
            _ContextInfo.Size = -1;
            _ContextInfo.Value = ContextInfo;
            cmd.Parameters.Add(_ContextInfo);
            SqlParameter _IsTrustedDetails = new SqlParameter();
            _IsTrustedDetails.ParameterName = "@IsTrustedDetails";
            _IsTrustedDetails.Size = 3;
            _IsTrustedDetails.Value = IsTrustedDetails;
            cmd.Parameters.Add(_IsTrustedDetails);
            SqlParameter _Status = new SqlParameter();
            _Status.ParameterName = "@Status";
            _Status.Size = 50;
            _Status.Value = Status;
            cmd.Parameters.Add(_Status);
            return cmd;
        }
        public static SqlCommand pgetReferencerangetypeCommand(int pOrgId, string pLangCode)
        {
            SqlCommand cmd;
            cmd = new SqlCommand();
            cmd.CommandText = "pgetReferencerangetype";
            cmd.CommandTimeout = 180;
            cmd.CommandType = CommandType.StoredProcedure;
            SqlParameter _pOrgId = new SqlParameter();
            _pOrgId.ParameterName = "@pOrgId";
            _pOrgId.Size = -1;
            _pOrgId.Value = pOrgId;
            cmd.Parameters.Add(_pOrgId);
            SqlParameter _pLangCode = new SqlParameter();
            _pLangCode.ParameterName = "@pLangCode";
            _pLangCode.Size = 50;
            _pLangCode.Value = pLangCode;
            cmd.Parameters.Add(_pLangCode);
            return cmd;
        }
        public static SqlCommand pupdatePatientvisitchanges_V2Command(long visitid, string PatientHistory, string Remarks, string HospitalName, string ReferingPhysicianName, long ReferingPhysicianID, long HospitalID, int orgid, DataTable ContextInfo)
        {
            SqlCommand cmd;
            cmd = new SqlCommand();
            cmd.CommandText = "pupdatePatientvisitchanges_V2";
            cmd.CommandTimeout = 180;
            cmd.CommandType = CommandType.StoredProcedure;
            SqlParameter _visitid = new SqlParameter();
            _visitid.ParameterName = "@visitid";
            _visitid.Size = -1;
            _visitid.Value = visitid;
            cmd.Parameters.Add(_visitid);
            SqlParameter _PatientHistory = new SqlParameter();
            _PatientHistory.ParameterName = "@PatientHistory";
            _PatientHistory.Size = 250;
            _PatientHistory.Value = PatientHistory;
            cmd.Parameters.Add(_PatientHistory);
            SqlParameter _Remarks = new SqlParameter();
            _Remarks.ParameterName = "@Remarks";
            _Remarks.Size = 250;
            _Remarks.Value = Remarks;
            cmd.Parameters.Add(_Remarks);
            SqlParameter _HospitalName = new SqlParameter();
            _HospitalName.ParameterName = "@HospitalName";
            _HospitalName.Size = 250;
            _HospitalName.Value = HospitalName;
            cmd.Parameters.Add(_HospitalName);
            SqlParameter _ReferingPhysicianName = new SqlParameter();
            _ReferingPhysicianName.ParameterName = "@ReferingPhysicianName";
            _ReferingPhysicianName.Size = 250;
            _ReferingPhysicianName.Value = ReferingPhysicianName;
            cmd.Parameters.Add(_ReferingPhysicianName);
            SqlParameter _ReferingPhysicianID = new SqlParameter();
            _ReferingPhysicianID.ParameterName = "@ReferingPhysicianID";
            _ReferingPhysicianID.Size = -1;
            _ReferingPhysicianID.Value = ReferingPhysicianID;
            cmd.Parameters.Add(_ReferingPhysicianID);
            SqlParameter _HospitalID = new SqlParameter();
            _HospitalID.ParameterName = "@HospitalID";
            _HospitalID.Size = -1;
            _HospitalID.Value = HospitalID;
            cmd.Parameters.Add(_HospitalID);
            SqlParameter _orgid = new SqlParameter();
            _orgid.ParameterName = "@orgid";
            _orgid.Size = -1;
            _orgid.Value = orgid;
            cmd.Parameters.Add(_orgid);
            SqlParameter _ContextInfo = new SqlParameter();
            _ContextInfo.ParameterName = "@ContextInfo";
            _ContextInfo.Size = -1;
            _ContextInfo.Value = ContextInfo;
            cmd.Parameters.Add(_ContextInfo);
            return cmd;
        }
        public static SqlCommand pGetRateSubVisitTypeDetails_V2Command(int OrgID, string Type, DataTable ContextInfo)
        {
            SqlCommand cmd;
            cmd = new SqlCommand();
            cmd.CommandText = "pGetRateSubVisitTypeDetails_V2";
            cmd.CommandTimeout = 180;
            cmd.CommandType = CommandType.StoredProcedure;
            SqlParameter _OrgID = new SqlParameter();
            _OrgID.ParameterName = "@OrgID";
            _OrgID.Size = -1;
            _OrgID.Value = OrgID;
            cmd.Parameters.Add(_OrgID);
            SqlParameter _Type = new SqlParameter();
            _Type.ParameterName = "@Type";
            _Type.Size = 20;
            _Type.Value = Type;
            cmd.Parameters.Add(_Type);
            SqlParameter _ContextInfo = new SqlParameter();
            _ContextInfo.ParameterName = "@ContextInfo";
            _ContextInfo.Size = -1;
            _ContextInfo.Value = ContextInfo;
            cmd.Parameters.Add(_ContextInfo);
            return cmd;
        }
        public static SqlCommand pGetQuickBillingDetails_V2Command(int pOrgID, string pLanguageCode, DataTable ContextInfo)
        {
            SqlCommand cmd;
            cmd = new SqlCommand();
            cmd.CommandText = "pGetQuickBillingDetails_V2";
            cmd.CommandTimeout = 180;
            cmd.CommandType = CommandType.StoredProcedure;
            SqlParameter _pOrgID = new SqlParameter();
            _pOrgID.ParameterName = "@pOrgID";
            _pOrgID.Size = -1;
            _pOrgID.Value = pOrgID;
            cmd.Parameters.Add(_pOrgID);
            SqlParameter _pLanguageCode = new SqlParameter();
            _pLanguageCode.ParameterName = "@pLanguageCode";
            _pLanguageCode.Size = 10;
            _pLanguageCode.Value = pLanguageCode;
            cmd.Parameters.Add(_pLanguageCode);
            SqlParameter _ContextInfo = new SqlParameter();
            _ContextInfo.ParameterName = "@ContextInfo";
            _ContextInfo.Size = -1;
            _ContextInfo.Value = ContextInfo;
            cmd.Parameters.Add(_ContextInfo);
            return cmd;
        }
        public static SqlCommand pGetPriorityMaster_V2Command(DataTable ContextInfo)
        {
            SqlCommand cmd;
            cmd = new SqlCommand();
            cmd.CommandText = "pGetPriorityMaster_V2";
            cmd.CommandTimeout = 180;
            cmd.CommandType = CommandType.StoredProcedure;
            SqlParameter _ContextInfo = new SqlParameter();
            _ContextInfo.ParameterName = "@ContextInfo";
            _ContextInfo.Size = -1;
            _ContextInfo.Value = ContextInfo;
            cmd.Parameters.Add(_ContextInfo);
            return cmd;
        }
        public static SqlCommand pGetStateByCountryLis_V2Command(short pCountryID)
        {
            SqlCommand cmd;
            cmd = new SqlCommand();
            cmd.CommandText = "pGetStateByCountryLis_V2";
            cmd.CommandTimeout = 180;
            cmd.CommandType = CommandType.StoredProcedure;
            SqlParameter _pCountryID = new SqlParameter();
            _pCountryID.ParameterName = "@pCountryID";
            _pCountryID.Size = -1;
            _pCountryID.Value = pCountryID;
            cmd.Parameters.Add(_pCountryID);
            return cmd;
        }
        public static SqlCommand pGetURNType_V2Command(DataTable ContextInfo)
        {
            SqlCommand cmd;
            cmd = new SqlCommand();
            cmd.CommandText = "pGetURNType_V2";
            cmd.CommandTimeout = 180;
            cmd.CommandType = CommandType.StoredProcedure;
            SqlParameter _ContextInfo = new SqlParameter();
            _ContextInfo.ParameterName = "@ContextInfo";
            _ContextInfo.Size = -1;
            _ContextInfo.Value = ContextInfo;
            cmd.Parameters.Add(_ContextInfo);
            return cmd;
        }
        public static SqlCommand pGetSpecies_V2Command(int OrgID, DataTable ContextInfo)
        {
            SqlCommand cmd;
            cmd = new SqlCommand();
            cmd.CommandText = "pGetSpecies_V2";
            cmd.CommandTimeout = 180;
            cmd.CommandType = CommandType.StoredProcedure;
            SqlParameter _OrgID = new SqlParameter();
            _OrgID.ParameterName = "@OrgID";
            _OrgID.Size = -1;
            _OrgID.Value = OrgID;
            cmd.Parameters.Add(_OrgID);
            SqlParameter _ContextInfo = new SqlParameter();
            _ContextInfo.ParameterName = "@ContextInfo";
            _ContextInfo.Size = -1;
            _ContextInfo.Value = ContextInfo;
            cmd.Parameters.Add(_ContextInfo);
            return cmd;
        }
        public static SqlCommand pLoadMetaDataOrgMapping_V2Command(string pDomain, long pOrgID, string pLangCode, DataTable ContextInfo)
        {
            SqlCommand cmd;
            cmd = new SqlCommand();
            cmd.CommandText = "pLoadMetaDataOrgMapping_V2";
            cmd.CommandTimeout = 180;
            cmd.CommandType = CommandType.StoredProcedure;
            SqlParameter _pDomain = new SqlParameter();
            _pDomain.ParameterName = "@pDomain";
            _pDomain.Size = 50;
            _pDomain.Value = pDomain;
            cmd.Parameters.Add(_pDomain);
            SqlParameter _pOrgID = new SqlParameter();
            _pOrgID.ParameterName = "@pOrgID";
            _pOrgID.Size = -1;
            _pOrgID.Value = pOrgID;
            cmd.Parameters.Add(_pOrgID);
            SqlParameter _pLangCode = new SqlParameter();
            _pLangCode.ParameterName = "@pLangCode";
            _pLangCode.Size = 10;
            _pLangCode.Value = pLangCode;
            cmd.Parameters.Add(_pLangCode);
            SqlParameter _ContextInfo = new SqlParameter();
            _ContextInfo.ParameterName = "@ContextInfo";
            _ContextInfo.Size = -1;
            _ContextInfo.Value = ContextInfo;
            cmd.Parameters.Add(_ContextInfo);
            return cmd;
        }
        public static SqlCommand pGetRateMaster_V2Command(int pOrgId, DataTable ContextInfo)
        {
            SqlCommand cmd;
            cmd = new SqlCommand();
            cmd.CommandText = "pGetRateMaster_V2";
            cmd.CommandTimeout = 180;
            cmd.CommandType = CommandType.StoredProcedure;
            SqlParameter _pOrgId = new SqlParameter();
            _pOrgId.ParameterName = "@pOrgId";
            _pOrgId.Size = -1;
            _pOrgId.Value = pOrgId;
            cmd.Parameters.Add(_pOrgId);
            SqlParameter _ContextInfo = new SqlParameter();
            _ContextInfo.ParameterName = "@ContextInfo";
            _ContextInfo.Size = -1;
            _ContextInfo.Value = ContextInfo;
            cmd.Parameters.Add(_ContextInfo);
            return cmd;
        }
        public static SqlCommand pGetCustomerName_V2Command(int pOrgID, DataTable ContextInfo)
        {
            SqlCommand cmd;
            cmd = new SqlCommand();
            cmd.CommandText = "pGetCustomerName_V2";
            cmd.CommandTimeout = 180;
            cmd.CommandType = CommandType.StoredProcedure;
            SqlParameter _pOrgID = new SqlParameter();
            _pOrgID.ParameterName = "@pOrgID";
            _pOrgID.Size = -1;
            _pOrgID.Value = pOrgID;
            cmd.Parameters.Add(_pOrgID);
            SqlParameter _ContextInfo = new SqlParameter();
            _ContextInfo.ParameterName = "@ContextInfo";
            _ContextInfo.Size = -1;
            _ContextInfo.Value = ContextInfo;
            cmd.Parameters.Add(_ContextInfo);
            return cmd;
        }
        public static SqlCommand pGetGroupValues_V2Command(int pOrgID, DataTable ContextInfo)
        {
            SqlCommand cmd;
            cmd = new SqlCommand();
            cmd.CommandText = "pGetGroupValues_V2";
            cmd.CommandTimeout = 180;
            cmd.CommandType = CommandType.StoredProcedure;
            SqlParameter _pOrgID = new SqlParameter();
            _pOrgID.ParameterName = "@pOrgID";
            _pOrgID.Size = -1;
            _pOrgID.Value = pOrgID;
            cmd.Parameters.Add(_pOrgID);
            SqlParameter _ContextInfo = new SqlParameter();
            _ContextInfo.ParameterName = "@ContextInfo";
            _ContextInfo.Size = -1;
            _ContextInfo.Value = ContextInfo;
            cmd.Parameters.Add(_ContextInfo);
            return cmd;
        }
        public static SqlCommand pGetEMRInvestigationHistory_V2Command(long PatientID, long VisitID, long InvID, string Type, int OrgID, DataTable ContextInfo)
        {
            SqlCommand cmd;
            cmd = new SqlCommand();
            cmd.CommandText = "pGetEMRInvestigationHistory_V2";
            cmd.CommandTimeout = 180;
            cmd.CommandType = CommandType.StoredProcedure;
            SqlParameter _PatientID = new SqlParameter();
            _PatientID.ParameterName = "@PatientID";
            _PatientID.Size = -1;
            _PatientID.Value = PatientID;
            cmd.Parameters.Add(_PatientID);
            SqlParameter _VisitID = new SqlParameter();
            _VisitID.ParameterName = "@VisitID";
            _VisitID.Size = -1;
            _VisitID.Value = VisitID;
            cmd.Parameters.Add(_VisitID);
            SqlParameter _InvID = new SqlParameter();
            _InvID.ParameterName = "@InvID";
            _InvID.Size = -1;
            _InvID.Value = InvID;
            cmd.Parameters.Add(_InvID);
            SqlParameter _Type = new SqlParameter();
            _Type.ParameterName = "@Type";
            _Type.Size = 200;
            _Type.Value = Type;
            cmd.Parameters.Add(_Type);
            SqlParameter _OrgID = new SqlParameter();
            _OrgID.ParameterName = "@OrgID";
            _OrgID.Size = -1;
            _OrgID.Value = OrgID;
            cmd.Parameters.Add(_OrgID);
            SqlParameter _ContextInfo = new SqlParameter();
            _ContextInfo.ParameterName = "@ContextInfo";
            _ContextInfo.Size = -1;
            _ContextInfo.Value = ContextInfo;
            cmd.Parameters.Add(_ContextInfo);
            return cmd;
        }
        public static SqlCommand pGetRateCardForBilling_V2Command(string prefixText, long pOrgId, string pType, long prefhospid, DataTable ContextInfo)
        {
            SqlCommand cmd;
            cmd = new SqlCommand();
            cmd.CommandText = "pGetRateCardForBilling_V2";
            cmd.CommandTimeout = 180;
            cmd.CommandType = CommandType.StoredProcedure;
            SqlParameter _prefixText = new SqlParameter();
            _prefixText.ParameterName = "@prefixText";
            _prefixText.Size = 30;
            _prefixText.Value = prefixText;
            cmd.Parameters.Add(_prefixText);
            SqlParameter _pOrgId = new SqlParameter();
            _pOrgId.ParameterName = "@pOrgId";
            _pOrgId.Size = -1;
            _pOrgId.Value = pOrgId;
            cmd.Parameters.Add(_pOrgId);
            SqlParameter _pType = new SqlParameter();
            _pType.ParameterName = "@pType";
            _pType.Size = 10;
            _pType.Value = pType;
            cmd.Parameters.Add(_pType);
            SqlParameter _prefhospid = new SqlParameter();
            _prefhospid.ParameterName = "@prefhospid";
            _prefhospid.Size = -1;
            _prefhospid.Value = prefhospid;
            cmd.Parameters.Add(_prefhospid);
            SqlParameter _ContextInfo = new SqlParameter();
            _ContextInfo.ParameterName = "@ContextInfo";
            _ContextInfo.Size = -1;
            _ContextInfo.Value = ContextInfo;
            cmd.Parameters.Add(_ContextInfo);
            return cmd;
        }
        public static SqlCommand pGetBannersText_V2Command(long pRoleID, long pLoginID, int pOrgiID, DataTable ContextInfo)
        {
            SqlCommand cmd;
            cmd = new SqlCommand();
            cmd.CommandText = "pGetBannersText_V2";
            cmd.CommandTimeout = 180;
            cmd.CommandType = CommandType.StoredProcedure;
            SqlParameter _pRoleID = new SqlParameter();
            _pRoleID.ParameterName = "@pRoleID";
            _pRoleID.Size = -1;
            _pRoleID.Value = pRoleID;
            cmd.Parameters.Add(_pRoleID);
            SqlParameter _pLoginID = new SqlParameter();
            _pLoginID.ParameterName = "@pLoginID";
            _pLoginID.Size = -1;
            _pLoginID.Value = pLoginID;
            cmd.Parameters.Add(_pLoginID);
            SqlParameter _pOrgiID = new SqlParameter();
            _pOrgiID.ParameterName = "@pOrgiID";
            _pOrgiID.Size = -1;
            _pOrgiID.Value = pOrgiID;
            cmd.Parameters.Add(_pOrgiID);
            SqlParameter _ContextInfo = new SqlParameter();
            _ContextInfo.ParameterName = "@ContextInfo";
            _ContextInfo.Size = -1;
            _ContextInfo.Value = ContextInfo;
            cmd.Parameters.Add(_ContextInfo);
            return cmd;
        }
        public static SqlCommand pGetMenuItems_V2Command(long RoleID, int OrgID, int pParentID, DataTable ContextInfo)
        {
            SqlCommand cmd;
            cmd = new SqlCommand();
            cmd.CommandText = "pGetMenuItems_V2";
            cmd.CommandTimeout = 180;
            cmd.CommandType = CommandType.StoredProcedure;
            SqlParameter _RoleID = new SqlParameter();
            _RoleID.ParameterName = "@RoleID";
            _RoleID.Size = -1;
            _RoleID.Value = RoleID;
            cmd.Parameters.Add(_RoleID);
            SqlParameter _OrgID = new SqlParameter();
            _OrgID.ParameterName = "@OrgID";
            _OrgID.Size = -1;
            _OrgID.Value = OrgID;
            cmd.Parameters.Add(_OrgID);
            SqlParameter _pParentID = new SqlParameter();
            _pParentID.ParameterName = "@pParentID";
            _pParentID.Size = -1;
            _pParentID.Value = pParentID;
            cmd.Parameters.Add(_pParentID);
            SqlParameter _ContextInfo = new SqlParameter();
            _ContextInfo.ParameterName = "@ContextInfo";
            _ContextInfo.Size = -1;
            _ContextInfo.Value = ContextInfo;
            cmd.Parameters.Add(_ContextInfo);
            return cmd;
        }
        public static SqlCommand pGetLoggedInRoles_V2Command(long loginid, long roleid, DataTable ContextInfo)
        {
            SqlCommand cmd;
            cmd = new SqlCommand();
            cmd.CommandText = "pGetLoggedInRoles_V2";
            cmd.CommandTimeout = 180;
            cmd.CommandType = CommandType.StoredProcedure;
            SqlParameter _loginid = new SqlParameter();
            _loginid.ParameterName = "@loginid";
            _loginid.Size = -1;
            _loginid.Value = loginid;
            cmd.Parameters.Add(_loginid);
            SqlParameter _roleid = new SqlParameter();
            _roleid.ParameterName = "@roleid";
            _roleid.Size = -1;
            _roleid.Value = roleid;
            cmd.Parameters.Add(_roleid);
            SqlParameter _ContextInfo = new SqlParameter();
            _ContextInfo.ParameterName = "@ContextInfo";
            _ContextInfo.Size = -1;
            _ContextInfo.Value = ContextInfo;
            cmd.Parameters.Add(_ContextInfo);
            return cmd;
        }
        public static SqlCommand pGetLocation_V2Command(int pOrgID, long pLID, long pRID, DataTable ContextInfo)
        {
            SqlCommand cmd;
            cmd = new SqlCommand();
            cmd.CommandText = "pGetLocation_V2";
            cmd.CommandTimeout = 180;
            cmd.CommandType = CommandType.StoredProcedure;
            SqlParameter _pOrgID = new SqlParameter();
            _pOrgID.ParameterName = "@pOrgID";
            _pOrgID.Size = -1;
            _pOrgID.Value = pOrgID;
            cmd.Parameters.Add(_pOrgID);
            SqlParameter _pLID = new SqlParameter();
            _pLID.ParameterName = "@pLID";
            _pLID.Size = -1;
            _pLID.Value = pLID;
            cmd.Parameters.Add(_pLID);
            SqlParameter _pRID = new SqlParameter();
            _pRID.ParameterName = "@pRID";
            _pRID.Size = -1;
            _pRID.Value = pRID;
            cmd.Parameters.Add(_pRID);
            SqlParameter _ContextInfo = new SqlParameter();
            _ContextInfo.ParameterName = "@ContextInfo";
            _ContextInfo.Size = -1;
            _ContextInfo.Value = ContextInfo;
            cmd.Parameters.Add(_ContextInfo);
            return cmd;
        }
        public static SqlCommand pGetThemeByUser_V2Command(DataTable ContextInfo)
        {
            SqlCommand cmd;
            cmd = new SqlCommand();
            cmd.CommandText = "pGetThemeByUser_V2";
            cmd.CommandTimeout = 180;
            cmd.CommandType = CommandType.StoredProcedure;
            SqlParameter _ContextInfo = new SqlParameter();
            _ContextInfo.ParameterName = "@ContextInfo";
            _ContextInfo.Size = -1;
            _ContextInfo.Value = ContextInfo;
            cmd.Parameters.Add(_ContextInfo);
            return cmd;
        }
        public static SqlCommand pGetpatientphoto_V2Command(long patientid, DataTable ContextInfo)
        {
            SqlCommand cmd;
            cmd = new SqlCommand();
            cmd.CommandText = "pGetpatientphoto_V2";
            cmd.CommandTimeout = 180;
            cmd.CommandType = CommandType.StoredProcedure;
            SqlParameter _patientid = new SqlParameter();
            _patientid.ParameterName = "@patientid";
            _patientid.Size = -1;
            _patientid.Value = patientid;
            cmd.Parameters.Add(_patientid);
            SqlParameter _ContextInfo = new SqlParameter();
            _ContextInfo.ParameterName = "@ContextInfo";
            _ContextInfo.Size = -1;
            _ContextInfo.Value = ContextInfo;
            cmd.Parameters.Add(_ContextInfo);
            return cmd;
        }
        public static SqlCommand pGetTRFDetails_V2Command(int patientid, int visitid, int pOrgID, string Type, DataTable ContextInfo)
        {
            SqlCommand cmd;
            cmd = new SqlCommand();
            cmd.CommandText = "pGetTRFDetails_V2";
            cmd.CommandTimeout = 180;
            cmd.CommandType = CommandType.StoredProcedure;
            SqlParameter _patientid = new SqlParameter();
            _patientid.ParameterName = "@patientid";
            _patientid.Size = -1;
            _patientid.Value = patientid;
            cmd.Parameters.Add(_patientid);
            SqlParameter _visitid = new SqlParameter();
            _visitid.ParameterName = "@visitid";
            _visitid.Size = -1;
            _visitid.Value = visitid;
            cmd.Parameters.Add(_visitid);
            SqlParameter _pOrgID = new SqlParameter();
            _pOrgID.ParameterName = "@pOrgID";
            _pOrgID.Size = -1;
            _pOrgID.Value = pOrgID;
            cmd.Parameters.Add(_pOrgID);
            SqlParameter _Type = new SqlParameter();
            _Type.ParameterName = "@Type";
            _Type.Size = 50;
            _Type.Value = Type;
            cmd.Parameters.Add(_Type);
            SqlParameter _ContextInfo = new SqlParameter();
            _ContextInfo.ParameterName = "@ContextInfo";
            _ContextInfo.Size = -1;
            _ContextInfo.Value = ContextInfo;
            cmd.Parameters.Add(_ContextInfo);
            return cmd;
        }
        public static SqlCommand pGetPatientHistoryPKGEdit_V2Command(long pVisitID, DataTable ContextInfo)
        {
            SqlCommand cmd;
            cmd = new SqlCommand();
            cmd.CommandText = "pGetPatientHistoryPKGEdit_V2";
            cmd.CommandTimeout = 180;
            cmd.CommandType = CommandType.StoredProcedure;
            SqlParameter _pVisitID = new SqlParameter();
            _pVisitID.ParameterName = "@pVisitID";
            _pVisitID.Size = -1;
            _pVisitID.Value = pVisitID;
            cmd.Parameters.Add(_pVisitID);
            SqlParameter _ContextInfo = new SqlParameter();
            _ContextInfo.ParameterName = "@ContextInfo";
            _ContextInfo.Size = -1;
            _ContextInfo.Value = ContextInfo;
            cmd.Parameters.Add(_ContextInfo);
            return cmd;
        }
        public static SqlCommand pLoadMetaData_V2Command(DataTable pDomain, DataTable ContextInfo)
        {
            SqlCommand cmd;
            cmd = new SqlCommand();
            cmd.CommandText = "pLoadMetaData_V2";
            cmd.CommandTimeout = 180;
            cmd.CommandType = CommandType.StoredProcedure;
            SqlParameter _pDomain = new SqlParameter();
            _pDomain.ParameterName = "@pDomain";
            _pDomain.Size = -1;
            _pDomain.Value = pDomain;
            cmd.Parameters.Add(_pDomain);
            SqlParameter _ContextInfo = new SqlParameter();
            _ContextInfo.ParameterName = "@ContextInfo";
            _ContextInfo.Size = -1;
            _ContextInfo.Value = ContextInfo;
            cmd.Parameters.Add(_ContextInfo);
            return cmd;
        }
        public static SqlCommand pGetRoomMasterDetails_V2Command(string pType, int pOrgID, int pOrgAddressID, int pBuildingID, DataTable ContextInfo)
        {
            SqlCommand cmd;
            cmd = new SqlCommand();
            cmd.CommandText = "pGetRoomMasterDetails_V2";
            cmd.CommandTimeout = 180;
            cmd.CommandType = CommandType.StoredProcedure;
            SqlParameter _pType = new SqlParameter();
            _pType.ParameterName = "@pType";
            _pType.Size = 50;
            _pType.Value = pType;
            cmd.Parameters.Add(_pType);
            SqlParameter _pOrgID = new SqlParameter();
            _pOrgID.ParameterName = "@pOrgID";
            _pOrgID.Size = -1;
            _pOrgID.Value = pOrgID;
            cmd.Parameters.Add(_pOrgID);
            SqlParameter _pOrgAddressID = new SqlParameter();
            _pOrgAddressID.ParameterName = "@pOrgAddressID";
            _pOrgAddressID.Size = -1;
            _pOrgAddressID.Value = pOrgAddressID;
            cmd.Parameters.Add(_pOrgAddressID);
            SqlParameter _pBuildingID = new SqlParameter();
            _pBuildingID.ParameterName = "@pBuildingID";
            _pBuildingID.Size = -1;
            _pBuildingID.Value = pBuildingID;
            cmd.Parameters.Add(_pBuildingID);
            SqlParameter _ContextInfo = new SqlParameter();
            _ContextInfo.ParameterName = "@ContextInfo";
            _ContextInfo.Size = -1;
            _ContextInfo.Value = ContextInfo;
            cmd.Parameters.Add(_ContextInfo);
            return cmd;
        }
        public static SqlCommand pGetClaimAmountLogic_V2Command(int pOrgID, DataTable ContextInfo)
        {
            SqlCommand cmd;
            cmd = new SqlCommand();
            cmd.CommandText = "pGetClaimAmountLogic_V2";
            cmd.CommandTimeout = 180;
            cmd.CommandType = CommandType.StoredProcedure;
            SqlParameter _pOrgID = new SqlParameter();
            _pOrgID.ParameterName = "@pOrgID";
            _pOrgID.Size = -1;
            _pOrgID.Value = pOrgID;
            cmd.Parameters.Add(_pOrgID);
            SqlParameter _ContextInfo = new SqlParameter();
            _ContextInfo.ParameterName = "@ContextInfo";
            _ContextInfo.Size = -1;
            _ContextInfo.Value = ContextInfo;
            cmd.Parameters.Add(_ContextInfo);
            return cmd;
        }
        public static SqlCommand pGetTaxMaster_V2Command(int pOrganizationID, DataTable ContextInfo)
        {
            SqlCommand cmd;
            cmd = new SqlCommand();
            cmd.CommandText = "pGetTaxMaster_V2";
            cmd.CommandTimeout = 180;
            cmd.CommandType = CommandType.StoredProcedure;
            SqlParameter _pOrganizationID = new SqlParameter();
            _pOrganizationID.ParameterName = "@pOrganizationID";
            _pOrganizationID.Size = -1;
            _pOrganizationID.Value = pOrganizationID;
            cmd.Parameters.Add(_pOrganizationID);
            SqlParameter _ContextInfo = new SqlParameter();
            _ContextInfo.ParameterName = "@ContextInfo";
            _ContextInfo.Size = -1;
            _ContextInfo.Value = ContextInfo;
            cmd.Parameters.Add(_ContextInfo);
            return cmd;
        }
        public static SqlCommand pGetLabDiscountLis_V2Command(int pOrgID, DataTable ContextInfo)
        {
            SqlCommand cmd;
            cmd = new SqlCommand();
            cmd.CommandText = "pGetLabDiscountLis_V2";
            cmd.CommandTimeout = 180;
            cmd.CommandType = CommandType.StoredProcedure;
            SqlParameter _pOrgID = new SqlParameter();
            _pOrgID.ParameterName = "@pOrgID";
            _pOrgID.Size = -1;
            _pOrgID.Value = pOrgID;
            cmd.Parameters.Add(_pOrgID);
            SqlParameter _ContextInfo = new SqlParameter();
            _ContextInfo.ParameterName = "@ContextInfo";
            _ContextInfo.Size = -1;
            _ContextInfo.Value = ContextInfo;
            cmd.Parameters.Add(_ContextInfo);
            return cmd;
        }
        public static SqlCommand pGetFeeType_V2Command(int pOrgID, string pVType, DataTable ContextInfo)
        {
            SqlCommand cmd;
            cmd = new SqlCommand();
            cmd.CommandText = "pGetFeeType_V2";
            cmd.CommandTimeout = 180;
            cmd.CommandType = CommandType.StoredProcedure;
            SqlParameter _pOrgID = new SqlParameter();
            _pOrgID.ParameterName = "@pOrgID";
            _pOrgID.Size = -1;
            _pOrgID.Value = pOrgID;
            cmd.Parameters.Add(_pOrgID);
            SqlParameter _pVType = new SqlParameter();
            _pVType.ParameterName = "@pVType";
            _pVType.Size = 10;
            _pVType.Value = pVType;
            cmd.Parameters.Add(_pVType);
            SqlParameter _ContextInfo = new SqlParameter();
            _ContextInfo.ParameterName = "@ContextInfo";
            _ContextInfo.Size = -1;
            _ContextInfo.Value = ContextInfo;
            cmd.Parameters.Add(_ContextInfo);
            return cmd;
        }
        public static SqlCommand pGetPaymentType_V2Command(long orgID, DataTable ContextInfo)
        {
            SqlCommand cmd;
            cmd = new SqlCommand();
            cmd.CommandText = "pGetPaymentType_V2";
            cmd.CommandTimeout = 180;
            cmd.CommandType = CommandType.StoredProcedure;
            SqlParameter _orgID = new SqlParameter();
            _orgID.ParameterName = "@orgID";
            _orgID.Size = -1;
            _orgID.Value = orgID;
            cmd.Parameters.Add(_orgID);
            SqlParameter _ContextInfo = new SqlParameter();
            _ContextInfo.ParameterName = "@ContextInfo";
            _ContextInfo.Size = -1;
            _ContextInfo.Value = ContextInfo;
            cmd.Parameters.Add(_ContextInfo);
            return cmd;
        }
        public static SqlCommand pGetCurrencyForOrg_V2Command(int pOrgID, out int pBaseCurrencyID, out string pBaseCurrencyCode, DataTable ContextInfo)
        {
            SqlCommand cmd;
            cmd = new SqlCommand();
            cmd.CommandText = "pGetCurrencyForOrg_V2";
            cmd.CommandTimeout = 180;
            cmd.CommandType = CommandType.StoredProcedure;
            SqlParameter _pOrgID = new SqlParameter();
            _pOrgID.ParameterName = "@pOrgID";
            _pOrgID.Size = -1;
            _pOrgID.Value = pOrgID;
            cmd.Parameters.Add(_pOrgID);
            pBaseCurrencyID = -1;
            SqlParameter _pBaseCurrencyID = new SqlParameter();
            _pBaseCurrencyID.ParameterName = "@pBaseCurrencyID";
            _pBaseCurrencyID.Size = -1;
            _pBaseCurrencyID.Value = pBaseCurrencyID;
            cmd.Parameters.Add(_pBaseCurrencyID);
            _pBaseCurrencyID.Direction = ParameterDirection.Output;
            pBaseCurrencyCode = null;
            SqlParameter _pBaseCurrencyCode = new SqlParameter();
            _pBaseCurrencyCode.ParameterName = "@pBaseCurrencyCode";
            _pBaseCurrencyCode.Size = 100;
            _pBaseCurrencyCode.Value = pBaseCurrencyCode;
            cmd.Parameters.Add(_pBaseCurrencyCode);
            _pBaseCurrencyCode.Direction = ParameterDirection.Output;
            SqlParameter _ContextInfo = new SqlParameter();
            _ContextInfo.ParameterName = "@ContextInfo";
            _ContextInfo.Size = -1;
            _ContextInfo.Value = ContextInfo;
            cmd.Parameters.Add(_ContextInfo);
            pBaseCurrencyCode = ((string)(_pBaseCurrencyCode.Value));
            return cmd;
        }
        public static SqlCommand pGetCurrencyForConversionRate_V2Command(int pOrgID, string Type, DataTable ContextInfo)
        {
            SqlCommand cmd;
            cmd = new SqlCommand();
            cmd.CommandText = "pGetCurrencyForConversionRate_V2";
            cmd.CommandTimeout = 180;
            cmd.CommandType = CommandType.StoredProcedure;
            SqlParameter _pOrgID = new SqlParameter();
            _pOrgID.ParameterName = "@pOrgID";
            _pOrgID.Size = -1;
            _pOrgID.Value = pOrgID;
            cmd.Parameters.Add(_pOrgID);
            SqlParameter _Type = new SqlParameter();
            _Type.ParameterName = "@Type";
            _Type.Size = 20;
            _Type.Value = Type;
            cmd.Parameters.Add(_Type);
            SqlParameter _ContextInfo = new SqlParameter();
            _ContextInfo.ParameterName = "@ContextInfo";
            _ContextInfo.Size = -1;
            _ContextInfo.Value = ContextInfo;
            cmd.Parameters.Add(_ContextInfo);
            return cmd;
        }
        public static SqlCommand pGetFeedbackType_V2Command(DataTable ContextInfo)
        {
            SqlCommand cmd;
            cmd = new SqlCommand();
            cmd.CommandText = "pGetFeedbackType_V2";
            cmd.CommandTimeout = 180;
            cmd.CommandType = CommandType.StoredProcedure;
            SqlParameter _ContextInfo = new SqlParameter();
            _ContextInfo.ParameterName = "@ContextInfo";
            _ContextInfo.Size = -1;
            _ContextInfo.Value = ContextInfo;
            cmd.Parameters.Add(_ContextInfo);
            return cmd;
        }
        public static SqlCommand pGetSalutation_V2Command(int pOrgID, string pLanguageCode, DataTable ContextInfo)
        {
            SqlCommand cmd;
            cmd = new SqlCommand();
            cmd.CommandText = "pGetSalutation_V2";
            cmd.CommandTimeout = 180;
            cmd.CommandType = CommandType.StoredProcedure;
            SqlParameter _pOrgID = new SqlParameter();
            _pOrgID.ParameterName = "@pOrgID";
            _pOrgID.Size = -1;
            _pOrgID.Value = pOrgID;
            cmd.Parameters.Add(_pOrgID);
            SqlParameter _pLanguageCode = new SqlParameter();
            _pLanguageCode.ParameterName = "@pLanguageCode";
            _pLanguageCode.Size = 10;
            _pLanguageCode.Value = pLanguageCode;
            cmd.Parameters.Add(_pLanguageCode);
            SqlParameter _ContextInfo = new SqlParameter();
            _ContextInfo.ParameterName = "@ContextInfo";
            _ContextInfo.Size = -1;
            _ContextInfo.Value = ContextInfo;
            cmd.Parameters.Add(_ContextInfo);
            return cmd;
        }
        public static SqlCommand pGetVisitPurpose_V2Command(int OrgID, DataTable ContextInfo)
        {
            SqlCommand cmd;
            cmd = new SqlCommand();
            cmd.CommandText = "pGetVisitPurpose_V2";
            cmd.CommandTimeout = 180;
            cmd.CommandType = CommandType.StoredProcedure;
            SqlParameter _OrgID = new SqlParameter();
            _OrgID.ParameterName = "@OrgID";
            _OrgID.Size = -1;
            _OrgID.Value = OrgID;
            cmd.Parameters.Add(_OrgID);
            SqlParameter _ContextInfo = new SqlParameter();
            _ContextInfo.ParameterName = "@ContextInfo";
            _ContextInfo.Size = -1;
            _ContextInfo.Value = ContextInfo;
            cmd.Parameters.Add(_ContextInfo);
            return cmd;
        }
        public static SqlCommand pGetCountryListLis_V2Command()
        {
            SqlCommand cmd;
            cmd = new SqlCommand();
            cmd.CommandText = "pGetCountryListLis_V2";
            cmd.CommandTimeout = 180;
            cmd.CommandType = CommandType.StoredProcedure;
            return cmd;
        }
        public static SqlCommand pGetStateByCountryLisCommand(short pCountryID)
        {
            SqlCommand cmd;
            cmd = new SqlCommand();
            cmd.CommandText = "pGetStateByCountryLis";
            cmd.CommandTimeout = 180;
            cmd.CommandType = CommandType.StoredProcedure;
            SqlParameter _pCountryID = new SqlParameter();
            _pCountryID.ParameterName = "@pCountryID";
            _pCountryID.Size = -1;
            _pCountryID.Value = pCountryID;
            cmd.Parameters.Add(_pCountryID);
            return cmd;
        }
        public static SqlCommand pGetEmployee_V2Command(int pOrgId, string pName, string ptype, DataTable ContextInfo)
        {
            SqlCommand cmd;
            cmd = new SqlCommand();
            cmd.CommandText = "pGetEmployee_V2";
            cmd.CommandTimeout = 180;
            cmd.CommandType = CommandType.StoredProcedure;
            SqlParameter _pOrgId = new SqlParameter();
            _pOrgId.ParameterName = "@pOrgId";
            _pOrgId.Size = -1;
            _pOrgId.Value = pOrgId;
            cmd.Parameters.Add(_pOrgId);
            SqlParameter _pName = new SqlParameter();
            _pName.ParameterName = "@pName";
            _pName.Size = 50;
            _pName.Value = pName;
            cmd.Parameters.Add(_pName);
            SqlParameter _ptype = new SqlParameter();
            _ptype.ParameterName = "@ptype";
            _ptype.Size = 30;
            _ptype.Value = ptype;
            cmd.Parameters.Add(_ptype);
            SqlParameter _ContextInfo = new SqlParameter();
            _ContextInfo.ParameterName = "@ContextInfo";
            _ContextInfo.Size = -1;
            _ContextInfo.Value = ContextInfo;
            cmd.Parameters.Add(_ContextInfo);
            return cmd;
        }
        public static SqlCommand pGetPreviousVisitBilling_V2Command(long pPatientID, long pVisitID, int OrgID, DataTable ContextInfo)
        {
            SqlCommand cmd;
            cmd = new SqlCommand();
            cmd.CommandText = "pGetPreviousVisitBilling_V2";
            cmd.CommandTimeout = 180;
            cmd.CommandType = CommandType.StoredProcedure;
            SqlParameter _pPatientID = new SqlParameter();
            _pPatientID.ParameterName = "@pPatientID";
            _pPatientID.Size = -1;
            _pPatientID.Value = pPatientID;
            cmd.Parameters.Add(_pPatientID);
            SqlParameter _pVisitID = new SqlParameter();
            _pVisitID.ParameterName = "@pVisitID";
            _pVisitID.Size = -1;
            _pVisitID.Value = pVisitID;
            cmd.Parameters.Add(_pVisitID);
            SqlParameter _OrgID = new SqlParameter();
            _OrgID.ParameterName = "@OrgID";
            _OrgID.Size = -1;
            _OrgID.Value = OrgID;
            cmd.Parameters.Add(_OrgID);
            SqlParameter _ContextInfo = new SqlParameter();
            _ContextInfo.ParameterName = "@ContextInfo";
            _ContextInfo.Size = -1;
            _ContextInfo.Value = ContextInfo;
            cmd.Parameters.Add(_ContextInfo);
            return cmd;
        }
        public static SqlCommand pGetReferringPhysician_v2Command(long pOrgId, string pPrefixText, long pClientId, DataTable pContextInfo)
        {
            SqlCommand cmd;
            cmd = new SqlCommand();
            cmd.CommandText = "pGetReferringPhysician_v2";
            cmd.CommandTimeout = 180;
            cmd.CommandType = CommandType.StoredProcedure;
            SqlParameter _pOrgId = new SqlParameter();
            _pOrgId.ParameterName = "@pOrgId";
            _pOrgId.Size = -1;
            _pOrgId.Value = pOrgId;
            cmd.Parameters.Add(_pOrgId);
            SqlParameter _pPrefixText = new SqlParameter();
            _pPrefixText.ParameterName = "@pPrefixText";
            _pPrefixText.Size = 50;
            _pPrefixText.Value = pPrefixText;
            cmd.Parameters.Add(_pPrefixText);
            SqlParameter _pClientId = new SqlParameter();
            _pClientId.ParameterName = "@pClientId";
            _pClientId.Size = -1;
            _pClientId.Value = pClientId;
            cmd.Parameters.Add(_pClientId);
            SqlParameter _pContextInfo = new SqlParameter();
            _pContextInfo.ParameterName = "@pContextInfo";
            _pContextInfo.Size = -1;
            _pContextInfo.Value = pContextInfo;
            cmd.Parameters.Add(_pContextInfo);
            return cmd;
        }
        public static SqlCommand pGetReferringHospital_v2Command(long pOrgId, string pPrefixText, long pClientId, DataTable pContextInfo)
        {
            SqlCommand cmd;
            cmd = new SqlCommand();
            cmd.CommandText = "pGetReferringHospital_v2";
            cmd.CommandTimeout = 180;
            cmd.CommandType = CommandType.StoredProcedure;
            SqlParameter _pOrgId = new SqlParameter();
            _pOrgId.ParameterName = "@pOrgId";
            _pOrgId.Size = -1;
            _pOrgId.Value = pOrgId;
            cmd.Parameters.Add(_pOrgId);
            SqlParameter _pPrefixText = new SqlParameter();
            _pPrefixText.ParameterName = "@pPrefixText";
            _pPrefixText.Size = 50;
            _pPrefixText.Value = pPrefixText;
            cmd.Parameters.Add(_pPrefixText);
            SqlParameter _pClientId = new SqlParameter();
            _pClientId.ParameterName = "@pClientId";
            _pClientId.Size = -1;
            _pClientId.Value = pClientId;
            cmd.Parameters.Add(_pClientId);
            SqlParameter _pContextInfo = new SqlParameter();
            _pContextInfo.ParameterName = "@pContextInfo";
            _pContextInfo.Size = -1;
            _pContextInfo.Value = pContextInfo;
            cmd.Parameters.Add(_pContextInfo);
            return cmd;
        }
        public static SqlCommand pGetClientForBilling_v2Command(long pClientID, string pPrefixText, long pOrgId, int pOrgAddressId, DataTable pContextInfo)
        {
            SqlCommand cmd;
            cmd = new SqlCommand();
            cmd.CommandText = "pGetClientForBilling_v2";
            cmd.CommandTimeout = 180;
            cmd.CommandType = CommandType.StoredProcedure;
            SqlParameter _pClientID = new SqlParameter();
            _pClientID.ParameterName = "@pClientID";
            _pClientID.Size = -1;
            _pClientID.Value = pClientID;
            cmd.Parameters.Add(_pClientID);
            SqlParameter _pPrefixText = new SqlParameter();
            _pPrefixText.ParameterName = "@pPrefixText";
            _pPrefixText.Size = 30;
            _pPrefixText.Value = pPrefixText;
            cmd.Parameters.Add(_pPrefixText);
            SqlParameter _pOrgId = new SqlParameter();
            _pOrgId.ParameterName = "@pOrgId";
            _pOrgId.Size = -1;
            _pOrgId.Value = pOrgId;
            cmd.Parameters.Add(_pOrgId);
            SqlParameter _pOrgAddressId = new SqlParameter();
            _pOrgAddressId.ParameterName = "@pOrgAddressId";
            _pOrgAddressId.Size = -1;
            _pOrgAddressId.Value = pOrgAddressId;
            cmd.Parameters.Add(_pOrgAddressId);
            SqlParameter _pContextInfo = new SqlParameter();
            _pContextInfo.ParameterName = "@pContextInfo";
            _pContextInfo.Size = -1;
            _pContextInfo.Value = pContextInfo;
            cmd.Parameters.Add(_pContextInfo);
            return cmd;
        }
        public static SqlCommand pGetReasonMaster_V2Command(short pReasonCategoryID, int pReasonTypeID, string pReasonCode, DataTable ContextInfo)
        {
            SqlCommand cmd;
            cmd = new SqlCommand();
            cmd.CommandText = "pGetReasonMaster_V2";
            cmd.CommandTimeout = 180;
            cmd.CommandType = CommandType.StoredProcedure;
            SqlParameter _pReasonCategoryID = new SqlParameter();
            _pReasonCategoryID.ParameterName = "@pReasonCategoryID";
            _pReasonCategoryID.Size = -1;
            _pReasonCategoryID.Value = pReasonCategoryID;
            cmd.Parameters.Add(_pReasonCategoryID);
            SqlParameter _pReasonTypeID = new SqlParameter();
            _pReasonTypeID.ParameterName = "@pReasonTypeID";
            _pReasonTypeID.Size = -1;
            _pReasonTypeID.Value = pReasonTypeID;
            cmd.Parameters.Add(_pReasonTypeID);
            SqlParameter _pReasonCode = new SqlParameter();
            _pReasonCode.ParameterName = "@pReasonCode";
            _pReasonCode.Size = 25;
            _pReasonCode.Value = pReasonCode;
            cmd.Parameters.Add(_pReasonCode);
            SqlParameter _ContextInfo = new SqlParameter();
            _ContextInfo.ParameterName = "@ContextInfo";
            _ContextInfo.Size = -1;
            _ContextInfo.Value = ContextInfo;
            cmd.Parameters.Add(_ContextInfo);
            return cmd;
        }
        public static SqlCommand pGetPatientforBilling_V2Command(string pSearchText, int pOrgID, DataTable ContextInfo)
        {
            SqlCommand cmd;
            cmd = new SqlCommand();
            cmd.CommandText = "pGetPatientforBilling_V2";
            cmd.CommandTimeout = 180;
            cmd.CommandType = CommandType.StoredProcedure;
            SqlParameter _pSearchText = new SqlParameter();
            _pSearchText.ParameterName = "@pSearchText";
            _pSearchText.Size = 50;
            _pSearchText.Value = pSearchText;
            cmd.Parameters.Add(_pSearchText);
            SqlParameter _pOrgID = new SqlParameter();
            _pOrgID.ParameterName = "@pOrgID";
            _pOrgID.Size = -1;
            _pOrgID.Value = pOrgID;
            cmd.Parameters.Add(_pOrgID);
            SqlParameter _ContextInfo = new SqlParameter();
            _ContextInfo.ParameterName = "@ContextInfo";
            _ContextInfo.Size = -1;
            _ContextInfo.Value = ContextInfo;
            cmd.Parameters.Add(_ContextInfo);
            return cmd;
        }
        public static SqlCommand pGetOrgWiseCurrency_V2Command(long pOrgID, DataTable ContextInfo)
        {
            SqlCommand cmd;
            cmd = new SqlCommand();
            cmd.CommandText = "pGetOrgWiseCurrency_V2";
            cmd.CommandTimeout = 180;
            cmd.CommandType = CommandType.StoredProcedure;
            SqlParameter _pOrgID = new SqlParameter();
            _pOrgID.ParameterName = "@pOrgID";
            _pOrgID.Size = -1;
            _pOrgID.Value = pOrgID;
            cmd.Parameters.Add(_pOrgID);
            SqlParameter _ContextInfo = new SqlParameter();
            _ContextInfo.ParameterName = "@ContextInfo";
            _ContextInfo.Size = -1;
            _ContextInfo.Value = ContextInfo;
            cmd.Parameters.Add(_ContextInfo);
            return cmd;
        }
        public static SqlCommand pGetBankName_V2Command(string pSearchText, int pOrgID, DataTable ContextInfo)
        {
            SqlCommand cmd;
            cmd = new SqlCommand();
            cmd.CommandText = "pGetBankName_V2";
            cmd.CommandTimeout = 180;
            cmd.CommandType = CommandType.StoredProcedure;
            SqlParameter _pSearchText = new SqlParameter();
            _pSearchText.ParameterName = "@pSearchText";
            _pSearchText.Size = 50;
            _pSearchText.Value = pSearchText;
            cmd.Parameters.Add(_pSearchText);
            SqlParameter _pOrgID = new SqlParameter();
            _pOrgID.ParameterName = "@pOrgID";
            _pOrgID.Size = -1;
            _pOrgID.Value = pOrgID;
            cmd.Parameters.Add(_pOrgID);
            SqlParameter _ContextInfo = new SqlParameter();
            _ContextInfo.ParameterName = "@ContextInfo";
            _ContextInfo.Size = -1;
            _ContextInfo.Value = ContextInfo;
            cmd.Parameters.Add(_ContextInfo);
            return cmd;
        }
        public static SqlCommand pGetCoupons_V2Command(string pSearchText, int pOrgID, DataTable ContextInfo)
        {
            SqlCommand cmd;
            cmd = new SqlCommand();
            cmd.CommandText = "pGetCoupons_V2";
            cmd.CommandTimeout = 180;
            cmd.CommandType = CommandType.StoredProcedure;
            SqlParameter _pSearchText = new SqlParameter();
            _pSearchText.ParameterName = "@pSearchText";
            _pSearchText.Size = 20;
            _pSearchText.Value = pSearchText;
            cmd.Parameters.Add(_pSearchText);
            SqlParameter _pOrgID = new SqlParameter();
            _pOrgID.ParameterName = "@pOrgID";
            _pOrgID.Size = -1;
            _pOrgID.Value = pOrgID;
            cmd.Parameters.Add(_pOrgID);
            SqlParameter _ContextInfo = new SqlParameter();
            _ContextInfo.ParameterName = "@ContextInfo";
            _ContextInfo.Size = -1;
            _ContextInfo.Value = ContextInfo;
            cmd.Parameters.Add(_ContextInfo);
            return cmd;
        }
        public static SqlCommand pGetPatientDetailsforBilling_V2Command(long pPatientID, int pOrgID, DataTable ContextInfo)
        {
            SqlCommand cmd;
            cmd = new SqlCommand();
            cmd.CommandText = "pGetPatientDetailsforBilling_V2";
            cmd.CommandTimeout = 180;
            cmd.CommandType = CommandType.StoredProcedure;
            SqlParameter _pPatientID = new SqlParameter();
            _pPatientID.ParameterName = "@pPatientID";
            _pPatientID.Size = -1;
            _pPatientID.Value = pPatientID;
            cmd.Parameters.Add(_pPatientID);
            SqlParameter _pOrgID = new SqlParameter();
            _pOrgID.ParameterName = "@pOrgID";
            _pOrgID.Size = -1;
            _pOrgID.Value = pOrgID;
            cmd.Parameters.Add(_pOrgID);
            SqlParameter _ContextInfo = new SqlParameter();
            _ContextInfo.ParameterName = "@ContextInfo";
            _ContextInfo.Size = -1;
            _ContextInfo.Value = ContextInfo;
            cmd.Parameters.Add(_ContextInfo);
            return cmd;
        }
        public static SqlCommand pGetPatientVisitDetailsforBilling_V2Command(long VisitID, int pOrgID, DataTable ContextInfo)
        {
            SqlCommand cmd;
            cmd = new SqlCommand();
            cmd.CommandText = "pGetPatientVisitDetailsforBilling_V2";
            cmd.CommandTimeout = 180;
            cmd.CommandType = CommandType.StoredProcedure;
            SqlParameter _VisitID = new SqlParameter();
            _VisitID.ParameterName = "@VisitID";
            _VisitID.Size = -1;
            _VisitID.Value = VisitID;
            cmd.Parameters.Add(_VisitID);
            SqlParameter _pOrgID = new SqlParameter();
            _pOrgID.ParameterName = "@pOrgID";
            _pOrgID.Size = -1;
            _pOrgID.Value = pOrgID;
            cmd.Parameters.Add(_pOrgID);
            SqlParameter _ContextInfo = new SqlParameter();
            _ContextInfo.ParameterName = "@ContextInfo";
            _ContextInfo.Size = -1;
            _ContextInfo.Value = ContextInfo;
            cmd.Parameters.Add(_ContextInfo);
            return cmd;
        }
        public static SqlCommand pGetBillingItemsDetails_V2Command(int pOrgID, int pFeeID, string pFeeType, long pClientID, long pVisitID, string pIsCollected, DateTime pCollectedDatetime, DataTable ContextInfo)
        {
            SqlCommand cmd;
            cmd = new SqlCommand();
            cmd.CommandText = "pGetBillingItemsDetails_V2";
            cmd.CommandTimeout = 180;
            cmd.CommandType = CommandType.StoredProcedure;
            SqlParameter _pOrgID = new SqlParameter();
            _pOrgID.ParameterName = "@pOrgID";
            _pOrgID.Size = -1;
            _pOrgID.Value = pOrgID;
            cmd.Parameters.Add(_pOrgID);
            SqlParameter _pFeeID = new SqlParameter();
            _pFeeID.ParameterName = "@pFeeID";
            _pFeeID.Size = -1;
            _pFeeID.Value = pFeeID;
            cmd.Parameters.Add(_pFeeID);
            SqlParameter _pFeeType = new SqlParameter();
            _pFeeType.ParameterName = "@pFeeType";
            _pFeeType.Size = 20;
            _pFeeType.Value = pFeeType;
            cmd.Parameters.Add(_pFeeType);
            SqlParameter _pClientID = new SqlParameter();
            _pClientID.ParameterName = "@pClientID";
            _pClientID.Size = -1;
            _pClientID.Value = pClientID;
            cmd.Parameters.Add(_pClientID);
            SqlParameter _pVisitID = new SqlParameter();
            _pVisitID.ParameterName = "@pVisitID";
            _pVisitID.Size = -1;
            _pVisitID.Value = pVisitID;
            cmd.Parameters.Add(_pVisitID);
            SqlParameter _pIsCollected = new SqlParameter();
            _pIsCollected.ParameterName = "@pIsCollected";
            _pIsCollected.Size = 1;
            _pIsCollected.Value = pIsCollected;
            cmd.Parameters.Add(_pIsCollected);
            SqlParameter _pCollectedDatetime = new SqlParameter();
            _pCollectedDatetime.ParameterName = "@pCollectedDatetime";
            _pCollectedDatetime.Size = -1;
            _pCollectedDatetime.Value = pCollectedDatetime;
            cmd.Parameters.Add(_pCollectedDatetime);
            SqlParameter _ContextInfo = new SqlParameter();
            _ContextInfo.ParameterName = "@ContextInfo";
            _ContextInfo.Size = -1;
            _ContextInfo.Value = ContextInfo;
            cmd.Parameters.Add(_ContextInfo);
            return cmd;
        }
        public static SqlCommand pGetBillingItems_V2Command(string pDescription, string pFeeType, int pOrgID, int pOrgAddress, string pGender, long pClientID, long pRateID, string pIsMapped, DataTable ContextInfo)
        {
            SqlCommand cmd;
            cmd = new SqlCommand();
            cmd.CommandText = "pGetBillingItems_V2";
            cmd.CommandTimeout = 180;
            cmd.CommandType = CommandType.StoredProcedure;
            SqlParameter _pDescription = new SqlParameter();
            _pDescription.ParameterName = "@pDescription";
            _pDescription.Size = 100;
            _pDescription.Value = pDescription;
            cmd.Parameters.Add(_pDescription);
            SqlParameter _pFeeType = new SqlParameter();
            _pFeeType.ParameterName = "@pFeeType";
            _pFeeType.Size = 20;
            _pFeeType.Value = pFeeType;
            cmd.Parameters.Add(_pFeeType);
            SqlParameter _pOrgID = new SqlParameter();
            _pOrgID.ParameterName = "@pOrgID";
            _pOrgID.Size = -1;
            _pOrgID.Value = pOrgID;
            cmd.Parameters.Add(_pOrgID);
            SqlParameter _pOrgAddress = new SqlParameter();
            _pOrgAddress.ParameterName = "@pOrgAddress";
            _pOrgAddress.Size = -1;
            _pOrgAddress.Value = pOrgAddress;
            cmd.Parameters.Add(_pOrgAddress);
            SqlParameter _pGender = new SqlParameter();
            _pGender.ParameterName = "@pGender";
            _pGender.Size = 1;
            _pGender.Value = pGender;
            cmd.Parameters.Add(_pGender);
            SqlParameter _pClientID = new SqlParameter();
            _pClientID.ParameterName = "@pClientID";
            _pClientID.Size = -1;
            _pClientID.Value = pClientID;
            cmd.Parameters.Add(_pClientID);
            SqlParameter _pRateID = new SqlParameter();
            _pRateID.ParameterName = "@pRateID";
            _pRateID.Size = -1;
            _pRateID.Value = pRateID;
            cmd.Parameters.Add(_pRateID);
            SqlParameter _pIsMapped = new SqlParameter();
            _pIsMapped.ParameterName = "@pIsMapped";
            _pIsMapped.Size = 1;
            _pIsMapped.Value = pIsMapped;
            cmd.Parameters.Add(_pIsMapped);
            SqlParameter _ContextInfo = new SqlParameter();
            _ContextInfo.ParameterName = "@ContextInfo";
            _ContextInfo.Size = -1;
            _ContextInfo.Value = ContextInfo;
            cmd.Parameters.Add(_ContextInfo);
            return cmd;
        }
        public static SqlCommand pGetTATReportDetails_V2Command(int pOrgID, int pFeeID, string pFeeType, long pClientID, DateTime pCollectedDatetime, DataTable ContextInfo, out string TATDateTime, out string Reportdatetime)
        {
            SqlCommand cmd;
            cmd = new SqlCommand();
            cmd.CommandText = "pGetTATReportDetails_V2";
            cmd.CommandTimeout = 180;
            cmd.CommandType = CommandType.StoredProcedure;
            SqlParameter _pOrgID = new SqlParameter();
            _pOrgID.ParameterName = "@pOrgID";
            _pOrgID.Size = -1;
            _pOrgID.Value = pOrgID;
            cmd.Parameters.Add(_pOrgID);
            SqlParameter _pFeeID = new SqlParameter();
            _pFeeID.ParameterName = "@pFeeID";
            _pFeeID.Size = -1;
            _pFeeID.Value = pFeeID;
            cmd.Parameters.Add(_pFeeID);
            SqlParameter _pFeeType = new SqlParameter();
            _pFeeType.ParameterName = "@pFeeType";
            _pFeeType.Size = 20;
            _pFeeType.Value = pFeeType;
            cmd.Parameters.Add(_pFeeType);
            SqlParameter _pClientID = new SqlParameter();
            _pClientID.ParameterName = "@pClientID";
            _pClientID.Size = -1;
            _pClientID.Value = pClientID;
            cmd.Parameters.Add(_pClientID);
            SqlParameter _pCollectedDatetime = new SqlParameter();
            _pCollectedDatetime.ParameterName = "@pCollectedDatetime";
            _pCollectedDatetime.Size = -1;
            _pCollectedDatetime.Value = pCollectedDatetime;
            cmd.Parameters.Add(_pCollectedDatetime);
            SqlParameter _ContextInfo = new SqlParameter();
            _ContextInfo.ParameterName = "@ContextInfo";
            _ContextInfo.Size = -1;
            _ContextInfo.Value = ContextInfo;
            cmd.Parameters.Add(_ContextInfo);
            TATDateTime = null;
            SqlParameter _TATDateTime = new SqlParameter();
            _TATDateTime.ParameterName = "@TATDateTime";
            _TATDateTime.Size = 20;
            _TATDateTime.Value = TATDateTime;
            cmd.Parameters.Add(_TATDateTime);
            _TATDateTime.Direction = ParameterDirection.Output;
            Reportdatetime = null;
            SqlParameter _Reportdatetime = new SqlParameter();
            _Reportdatetime.ParameterName = "@Reportdatetime";
            _Reportdatetime.Size = 25;
            _Reportdatetime.Value = Reportdatetime;
            cmd.Parameters.Add(_Reportdatetime);
            _Reportdatetime.Direction = ParameterDirection.Output;
            Reportdatetime = ((string)(_Reportdatetime.Value));
            return cmd;
        }
        public static SqlCommand pGetUserNameWithLoginIDLis_V2Command(string pUserName, int pOrgID, string TypeName, DataTable ContextInfo)
        {
            SqlCommand cmd;
            cmd = new SqlCommand();
            cmd.CommandText = "pGetUserNameWithLoginIDLis_V2";
            cmd.CommandTimeout = 180;
            cmd.CommandType = CommandType.StoredProcedure;
            SqlParameter _pUserName = new SqlParameter();
            _pUserName.ParameterName = "@pUserName";
            _pUserName.Size = 50;
            _pUserName.Value = pUserName;
            cmd.Parameters.Add(_pUserName);
            SqlParameter _pOrgID = new SqlParameter();
            _pOrgID.ParameterName = "@pOrgID";
            _pOrgID.Size = -1;
            _pOrgID.Value = pOrgID;
            cmd.Parameters.Add(_pOrgID);
            SqlParameter _TypeName = new SqlParameter();
            _TypeName.ParameterName = "@TypeName";
            _TypeName.Size = 50;
            _TypeName.Value = TypeName;
            cmd.Parameters.Add(_TypeName);
            SqlParameter _ContextInfo = new SqlParameter();
            _ContextInfo.ParameterName = "@ContextInfo";
            _ContextInfo.Size = -1;
            _ContextInfo.Value = ContextInfo;
            cmd.Parameters.Add(_ContextInfo);
            return cmd;
        }
        public static SqlCommand pGetQuickPatientAdvanceSearch_V2Command(string pFirstName, string pMiddleName, string pLastName, string pPatientNo, string pPhoneNo, string pBookingNo, long pClientID, string pClientCode, int pOrgId, DataTable ContextInfo)
        {
            SqlCommand cmd;
            cmd = new SqlCommand();
            cmd.CommandText = "pGetQuickPatientAdvanceSearch_V2";
            cmd.CommandTimeout = 180;
            cmd.CommandType = CommandType.StoredProcedure;
            SqlParameter _pFirstName = new SqlParameter();
            _pFirstName.ParameterName = "@pFirstName";
            _pFirstName.Size = 50;
            _pFirstName.Value = pFirstName;
            cmd.Parameters.Add(_pFirstName);
            SqlParameter _pMiddleName = new SqlParameter();
            _pMiddleName.ParameterName = "@pMiddleName";
            _pMiddleName.Size = 50;
            _pMiddleName.Value = pMiddleName;
            cmd.Parameters.Add(_pMiddleName);
            SqlParameter _pLastName = new SqlParameter();
            _pLastName.ParameterName = "@pLastName";
            _pLastName.Size = 50;
            _pLastName.Value = pLastName;
            cmd.Parameters.Add(_pLastName);
            SqlParameter _pPatientNo = new SqlParameter();
            _pPatientNo.ParameterName = "@pPatientNo";
            _pPatientNo.Size = 50;
            _pPatientNo.Value = pPatientNo;
            cmd.Parameters.Add(_pPatientNo);
            SqlParameter _pPhoneNo = new SqlParameter();
            _pPhoneNo.ParameterName = "@pPhoneNo";
            _pPhoneNo.Size = 50;
            _pPhoneNo.Value = pPhoneNo;
            cmd.Parameters.Add(_pPhoneNo);
            SqlParameter _pBookingNo = new SqlParameter();
            _pBookingNo.ParameterName = "@pBookingNo";
            _pBookingNo.Size = 50;
            _pBookingNo.Value = pBookingNo;
            cmd.Parameters.Add(_pBookingNo);
            SqlParameter _pClientID = new SqlParameter();
            _pClientID.ParameterName = "@pClientID";
            _pClientID.Size = -1;
            _pClientID.Value = pClientID;
            cmd.Parameters.Add(_pClientID);
            SqlParameter _pClientCode = new SqlParameter();
            _pClientCode.ParameterName = "@pClientCode";
            _pClientCode.Size = 200;
            _pClientCode.Value = pClientCode;
            cmd.Parameters.Add(_pClientCode);
            SqlParameter _pOrgId = new SqlParameter();
            _pOrgId.ParameterName = "@pOrgId";
            _pOrgId.Size = -1;
            _pOrgId.Value = pOrgId;
            cmd.Parameters.Add(_pOrgId);
            SqlParameter _ContextInfo = new SqlParameter();
            _ContextInfo.ParameterName = "@ContextInfo";
            _ContextInfo.Size = -1;
            _ContextInfo.Value = ContextInfo;
            cmd.Parameters.Add(_ContextInfo);
            return cmd;
        }
        public static SqlCommand pGetHealthPackageDataSearch_V2Command(int pOrgID, string groupName, int Pkgid, DataTable ContextInfo)
        {
            SqlCommand cmd;
            cmd = new SqlCommand();
            cmd.CommandText = "pGetHealthPackageDataSearch_V2";
            cmd.CommandTimeout = 180;
            cmd.CommandType = CommandType.StoredProcedure;
            SqlParameter _pOrgID = new SqlParameter();
            _pOrgID.ParameterName = "@pOrgID";
            _pOrgID.Size = -1;
            _pOrgID.Value = pOrgID;
            cmd.Parameters.Add(_pOrgID);
            SqlParameter _groupName = new SqlParameter();
            _groupName.ParameterName = "@groupName";
            _groupName.Size = 100;
            _groupName.Value = groupName;
            cmd.Parameters.Add(_groupName);
            SqlParameter _Pkgid = new SqlParameter();
            _Pkgid.ParameterName = "@Pkgid";
            _Pkgid.Size = -1;
            _Pkgid.Value = Pkgid;
            cmd.Parameters.Add(_Pkgid);
            SqlParameter _ContextInfo = new SqlParameter();
            _ContextInfo.ParameterName = "@ContextInfo";
            _ContextInfo.Size = -1;
            _ContextInfo.Value = ContextInfo;
            cmd.Parameters.Add(_ContextInfo);
            return cmd;
        }
        public static SqlCommand pGetCommunicationConfig_V2Command(int pOrgID, string pType, DataTable ContextInfo)
        {
            SqlCommand cmd;
            cmd = new SqlCommand();
            cmd.CommandText = "pGetCommunicationConfig_V2";
            cmd.CommandTimeout = 180;
            cmd.CommandType = CommandType.StoredProcedure;
            SqlParameter _pOrgID = new SqlParameter();
            _pOrgID.ParameterName = "@pOrgID";
            _pOrgID.Size = -1;
            _pOrgID.Value = pOrgID;
            cmd.Parameters.Add(_pOrgID);
            SqlParameter _pType = new SqlParameter();
            _pType.ParameterName = "@pType";
            _pType.Size = 50;
            _pType.Value = pType;
            cmd.Parameters.Add(_pType);
            SqlParameter _ContextInfo = new SqlParameter();
            _ContextInfo.ParameterName = "@ContextInfo";
            _ContextInfo.Size = -1;
            _ContextInfo.Value = ContextInfo;
            cmd.Parameters.Add(_ContextInfo);
            return cmd;
        }
        public static SqlCommand pPerformingNextAction_V2Command(long PageID, string ButtonName, long RoleID, long PatientID, int OrgID, long PatientVisitID, int pSampleID, string pIds, DataTable ContextInfo)
        {
            SqlCommand cmd;
            cmd = new SqlCommand();
            cmd.CommandText = "pPerformingNextAction_V2";
            cmd.CommandTimeout = 180;
            cmd.CommandType = CommandType.StoredProcedure;
            SqlParameter _PageID = new SqlParameter();
            _PageID.ParameterName = "@PageID";
            _PageID.Size = -1;
            _PageID.Value = PageID;
            cmd.Parameters.Add(_PageID);
            SqlParameter _ButtonName = new SqlParameter();
            _ButtonName.ParameterName = "@ButtonName";
            _ButtonName.Size = 124;
            _ButtonName.Value = ButtonName;
            cmd.Parameters.Add(_ButtonName);
            SqlParameter _RoleID = new SqlParameter();
            _RoleID.ParameterName = "@RoleID";
            _RoleID.Size = -1;
            _RoleID.Value = RoleID;
            cmd.Parameters.Add(_RoleID);
            SqlParameter _PatientID = new SqlParameter();
            _PatientID.ParameterName = "@PatientID";
            _PatientID.Size = -1;
            _PatientID.Value = PatientID;
            cmd.Parameters.Add(_PatientID);
            SqlParameter _OrgID = new SqlParameter();
            _OrgID.ParameterName = "@OrgID";
            _OrgID.Size = -1;
            _OrgID.Value = OrgID;
            cmd.Parameters.Add(_OrgID);
            SqlParameter _PatientVisitID = new SqlParameter();
            _PatientVisitID.ParameterName = "@PatientVisitID";
            _PatientVisitID.Size = -1;
            _PatientVisitID.Value = PatientVisitID;
            cmd.Parameters.Add(_PatientVisitID);
            SqlParameter _pSampleID = new SqlParameter();
            _pSampleID.ParameterName = "@pSampleID";
            _pSampleID.Size = -1;
            _pSampleID.Value = pSampleID;
            cmd.Parameters.Add(_pSampleID);
            SqlParameter _pIds = new SqlParameter();
            _pIds.ParameterName = "@pIds";
            _pIds.Size = 1000;
            _pIds.Value = pIds;
            cmd.Parameters.Add(_pIds);
            SqlParameter _ContextInfo = new SqlParameter();
            _ContextInfo.ParameterName = "@ContextInfo";
            _ContextInfo.Size = -1;
            _ContextInfo.Value = ContextInfo;
            cmd.Parameters.Add(_ContextInfo);
            return cmd;
        }
        public static SqlCommand pInsertNotifications_V2Command(DataTable ActionDetail, DataTable ContextInfo)
        {
            SqlCommand cmd;
            cmd = new SqlCommand();
            cmd.CommandText = "pInsertNotifications_V2";
            cmd.CommandTimeout = 180;
            cmd.CommandType = CommandType.StoredProcedure;
            SqlParameter _ActionDetail = new SqlParameter();
            _ActionDetail.ParameterName = "@ActionDetail";
            _ActionDetail.Size = -1;
            _ActionDetail.Value = ActionDetail;
            cmd.Parameters.Add(_ActionDetail);
            SqlParameter _ContextInfo = new SqlParameter();
            _ContextInfo.ParameterName = "@ContextInfo";
            _ContextInfo.Size = -1;
            _ContextInfo.Value = ContextInfo;
            cmd.Parameters.Add(_ContextInfo);
            return cmd;
        }
        public static SqlCommand pGetNextID_V2Command(long OrgID, string IDType, string ID, long pOrgAddressID, long RefID, string RefType)
        {
            SqlCommand cmd;
            cmd = new SqlCommand();
            cmd.CommandText = "pGetNextID_V2";
            cmd.CommandTimeout = 180;
            cmd.CommandType = CommandType.StoredProcedure;
            SqlParameter _OrgID = new SqlParameter();
            _OrgID.ParameterName = "@OrgID";
            _OrgID.Size = -1;
            _OrgID.Value = OrgID;
            cmd.Parameters.Add(_OrgID);
            SqlParameter _IDType = new SqlParameter();
            _IDType.ParameterName = "@IDType";
            _IDType.Size = 5;
            _IDType.Value = IDType;
            cmd.Parameters.Add(_IDType);
            SqlParameter _ID = new SqlParameter();
            _ID.ParameterName = "@ID";
            _ID.Size = 256;
            _ID.Value = ID;
            cmd.Parameters.Add(_ID);
            SqlParameter _pOrgAddressID = new SqlParameter();
            _pOrgAddressID.ParameterName = "@pOrgAddressID";
            _pOrgAddressID.Size = -1;
            _pOrgAddressID.Value = pOrgAddressID;
            cmd.Parameters.Add(_pOrgAddressID);
            SqlParameter _RefID = new SqlParameter();
            _RefID.ParameterName = "@RefID";
            _RefID.Size = -1;
            _RefID.Value = RefID;
            cmd.Parameters.Add(_RefID);
            SqlParameter _RefType = new SqlParameter();
            _RefType.ParameterName = "@RefType";
            _RefType.Size = 8;
            _RefType.Value = RefType;
            cmd.Parameters.Add(_RefType);
            return cmd;
        }
        public static SqlCommand pGetInvestigationSamples_V2Command(long PatientVisitID, int OrgID, long RoleID, string gUID, int plocationID, int TaskActionID, DataTable ContextInfo)
        {
            SqlCommand cmd;
            cmd = new SqlCommand();
            cmd.CommandText = "pGetInvestigationSamples_V2";
            cmd.CommandTimeout = 180;
            cmd.CommandType = CommandType.StoredProcedure;
            SqlParameter _PatientVisitID = new SqlParameter();
            _PatientVisitID.ParameterName = "@PatientVisitID";
            _PatientVisitID.Size = -1;
            _PatientVisitID.Value = PatientVisitID;
            cmd.Parameters.Add(_PatientVisitID);
            SqlParameter _OrgID = new SqlParameter();
            _OrgID.ParameterName = "@OrgID";
            _OrgID.Size = -1;
            _OrgID.Value = OrgID;
            cmd.Parameters.Add(_OrgID);
            SqlParameter _RoleID = new SqlParameter();
            _RoleID.ParameterName = "@RoleID";
            _RoleID.Size = -1;
            _RoleID.Value = RoleID;
            cmd.Parameters.Add(_RoleID);
            SqlParameter _gUID = new SqlParameter();
            _gUID.ParameterName = "@gUID";
            _gUID.Size = 255;
            _gUID.Value = gUID;
            cmd.Parameters.Add(_gUID);
            SqlParameter _plocationID = new SqlParameter();
            _plocationID.ParameterName = "@plocationID";
            _plocationID.Size = -1;
            _plocationID.Value = plocationID;
            cmd.Parameters.Add(_plocationID);
            SqlParameter _TaskActionID = new SqlParameter();
            _TaskActionID.ParameterName = "@TaskActionID";
            _TaskActionID.Size = -1;
            _TaskActionID.Value = TaskActionID;
            cmd.Parameters.Add(_TaskActionID);
            SqlParameter _ContextInfo = new SqlParameter();
            _ContextInfo.ParameterName = "@ContextInfo";
            _ContextInfo.Size = -1;
            _ContextInfo.Value = ContextInfo;
            cmd.Parameters.Add(_ContextInfo);
            return cmd;
        }
        public static SqlCommand pInsertInvestigation_V2Command(DataTable pPatientInvTable, long OrgID, string pGUId, out int returnstatus, DataTable ContextInfo)
        {
            SqlCommand cmd;
            cmd = new SqlCommand();
            cmd.CommandText = "pInsertInvestigation_V2";
            cmd.CommandTimeout = 180;
            cmd.CommandType = CommandType.StoredProcedure;
            SqlParameter _pPatientInvTable = new SqlParameter();
            _pPatientInvTable.ParameterName = "@pPatientInvTable";
            _pPatientInvTable.Size = -1;
            _pPatientInvTable.Value = pPatientInvTable;
            cmd.Parameters.Add(_pPatientInvTable);
            SqlParameter _OrgID = new SqlParameter();
            _OrgID.ParameterName = "@OrgID";
            _OrgID.Size = -1;
            _OrgID.Value = OrgID;
            cmd.Parameters.Add(_OrgID);
            SqlParameter _pGUId = new SqlParameter();
            _pGUId.ParameterName = "@pGUId";
            _pGUId.Size = 255;
            _pGUId.Value = pGUId;
            cmd.Parameters.Add(_pGUId);
            returnstatus = -1;
            SqlParameter _returnstatus = new SqlParameter();
            _returnstatus.ParameterName = "@returnstatus";
            _returnstatus.Size = -1;
            _returnstatus.Value = returnstatus;
            cmd.Parameters.Add(_returnstatus);
            _returnstatus.Direction = ParameterDirection.Output;
            SqlParameter _ContextInfo = new SqlParameter();
            _ContextInfo.ParameterName = "@ContextInfo";
            _ContextInfo.Size = -1;
            _ContextInfo.Value = ContextInfo;
            cmd.Parameters.Add(_ContextInfo);
            returnstatus = ((int)(_returnstatus.Value));
            return cmd;
        }
        public static SqlCommand pSavePatientInvSampleNMapping_V2Command(DataTable SaveIPInvSample, DataTable pSampleMapping, string pGuid, int pOrgID, out int returnstatus, DataTable ContextInfo)
        {
            SqlCommand cmd;
            cmd = new SqlCommand();
            cmd.CommandText = "pSavePatientInvSampleNMapping_V2";
            cmd.CommandTimeout = 180;
            cmd.CommandType = CommandType.StoredProcedure;
            SqlParameter _SaveIPInvSample = new SqlParameter();
            _SaveIPInvSample.ParameterName = "@SaveIPInvSample";
            _SaveIPInvSample.Size = -1;
            _SaveIPInvSample.Value = SaveIPInvSample;
            cmd.Parameters.Add(_SaveIPInvSample);
            SqlParameter _pSampleMapping = new SqlParameter();
            _pSampleMapping.ParameterName = "@pSampleMapping";
            _pSampleMapping.Size = -1;
            _pSampleMapping.Value = pSampleMapping;
            cmd.Parameters.Add(_pSampleMapping);
            SqlParameter _pGuid = new SqlParameter();
            _pGuid.ParameterName = "@pGuid";
            _pGuid.Size = 255;
            _pGuid.Value = pGuid;
            cmd.Parameters.Add(_pGuid);
            SqlParameter _pOrgID = new SqlParameter();
            _pOrgID.ParameterName = "@pOrgID";
            _pOrgID.Size = -1;
            _pOrgID.Value = pOrgID;
            cmd.Parameters.Add(_pOrgID);
            returnstatus = -1;
            SqlParameter _returnstatus = new SqlParameter();
            _returnstatus.ParameterName = "@returnstatus";
            _returnstatus.Size = -1;
            _returnstatus.Value = returnstatus;
            cmd.Parameters.Add(_returnstatus);
            _returnstatus.Direction = ParameterDirection.Output;
            SqlParameter _ContextInfo = new SqlParameter();
            _ContextInfo.ParameterName = "@ContextInfo";
            _ContextInfo.Size = -1;
            _ContextInfo.Value = ContextInfo;
            cmd.Parameters.Add(_ContextInfo);
            returnstatus = ((int)(_returnstatus.Value));
            return cmd;
        }
        public static SqlCommand pUpdateInvestigationHoldonApproval_V2Command(DataTable pGroupComment, string pGUID, DataTable ContextInfo)
        {
            SqlCommand cmd;
            cmd = new SqlCommand();
            cmd.CommandText = "pUpdateInvestigationHoldonApproval_V2";
            cmd.CommandTimeout = 180;
            cmd.CommandType = CommandType.StoredProcedure;
            SqlParameter _pGroupComment = new SqlParameter();
            _pGroupComment.ParameterName = "@pGroupComment";
            _pGroupComment.Size = -1;
            _pGroupComment.Value = pGroupComment;
            cmd.Parameters.Add(_pGroupComment);
            SqlParameter _pGUID = new SqlParameter();
            _pGUID.ParameterName = "@pGUID";
            _pGUID.Size = 255;
            _pGUID.Value = pGUID;
            cmd.Parameters.Add(_pGUID);
            SqlParameter _ContextInfo = new SqlParameter();
            _ContextInfo.ParameterName = "@ContextInfo";
            _ContextInfo.Size = -1;
            _ContextInfo.Value = ContextInfo;
            cmd.Parameters.Add(_ContextInfo);
            return cmd;
        }
        public static SqlCommand pGetPatientVisitDetails_V2Command(long VisitID, DataTable ContextInfo)
        {
            SqlCommand cmd;
            cmd = new SqlCommand();
            cmd.CommandText = "pGetPatientVisitDetails_V2";
            cmd.CommandTimeout = 180;
            cmd.CommandType = CommandType.StoredProcedure;
            SqlParameter _VisitID = new SqlParameter();
            _VisitID.ParameterName = "@VisitID";
            _VisitID.Size = -1;
            _VisitID.Value = VisitID;
            cmd.Parameters.Add(_VisitID);
            SqlParameter _ContextInfo = new SqlParameter();
            _ContextInfo.ParameterName = "@ContextInfo";
            _ContextInfo.Size = -1;
            _ContextInfo.Value = ContextInfo;
            cmd.Parameters.Add(_ContextInfo);
            return cmd;
        }
        public static SqlCommand pGetPatientInvestigationStatus_V2Command(long pVisitID, int pOrgID, DataTable ContextInfo)
        {
            SqlCommand cmd;
            cmd = new SqlCommand();
            cmd.CommandText = "pGetPatientInvestigationStatus_V2";
            cmd.CommandTimeout = 180;
            cmd.CommandType = CommandType.StoredProcedure;
            SqlParameter _pVisitID = new SqlParameter();
            _pVisitID.ParameterName = "@pVisitID";
            _pVisitID.Size = -1;
            _pVisitID.Value = pVisitID;
            cmd.Parameters.Add(_pVisitID);
            SqlParameter _pOrgID = new SqlParameter();
            _pOrgID.ParameterName = "@pOrgID";
            _pOrgID.Size = -1;
            _pOrgID.Value = pOrgID;
            cmd.Parameters.Add(_pOrgID);
            SqlParameter _ContextInfo = new SqlParameter();
            _ContextInfo.ParameterName = "@ContextInfo";
            _ContextInfo.Size = -1;
            _ContextInfo.Value = ContextInfo;
            cmd.Parameters.Add(_ContextInfo);
            return cmd;
        }
        public static SqlCommand pGetConfigDetails_V2Command(string pConfigKey, int pOrgID, DataTable ContextInfo)
        {
            SqlCommand cmd;
            cmd = new SqlCommand();
            cmd.CommandText = "pGetConfigDetails_V2";
            cmd.CommandTimeout = 180;
            cmd.CommandType = CommandType.StoredProcedure;
            SqlParameter _pConfigKey = new SqlParameter();
            _pConfigKey.ParameterName = "@pConfigKey";
            _pConfigKey.Size = 50;
            _pConfigKey.Value = pConfigKey;
            cmd.Parameters.Add(_pConfigKey);
            SqlParameter _pOrgID = new SqlParameter();
            _pOrgID.ParameterName = "@pOrgID";
            _pOrgID.Size = -1;
            _pOrgID.Value = pOrgID;
            cmd.Parameters.Add(_pOrgID);
            SqlParameter _ContextInfo = new SqlParameter();
            _ContextInfo.ParameterName = "@ContextInfo";
            _ContextInfo.Size = -1;
            _ContextInfo.Value = ContextInfo;
            cmd.Parameters.Add(_ContextInfo);
            return cmd;
        }
        public static SqlCommand pGetGrouplevelvalidation_V2Command(long visitid, int TaskActionID, DataTable pInvestigation, int orgid, int Lid, DataTable ContextInfo)
        {
            SqlCommand cmd;
            cmd = new SqlCommand();
            cmd.CommandText = "pGetGrouplevelvalidation_V2";
            cmd.CommandTimeout = 180;
            cmd.CommandType = CommandType.StoredProcedure;
            SqlParameter _visitid = new SqlParameter();
            _visitid.ParameterName = "@visitid";
            _visitid.Size = -1;
            _visitid.Value = visitid;
            cmd.Parameters.Add(_visitid);
            SqlParameter _TaskActionID = new SqlParameter();
            _TaskActionID.ParameterName = "@TaskActionID";
            _TaskActionID.Size = -1;
            _TaskActionID.Value = TaskActionID;
            cmd.Parameters.Add(_TaskActionID);
            SqlParameter _pInvestigation = new SqlParameter();
            _pInvestigation.ParameterName = "@pInvestigation";
            _pInvestigation.Size = -1;
            _pInvestigation.Value = pInvestigation;
            cmd.Parameters.Add(_pInvestigation);
            SqlParameter _orgid = new SqlParameter();
            _orgid.ParameterName = "@orgid";
            _orgid.Size = -1;
            _orgid.Value = orgid;
            cmd.Parameters.Add(_orgid);
            SqlParameter _Lid = new SqlParameter();
            _Lid.ParameterName = "@Lid";
            _Lid.Size = -1;
            _Lid.Value = Lid;
            cmd.Parameters.Add(_Lid);
            SqlParameter _ContextInfo = new SqlParameter();
            _ContextInfo.ParameterName = "@ContextInfo";
            _ContextInfo.Size = -1;
            _ContextInfo.Value = ContextInfo;
            cmd.Parameters.Add(_ContextInfo);
            return cmd;
        }
        public static SqlCommand pInsertInvestigationResults_V2Command(long pSCMID, DataTable pInvestigation, long pVisitID, string pGUID, out int returnstatus, DataTable ContextInfo, string IsFromDevice)
        {
            SqlCommand cmd;
            cmd = new SqlCommand();
            cmd.CommandText = "pInsertInvestigationResults_V2";
            cmd.CommandTimeout = 180;
            cmd.CommandType = CommandType.StoredProcedure;
            SqlParameter _pSCMID = new SqlParameter();
            _pSCMID.ParameterName = "@pSCMID";
            _pSCMID.Size = -1;
            _pSCMID.Value = pSCMID;
            cmd.Parameters.Add(_pSCMID);
            SqlParameter _pInvestigation = new SqlParameter();
            _pInvestigation.ParameterName = "@pInvestigation";
            _pInvestigation.Size = -1;
            _pInvestigation.Value = pInvestigation;
            cmd.Parameters.Add(_pInvestigation);
            SqlParameter _pVisitID = new SqlParameter();
            _pVisitID.ParameterName = "@pVisitID";
            _pVisitID.Size = -1;
            _pVisitID.Value = pVisitID;
            cmd.Parameters.Add(_pVisitID);
            SqlParameter _pGUID = new SqlParameter();
            _pGUID.ParameterName = "@pGUID";
            _pGUID.Size = 255;
            _pGUID.Value = pGUID;
            cmd.Parameters.Add(_pGUID);
            returnstatus = -1;
            SqlParameter _returnstatus = new SqlParameter();
            _returnstatus.ParameterName = "@returnstatus";
            _returnstatus.Size = -1;
            _returnstatus.Value = returnstatus;
            cmd.Parameters.Add(_returnstatus);
            _returnstatus.Direction = ParameterDirection.Output;
            SqlParameter _ContextInfo = new SqlParameter();
            _ContextInfo.ParameterName = "@ContextInfo";
            _ContextInfo.Size = -1;
            _ContextInfo.Value = ContextInfo;
            cmd.Parameters.Add(_ContextInfo);
            SqlParameter _IsFromDevice = new SqlParameter();
            _IsFromDevice.ParameterName = "@IsFromDevice";
            _IsFromDevice.Size = 1;
            _IsFromDevice.Value = IsFromDevice;
            cmd.Parameters.Add(_IsFromDevice);
            returnstatus = ((int)(_returnstatus.Value));
            return cmd;
        }
        public static SqlCommand pUpdatePatientInvestigationComplete_V2Command(DataTable pPatientInvTable, long pSCMID, long pApprovedBy, string UID, out int pReturnStatus, DataTable ContextInfo, DataTable pReflexPatientInvTable)
        {
            SqlCommand cmd;
            cmd = new SqlCommand();
            cmd.CommandText = "pUpdatePatientInvestigationComplete_V2";
            cmd.CommandTimeout = 180;
            cmd.CommandType = CommandType.StoredProcedure;
            SqlParameter _pPatientInvTable = new SqlParameter();
            _pPatientInvTable.ParameterName = "@pPatientInvTable";
            _pPatientInvTable.Size = -1;
            _pPatientInvTable.Value = pPatientInvTable;
            cmd.Parameters.Add(_pPatientInvTable);
            SqlParameter _pSCMID = new SqlParameter();
            _pSCMID.ParameterName = "@pSCMID";
            _pSCMID.Size = -1;
            _pSCMID.Value = pSCMID;
            cmd.Parameters.Add(_pSCMID);
            SqlParameter _pApprovedBy = new SqlParameter();
            _pApprovedBy.ParameterName = "@pApprovedBy";
            _pApprovedBy.Size = -1;
            _pApprovedBy.Value = pApprovedBy;
            cmd.Parameters.Add(_pApprovedBy);
            SqlParameter _UID = new SqlParameter();
            _UID.ParameterName = "@UID";
            _UID.Size = 255;
            _UID.Value = UID;
            cmd.Parameters.Add(_UID);
            pReturnStatus = -1;
            SqlParameter _pReturnStatus = new SqlParameter();
            _pReturnStatus.ParameterName = "@pReturnStatus";
            _pReturnStatus.Size = -1;
            _pReturnStatus.Value = pReturnStatus;
            cmd.Parameters.Add(_pReturnStatus);
            _pReturnStatus.Direction = ParameterDirection.Output;
            SqlParameter _ContextInfo = new SqlParameter();
            _ContextInfo.ParameterName = "@ContextInfo";
            _ContextInfo.Size = -1;
            _ContextInfo.Value = ContextInfo;
            cmd.Parameters.Add(_ContextInfo);
            SqlParameter _pReflexPatientInvTable = new SqlParameter();
            _pReflexPatientInvTable.ParameterName = "@pReflexPatientInvTable";
            _pReflexPatientInvTable.Size = -1;
            _pReflexPatientInvTable.Value = pReflexPatientInvTable;
            cmd.Parameters.Add(_pReflexPatientInvTable);
            pReturnStatus = ((int)(_pReturnStatus.Value));
            return cmd;
        }
        public static SqlCommand pGetReflexTestDetailsbyInvID_V2Command(DataTable pInvID, int pOrgID)
        {
            SqlCommand cmd;
            cmd = new SqlCommand();
            cmd.CommandText = "pGetReflexTestDetailsbyInvID_V2";
            cmd.CommandTimeout = 180;
            cmd.CommandType = CommandType.StoredProcedure;
            SqlParameter _pInvID = new SqlParameter();
            _pInvID.ParameterName = "@pInvID";
            _pInvID.Size = -1;
            _pInvID.Value = pInvID;
            cmd.Parameters.Add(_pInvID);
            SqlParameter _pOrgID = new SqlParameter();
            _pOrgID.ParameterName = "@pOrgID";
            _pOrgID.Size = -1;
            _pOrgID.Value = pOrgID;
            cmd.Parameters.Add(_pOrgID);
            return cmd;
        }
        public static SqlCommand pInsertInvQualitativeResultMaster_V2Command(DataTable pQRMDataTable, out int returnStatus, DataTable ContextInfo)
        {
            SqlCommand cmd;
            cmd = new SqlCommand();
            cmd.CommandText = "pInsertInvQualitativeResultMaster_V2";
            cmd.CommandTimeout = 180;
            cmd.CommandType = CommandType.StoredProcedure;
            SqlParameter _pQRMDataTable = new SqlParameter();
            _pQRMDataTable.ParameterName = "@pQRMDataTable";
            _pQRMDataTable.Size = -1;
            _pQRMDataTable.Value = pQRMDataTable;
            cmd.Parameters.Add(_pQRMDataTable);
            returnStatus = -1;
            SqlParameter _returnStatus = new SqlParameter();
            _returnStatus.ParameterName = "@returnStatus";
            _returnStatus.Size = -1;
            _returnStatus.Value = returnStatus;
            cmd.Parameters.Add(_returnStatus);
            _returnStatus.Direction = ParameterDirection.Output;
            SqlParameter _ContextInfo = new SqlParameter();
            _ContextInfo.ParameterName = "@ContextInfo";
            _ContextInfo.Size = -1;
            _ContextInfo.Value = ContextInfo;
            cmd.Parameters.Add(_ContextInfo);
            returnStatus = ((int)(_returnStatus.Value));
            return cmd;
        }
        public static SqlCommand pUpdateGroupComment_V2Command(DataTable pGroupComment, string pGUID, out int pReturnStatus, DataTable ContextInfo)
        {
            SqlCommand cmd;
            cmd = new SqlCommand();
            cmd.CommandText = "pUpdateGroupComment_V2";
            cmd.CommandTimeout = 180;
            cmd.CommandType = CommandType.StoredProcedure;
            SqlParameter _pGroupComment = new SqlParameter();
            _pGroupComment.ParameterName = "@pGroupComment";
            _pGroupComment.Size = -1;
            _pGroupComment.Value = pGroupComment;
            cmd.Parameters.Add(_pGroupComment);
            SqlParameter _pGUID = new SqlParameter();
            _pGUID.ParameterName = "@pGUID";
            _pGUID.Size = 255;
            _pGUID.Value = pGUID;
            cmd.Parameters.Add(_pGUID);
            pReturnStatus = -1;
            SqlParameter _pReturnStatus = new SqlParameter();
            _pReturnStatus.ParameterName = "@pReturnStatus";
            _pReturnStatus.Size = -1;
            _pReturnStatus.Value = pReturnStatus;
            cmd.Parameters.Add(_pReturnStatus);
            _pReturnStatus.Direction = ParameterDirection.Output;
            SqlParameter _ContextInfo = new SqlParameter();
            _ContextInfo.ParameterName = "@ContextInfo";
            _ContextInfo.Size = -1;
            _ContextInfo.Value = ContextInfo;
            cmd.Parameters.Add(_ContextInfo);
            pReturnStatus = ((int)(_pReturnStatus.Value));
            return cmd;
        }
        public static SqlCommand pInsertinvSampleResults_V2Command(DataTable pSampleResults, long pVisitID, int pOrgID, out int pReturnStatus, DataTable ContextInfo)
        {
            SqlCommand cmd;
            cmd = new SqlCommand();
            cmd.CommandText = "pInsertinvSampleResults_V2";
            cmd.CommandTimeout = 180;
            cmd.CommandType = CommandType.StoredProcedure;
            SqlParameter _pSampleResults = new SqlParameter();
            _pSampleResults.ParameterName = "@pSampleResults";
            _pSampleResults.Size = -1;
            _pSampleResults.Value = pSampleResults;
            cmd.Parameters.Add(_pSampleResults);
            SqlParameter _pVisitID = new SqlParameter();
            _pVisitID.ParameterName = "@pVisitID";
            _pVisitID.Size = -1;
            _pVisitID.Value = pVisitID;
            cmd.Parameters.Add(_pVisitID);
            SqlParameter _pOrgID = new SqlParameter();
            _pOrgID.ParameterName = "@pOrgID";
            _pOrgID.Size = -1;
            _pOrgID.Value = pOrgID;
            cmd.Parameters.Add(_pOrgID);
            pReturnStatus = -1;
            SqlParameter _pReturnStatus = new SqlParameter();
            _pReturnStatus.ParameterName = "@pReturnStatus";
            _pReturnStatus.Size = -1;
            _pReturnStatus.Value = pReturnStatus;
            cmd.Parameters.Add(_pReturnStatus);
            _pReturnStatus.Direction = ParameterDirection.Output;
            SqlParameter _ContextInfo = new SqlParameter();
            _ContextInfo.ParameterName = "@ContextInfo";
            _ContextInfo.Size = -1;
            _ContextInfo.Value = ContextInfo;
            cmd.Parameters.Add(_ContextInfo);
            pReturnStatus = ((int)(_pReturnStatus.Value));
            return cmd;
        }
        public static SqlCommand pInsertInvSampleMapping_V2Command(DataTable pSampleMapping, long visitID, int orgID, int deptID, out int pReturnStatus, DataTable ContextInfo)
        {
            SqlCommand cmd;
            cmd = new SqlCommand();
            cmd.CommandText = "pInsertInvSampleMapping_V2";
            cmd.CommandTimeout = 180;
            cmd.CommandType = CommandType.StoredProcedure;
            SqlParameter _pSampleMapping = new SqlParameter();
            _pSampleMapping.ParameterName = "@pSampleMapping";
            _pSampleMapping.Size = -1;
            _pSampleMapping.Value = pSampleMapping;
            cmd.Parameters.Add(_pSampleMapping);
            SqlParameter _visitID = new SqlParameter();
            _visitID.ParameterName = "@visitID";
            _visitID.Size = -1;
            _visitID.Value = visitID;
            cmd.Parameters.Add(_visitID);
            SqlParameter _orgID = new SqlParameter();
            _orgID.ParameterName = "@orgID";
            _orgID.Size = -1;
            _orgID.Value = orgID;
            cmd.Parameters.Add(_orgID);
            SqlParameter _deptID = new SqlParameter();
            _deptID.ParameterName = "@deptID";
            _deptID.Size = -1;
            _deptID.Value = deptID;
            cmd.Parameters.Add(_deptID);
            pReturnStatus = -1;
            SqlParameter _pReturnStatus = new SqlParameter();
            _pReturnStatus.ParameterName = "@pReturnStatus";
            _pReturnStatus.Size = -1;
            _pReturnStatus.Value = pReturnStatus;
            cmd.Parameters.Add(_pReturnStatus);
            _pReturnStatus.Direction = ParameterDirection.Output;
            SqlParameter _ContextInfo = new SqlParameter();
            _ContextInfo.ParameterName = "@ContextInfo";
            _ContextInfo.Size = -1;
            _ContextInfo.Value = ContextInfo;
            cmd.Parameters.Add(_ContextInfo);
            pReturnStatus = ((int)(_pReturnStatus.Value));
            return cmd;
        }
        public static SqlCommand pGetInvReasons_V2Command(int OrgID, DataTable ContextInfo)
        {
            SqlCommand cmd;
            cmd = new SqlCommand();
            cmd.CommandText = "pGetInvReasons_V2";
            cmd.CommandTimeout = 180;
            cmd.CommandType = CommandType.StoredProcedure;
            SqlParameter _OrgID = new SqlParameter();
            _OrgID.ParameterName = "@OrgID";
            _OrgID.Size = -1;
            _OrgID.Value = OrgID;
            cmd.Parameters.Add(_OrgID);
            SqlParameter _ContextInfo = new SqlParameter();
            _ContextInfo.ParameterName = "@ContextInfo";
            _ContextInfo.Size = -1;
            _ContextInfo.Value = ContextInfo;
            cmd.Parameters.Add(_ContextInfo);
            return cmd;
        }
        public static SqlCommand pGetInvQualitativeResultMaster_V2Command(DataTable ContextInfo)
        {
            SqlCommand cmd;
            cmd = new SqlCommand();
            cmd.CommandText = "pGetInvQualitativeResultMaster_V2";
            cmd.CommandTimeout = 180;
            cmd.CommandType = CommandType.StoredProcedure;
            SqlParameter _ContextInfo = new SqlParameter();
            _ContextInfo.ParameterName = "@ContextInfo";
            _ContextInfo.Size = -1;
            _ContextInfo.Value = ContextInfo;
            cmd.Parameters.Add(_ContextInfo);
            return cmd;
        }
        public static SqlCommand pInsertTRFDetails_V2Command(DataTable TRFfilemanager, DataTable ContextInfo)
        {
            SqlCommand cmd;
            cmd = new SqlCommand();
            cmd.CommandText = "pInsertTRFDetails_V2";
            cmd.CommandTimeout = 180;
            cmd.CommandType = CommandType.StoredProcedure;
            SqlParameter _TRFfilemanager = new SqlParameter();
            _TRFfilemanager.ParameterName = "@TRFfilemanager";
            _TRFfilemanager.Size = -1;
            _TRFfilemanager.Value = TRFfilemanager;
            cmd.Parameters.Add(_TRFfilemanager);
            SqlParameter _ContextInfo = new SqlParameter();
            _ContextInfo.ParameterName = "@ContextInfo";
            _ContextInfo.Size = -1;
            _ContextInfo.Value = ContextInfo;
            cmd.Parameters.Add(_ContextInfo);
            return cmd;
        }
        public static SqlCommand pInsertInvestigationQueue_V2Command(DataTable pInvestigationQueue, long OrgID, out int returnstatus, DataTable ContextInfo)
        {
            SqlCommand cmd;
            cmd = new SqlCommand();
            cmd.CommandText = "pInsertInvestigationQueue_V2";
            cmd.CommandTimeout = 180;
            cmd.CommandType = CommandType.StoredProcedure;
            SqlParameter _pInvestigationQueue = new SqlParameter();
            _pInvestigationQueue.ParameterName = "@pInvestigationQueue";
            _pInvestigationQueue.Size = -1;
            _pInvestigationQueue.Value = pInvestigationQueue;
            cmd.Parameters.Add(_pInvestigationQueue);
            SqlParameter _OrgID = new SqlParameter();
            _OrgID.ParameterName = "@OrgID";
            _OrgID.Size = -1;
            _OrgID.Value = OrgID;
            cmd.Parameters.Add(_OrgID);
            returnstatus = -1;
            SqlParameter _returnstatus = new SqlParameter();
            _returnstatus.ParameterName = "@returnstatus";
            _returnstatus.Size = -1;
            _returnstatus.Value = returnstatus;
            cmd.Parameters.Add(_returnstatus);
            _returnstatus.Direction = ParameterDirection.Output;
            SqlParameter _ContextInfo = new SqlParameter();
            _ContextInfo.ParameterName = "@ContextInfo";
            _ContextInfo.Size = -1;
            _ContextInfo.Value = ContextInfo;
            cmd.Parameters.Add(_ContextInfo);
            returnstatus = ((int)(_returnstatus.Value));
            return cmd;
        }
        public static SqlCommand pGetTaskDispTextAndURL_V2Command(int pTaskActionID, DataTable ContextInfo)
        {
            SqlCommand cmd;
            cmd = new SqlCommand();
            cmd.CommandText = "pGetTaskDispTextAndURL_V2";
            cmd.CommandTimeout = 180;
            cmd.CommandType = CommandType.StoredProcedure;
            SqlParameter _pTaskActionID = new SqlParameter();
            _pTaskActionID.ParameterName = "@pTaskActionID";
            _pTaskActionID.Size = -1;
            _pTaskActionID.Value = pTaskActionID;
            cmd.Parameters.Add(_pTaskActionID);
            SqlParameter _ContextInfo = new SqlParameter();
            _ContextInfo.ParameterName = "@ContextInfo";
            _ContextInfo.Size = -1;
            _ContextInfo.Value = ContextInfo;
            cmd.Parameters.Add(_ContextInfo);
            return cmd;
        }
        public static SqlCommand pInsertTask_V2Command(int pTaskActionID, string pTaskDescription, string pRedirectURL, long pPatientID, long pAssignedTo, int pOrgID, long pParentID, long pPatientVisitID, string pHighlightColor, long pCreatedBy, int pSpecialityID, long pTaskID, int pLocationID, string pRefernceID, DataTable ContextInfo)
        {
            SqlCommand cmd;
            cmd = new SqlCommand();
            cmd.CommandText = "pInsertTask_V2";
            cmd.CommandTimeout = 180;
            cmd.CommandType = CommandType.StoredProcedure;
            SqlParameter _pTaskActionID = new SqlParameter();
            _pTaskActionID.ParameterName = "@pTaskActionID";
            _pTaskActionID.Size = -1;
            _pTaskActionID.Value = pTaskActionID;
            cmd.Parameters.Add(_pTaskActionID);
            SqlParameter _pTaskDescription = new SqlParameter();
            _pTaskDescription.ParameterName = "@pTaskDescription";
            _pTaskDescription.Size = 1000;
            _pTaskDescription.Value = pTaskDescription;
            cmd.Parameters.Add(_pTaskDescription);
            SqlParameter _pRedirectURL = new SqlParameter();
            _pRedirectURL.ParameterName = "@pRedirectURL";
            _pRedirectURL.Size = 1000;
            _pRedirectURL.Value = pRedirectURL;
            cmd.Parameters.Add(_pRedirectURL);
            SqlParameter _pPatientID = new SqlParameter();
            _pPatientID.ParameterName = "@pPatientID";
            _pPatientID.Size = -1;
            _pPatientID.Value = pPatientID;
            cmd.Parameters.Add(_pPatientID);
            SqlParameter _pAssignedTo = new SqlParameter();
            _pAssignedTo.ParameterName = "@pAssignedTo";
            _pAssignedTo.Size = -1;
            _pAssignedTo.Value = pAssignedTo;
            cmd.Parameters.Add(_pAssignedTo);
            SqlParameter _pOrgID = new SqlParameter();
            _pOrgID.ParameterName = "@pOrgID";
            _pOrgID.Size = -1;
            _pOrgID.Value = pOrgID;
            cmd.Parameters.Add(_pOrgID);
            SqlParameter _pParentID = new SqlParameter();
            _pParentID.ParameterName = "@pParentID";
            _pParentID.Size = -1;
            _pParentID.Value = pParentID;
            cmd.Parameters.Add(_pParentID);
            SqlParameter _pPatientVisitID = new SqlParameter();
            _pPatientVisitID.ParameterName = "@pPatientVisitID";
            _pPatientVisitID.Size = -1;
            _pPatientVisitID.Value = pPatientVisitID;
            cmd.Parameters.Add(_pPatientVisitID);
            SqlParameter _pHighlightColor = new SqlParameter();
            _pHighlightColor.ParameterName = "@pHighlightColor";
            _pHighlightColor.Size = 25;
            _pHighlightColor.Value = pHighlightColor;
            cmd.Parameters.Add(_pHighlightColor);
            SqlParameter _pCreatedBy = new SqlParameter();
            _pCreatedBy.ParameterName = "@pCreatedBy";
            _pCreatedBy.Size = -1;
            _pCreatedBy.Value = pCreatedBy;
            cmd.Parameters.Add(_pCreatedBy);
            SqlParameter _pSpecialityID = new SqlParameter();
            _pSpecialityID.ParameterName = "@pSpecialityID";
            _pSpecialityID.Size = -1;
            _pSpecialityID.Value = pSpecialityID;
            cmd.Parameters.Add(_pSpecialityID);
            SqlParameter _pTaskID = new SqlParameter();
            _pTaskID.ParameterName = "@pTaskID";
            _pTaskID.Size = -1;
            _pTaskID.Value = pTaskID;
            cmd.Parameters.Add(_pTaskID);
            SqlParameter _pLocationID = new SqlParameter();
            _pLocationID.ParameterName = "@pLocationID";
            _pLocationID.Size = -1;
            _pLocationID.Value = pLocationID;
            cmd.Parameters.Add(_pLocationID);
            SqlParameter _pRefernceID = new SqlParameter();
            _pRefernceID.ParameterName = "@pRefernceID";
            _pRefernceID.Size = 50;
            _pRefernceID.Value = pRefernceID;
            cmd.Parameters.Add(_pRefernceID);
            SqlParameter _ContextInfo = new SqlParameter();
            _ContextInfo.ParameterName = "@ContextInfo";
            _ContextInfo.Size = -1;
            _ContextInfo.Value = ContextInfo;
            cmd.Parameters.Add(_ContextInfo);
            return cmd;
        }
        public static SqlCommand pGetTaskActionID_V2Command(long pOrgID, long pVisitPurposeID, long pOtherID, DataTable ContextInfo)
        {
            SqlCommand cmd;
            cmd = new SqlCommand();
            cmd.CommandText = "pGetTaskActionID_V2";
            cmd.CommandTimeout = 180;
            cmd.CommandType = CommandType.StoredProcedure;
            SqlParameter _pOrgID = new SqlParameter();
            _pOrgID.ParameterName = "@pOrgID";
            _pOrgID.Size = -1;
            _pOrgID.Value = pOrgID;
            cmd.Parameters.Add(_pOrgID);
            SqlParameter _pVisitPurposeID = new SqlParameter();
            _pVisitPurposeID.ParameterName = "@pVisitPurposeID";
            _pVisitPurposeID.Size = -1;
            _pVisitPurposeID.Value = pVisitPurposeID;
            cmd.Parameters.Add(_pVisitPurposeID);
            SqlParameter _pOtherID = new SqlParameter();
            _pOtherID.ParameterName = "@pOtherID";
            _pOtherID.Size = -1;
            _pOtherID.Value = pOtherID;
            cmd.Parameters.Add(_pOtherID);
            SqlParameter _ContextInfo = new SqlParameter();
            _ContextInfo.ParameterName = "@ContextInfo";
            _ContextInfo.Size = -1;
            _ContextInfo.Value = ContextInfo;
            cmd.Parameters.Add(_ContextInfo);
            return cmd;
        }
        public static SqlCommand pInsertPatientBilling_V2Command(
                    long pPatientID,
                    int pOrgID,
                    int pOrgAddressID,
                    long pCreatedBy,
                    string Name,
                    int TITLECode,
                    string SEX,
                    string Age,
                    string PatientNumber,
                    string pAddress1,
                    string pAddress2,
                    string pAddress3,
                    string pCity,
                    string pPhoneNo,
                    string pMobileNo,
                    string pMartialStatus,
                    DateTime pDOB,
                    string pCompressedName,
                    long pNationality,
                    long pStateID,
                    long pCountryID,
                    string pPinCode,
                    string EMail,
                    int IsNotifyType,
                    string pURNo,
                    long pURNof,
                    long pURNType,
                    string pPatientHistory,
                    string pPatientType,
                    string pPatientStatus,
                    int pVisitPurposeID,
                    string pSecuredCode,
                    int PriorityID,
                    int pIsExternalPatient,
                    string pWardNo,
                    long pEpisodeID,
                    long pEpisodeVisitID,
                    long PatientVisitID,
                    long pReferredPhysicianID,
                    string ReferingPhysicianName,
                    long pReferedHospitalID,
                    string pReferingHospitalName,
                    int pReferedSpecialityID,
                    long SpecialtyID,
                    string ReferralType,
                    decimal pGrossValue,
                    decimal pDiscount,
                    string pDiscountReason,
                    long pDiscountApprovedBy,
                    decimal pTax,
                    decimal pServiceCharge,
                    decimal pRoundOff,
                    decimal pNetValue,
                    decimal pDue,
                    DataTable pBillingTable,
                    string pIsCreditBill,
                    DataTable AmtReceivedDetails,
                    DataTable pOrderedInvTable,
                    long pEpisodeTrackID,
                    long pSiteID,
                    DateTime pSamplePickupDate,
                    string pConsignmentNo,
                    DataTable pControlMappingDetails,
                    string pRegistrationRemarks,
                    string pExternalPatientNumber,
                    DataTable pDespatchMode,
                    string pIsEditMode,
                    int pVisitTypeID,
                    int pPatientStausID,
                    DataTable ContextInfo,
                    DataTable VisitClientMapping,
                    long OnBehalfofLocationID,
                    long pvisitID,
                    int pPhleboID,
                    int pLogisticsID,
                    string pRoundNo,
                    string pexautoauthorization,
                    string pconfidential,
                    long pParentPatientID,
                    string pExternalVisitID,
                    string pApprovalNo,
                    string NewPassword,
                    long pZoneId,
                    byte pUnknownFlag,
                    long pDiscountID,
                    string IsCopay,
                    DataTable PatientDiscount,
                    string IsFoc,
                    string MyCardActiveDays,
                    string MemebershipcardType,
                    string HealthCardType,
                    string OTP,
                    long MembershipCardMappingID,
                    string CreditRedeemType,
                    string HasHealthCard,
                    decimal RedemPoints,
                    decimal RedemValue,
                    int ExternalVisitType,
                    string OrderedID,
                    string MigratedvisitNumber,
                    string MigratedRequestNumber,
                    DataTable PatientRedemDetails,
                    DataTable pUnOrderedInv,
                    string ClientFlag,
                    long CollectionID,
                    string EmailCCAddress,
                    string pValue,
                    string pPVisitNumber,
                    string pClinicCode,
                    string pFirstName,
                    string pMiddleName,
                    string pLastName,
                    int pSpeciesID,
                    int pCityId,
                    int pSuburbID,
                    string refdoctorId,
                    string refPhysicianPNo,
                    string pReportMode,
                    string pSpeciesName)
        {
            SqlCommand cmd;
            cmd = new SqlCommand();
            cmd.CommandText = "pInsertPatientBilling_V2";
            cmd.CommandTimeout = 180;
            cmd.CommandType = CommandType.StoredProcedure;
            SqlParameter _pPatientID = new SqlParameter();
            _pPatientID.ParameterName = "@pPatientID";
            _pPatientID.Size = -1;
            _pPatientID.Value = pPatientID;
            cmd.Parameters.Add(_pPatientID);
            SqlParameter _pOrgID = new SqlParameter();
            _pOrgID.ParameterName = "@pOrgID";
            _pOrgID.Size = -1;
            _pOrgID.Value = pOrgID;
            cmd.Parameters.Add(_pOrgID);
            SqlParameter _pOrgAddressID = new SqlParameter();
            _pOrgAddressID.ParameterName = "@pOrgAddressID";
            _pOrgAddressID.Size = -1;
            _pOrgAddressID.Value = pOrgAddressID;
            cmd.Parameters.Add(_pOrgAddressID);
            SqlParameter _pCreatedBy = new SqlParameter();
            _pCreatedBy.ParameterName = "@pCreatedBy";
            _pCreatedBy.Size = -1;
            _pCreatedBy.Value = pCreatedBy;
            cmd.Parameters.Add(_pCreatedBy);
            SqlParameter _Name = new SqlParameter();
            _Name.ParameterName = "@Name";
            _Name.Size = 250;
            _Name.Value = Name;
            cmd.Parameters.Add(_Name);
            SqlParameter _TITLECode = new SqlParameter();
            _TITLECode.ParameterName = "@TITLECode";
            _TITLECode.Size = -1;
            _TITLECode.Value = TITLECode;
            cmd.Parameters.Add(_TITLECode);
            SqlParameter _SEX = new SqlParameter();
            _SEX.ParameterName = "@SEX";
            _SEX.Size = 1;
            _SEX.Value = SEX;
            cmd.Parameters.Add(_SEX);
            SqlParameter _Age = new SqlParameter();
            _Age.ParameterName = "@Age";
            _Age.Size = 50;
            _Age.Value = Age;
            cmd.Parameters.Add(_Age);
            SqlParameter _PatientNumber = new SqlParameter();
            _PatientNumber.ParameterName = "@PatientNumber";
            _PatientNumber.Size = 30;
            _PatientNumber.Value = PatientNumber;
            cmd.Parameters.Add(_PatientNumber);
            SqlParameter _pAddress1 = new SqlParameter();
            _pAddress1.ParameterName = "@pAddress1";
            _pAddress1.Size = 250;
            _pAddress1.Value = pAddress1;
            cmd.Parameters.Add(_pAddress1);
            SqlParameter _pAddress2 = new SqlParameter();
            _pAddress2.ParameterName = "@pAddress2";
            _pAddress2.Size = 250;
            _pAddress2.Value = pAddress2;
            cmd.Parameters.Add(_pAddress2);
            SqlParameter _pAddress3 = new SqlParameter();
            _pAddress3.ParameterName = "@pAddress3";
            _pAddress3.Size = 250;
            _pAddress3.Value = pAddress3;
            cmd.Parameters.Add(_pAddress3);
            SqlParameter _pCity = new SqlParameter();
            _pCity.ParameterName = "@pCity";
            _pCity.Size = 50;
            _pCity.Value = pCity;
            cmd.Parameters.Add(_pCity);
            SqlParameter _pPhoneNo = new SqlParameter();
            _pPhoneNo.ParameterName = "@pPhoneNo";
            _pPhoneNo.Size = 20;
            _pPhoneNo.Value = pPhoneNo;
            cmd.Parameters.Add(_pPhoneNo);
            SqlParameter _pMobileNo = new SqlParameter();
            _pMobileNo.ParameterName = "@pMobileNo";
            _pMobileNo.Size = 20;
            _pMobileNo.Value = pMobileNo;
            cmd.Parameters.Add(_pMobileNo);
            SqlParameter _pMartialStatus = new SqlParameter();
            _pMartialStatus.ParameterName = "@pMartialStatus";
            _pMartialStatus.Size = 1;
            _pMartialStatus.Value = pMartialStatus;
            cmd.Parameters.Add(_pMartialStatus);
            SqlParameter _pDOB = new SqlParameter();
            _pDOB.ParameterName = "@pDOB";
            _pDOB.Size = -1;
            _pDOB.Value = pDOB;
            cmd.Parameters.Add(_pDOB);
            SqlParameter _pCompressedName = new SqlParameter();
            _pCompressedName.ParameterName = "@pCompressedName";
            _pCompressedName.Size = 255;
            _pCompressedName.Value = pCompressedName;
            cmd.Parameters.Add(_pCompressedName);
            SqlParameter _pNationality = new SqlParameter();
            _pNationality.ParameterName = "@pNationality";
            _pNationality.Size = -1;
            _pNationality.Value = pNationality;
            cmd.Parameters.Add(_pNationality);
            SqlParameter _pStateID = new SqlParameter();
            _pStateID.ParameterName = "@pStateID";
            _pStateID.Size = -1;
            _pStateID.Value = pStateID;
            cmd.Parameters.Add(_pStateID);
            SqlParameter _pCountryID = new SqlParameter();
            _pCountryID.ParameterName = "@pCountryID";
            _pCountryID.Size = -1;
            _pCountryID.Value = pCountryID;
            cmd.Parameters.Add(_pCountryID);
            SqlParameter _pPinCode = new SqlParameter();
            _pPinCode.ParameterName = "@pPinCode";
            _pPinCode.Size = 10;
            _pPinCode.Value = pPinCode;
            cmd.Parameters.Add(_pPinCode);
            SqlParameter _EMail = new SqlParameter();
            _EMail.ParameterName = "@EMail";
            _EMail.Size = 200;
            _EMail.Value = EMail;
            cmd.Parameters.Add(_EMail);
            SqlParameter _IsNotifyType = new SqlParameter();
            _IsNotifyType.ParameterName = "@IsNotifyType";
            _IsNotifyType.Size = -1;
            _IsNotifyType.Value = IsNotifyType;
            cmd.Parameters.Add(_IsNotifyType);
            SqlParameter _pURNo = new SqlParameter();
            _pURNo.ParameterName = "@pURNo";
            _pURNo.Size = 50;
            _pURNo.Value = pURNo;
            cmd.Parameters.Add(_pURNo);
            SqlParameter _pURNof = new SqlParameter();
            _pURNof.ParameterName = "@pURNof";
            _pURNof.Size = -1;
            _pURNof.Value = pURNof;
            cmd.Parameters.Add(_pURNof);
            SqlParameter _pURNType = new SqlParameter();
            _pURNType.ParameterName = "@pURNType";
            _pURNType.Size = -1;
            _pURNType.Value = pURNType;
            cmd.Parameters.Add(_pURNType);
            SqlParameter _pPatientHistory = new SqlParameter();
            _pPatientHistory.ParameterName = "@pPatientHistory";
            _pPatientHistory.Size = -1;
            _pPatientHistory.Value = pPatientHistory;
            cmd.Parameters.Add(_pPatientHistory);
            SqlParameter _pPatientType = new SqlParameter();
            _pPatientType.ParameterName = "@pPatientType";
            _pPatientType.Size = 50;
            _pPatientType.Value = pPatientType;
            cmd.Parameters.Add(_pPatientType);
            SqlParameter _pPatientStatus = new SqlParameter();
            _pPatientStatus.ParameterName = "@pPatientStatus";
            _pPatientStatus.Size = 50;
            _pPatientStatus.Value = pPatientStatus;
            cmd.Parameters.Add(_pPatientStatus);
            SqlParameter _pVisitPurposeID = new SqlParameter();
            _pVisitPurposeID.ParameterName = "@pVisitPurposeID";
            _pVisitPurposeID.Size = -1;
            _pVisitPurposeID.Value = pVisitPurposeID;
            cmd.Parameters.Add(_pVisitPurposeID);
            SqlParameter _pSecuredCode = new SqlParameter();
            _pSecuredCode.ParameterName = "@pSecuredCode";
            _pSecuredCode.Size = 150;
            _pSecuredCode.Value = pSecuredCode;
            cmd.Parameters.Add(_pSecuredCode);
            SqlParameter _PriorityID = new SqlParameter();
            _PriorityID.ParameterName = "@PriorityID";
            _PriorityID.Size = -1;
            _PriorityID.Value = PriorityID;
            cmd.Parameters.Add(_PriorityID);
            SqlParameter _pIsExternalPatient = new SqlParameter();
            _pIsExternalPatient.ParameterName = "@pIsExternalPatient";
            _pIsExternalPatient.Size = -1;
            _pIsExternalPatient.Value = pIsExternalPatient;
            cmd.Parameters.Add(_pIsExternalPatient);
            SqlParameter _pWardNo = new SqlParameter();
            _pWardNo.ParameterName = "@pWardNo";
            _pWardNo.Size = 20;
            _pWardNo.Value = pWardNo;
            cmd.Parameters.Add(_pWardNo);
            SqlParameter _pEpisodeID = new SqlParameter();
            _pEpisodeID.ParameterName = "@pEpisodeID";
            _pEpisodeID.Size = -1;
            _pEpisodeID.Value = pEpisodeID;
            cmd.Parameters.Add(_pEpisodeID);
            SqlParameter _pEpisodeVisitID = new SqlParameter();
            _pEpisodeVisitID.ParameterName = "@pEpisodeVisitID";
            _pEpisodeVisitID.Size = -1;
            _pEpisodeVisitID.Value = pEpisodeVisitID;
            cmd.Parameters.Add(_pEpisodeVisitID);
            SqlParameter _PatientVisitID = new SqlParameter();
            _PatientVisitID.ParameterName = "@PatientVisitID";
            _PatientVisitID.Size = -1;
            _PatientVisitID.Value = PatientVisitID;
            cmd.Parameters.Add(_PatientVisitID);
            SqlParameter _pReferredPhysicianID = new SqlParameter();
            _pReferredPhysicianID.ParameterName = "@pReferredPhysicianID";
            _pReferredPhysicianID.Size = -1;
            _pReferredPhysicianID.Value = pReferredPhysicianID;
            cmd.Parameters.Add(_pReferredPhysicianID);
            SqlParameter _ReferingPhysicianName = new SqlParameter();
            _ReferingPhysicianName.ParameterName = "@ReferingPhysicianName";
            _ReferingPhysicianName.Size = 300;
            _ReferingPhysicianName.Value = ReferingPhysicianName;
            cmd.Parameters.Add(_ReferingPhysicianName);
            SqlParameter _pReferedHospitalID = new SqlParameter();
            _pReferedHospitalID.ParameterName = "@pReferedHospitalID";
            _pReferedHospitalID.Size = -1;
            _pReferedHospitalID.Value = pReferedHospitalID;
            cmd.Parameters.Add(_pReferedHospitalID);
            SqlParameter _pReferingHospitalName = new SqlParameter();
            _pReferingHospitalName.ParameterName = "@pReferingHospitalName";
            _pReferingHospitalName.Size = 100;
            _pReferingHospitalName.Value = pReferingHospitalName;
            cmd.Parameters.Add(_pReferingHospitalName);
            SqlParameter _pReferedSpecialityID = new SqlParameter();
            _pReferedSpecialityID.ParameterName = "@pReferedSpecialityID";
            _pReferedSpecialityID.Size = -1;
            _pReferedSpecialityID.Value = pReferedSpecialityID;
            cmd.Parameters.Add(_pReferedSpecialityID);
            SqlParameter _SpecialtyID = new SqlParameter();
            _SpecialtyID.ParameterName = "@SpecialtyID";
            _SpecialtyID.Size = -1;
            _SpecialtyID.Value = SpecialtyID;
            cmd.Parameters.Add(_SpecialtyID);
            SqlParameter _ReferralType = new SqlParameter();
            _ReferralType.ParameterName = "@ReferralType";
            _ReferralType.Size = 1;
            _ReferralType.Value = ReferralType;
            cmd.Parameters.Add(_ReferralType);
            SqlParameter _pGrossValue = new SqlParameter();
            _pGrossValue.ParameterName = "@pGrossValue";
            _pGrossValue.Size = -1;
            _pGrossValue.Value = pGrossValue;
            cmd.Parameters.Add(_pGrossValue);
            SqlParameter _pDiscount = new SqlParameter();
            _pDiscount.ParameterName = "@pDiscount";
            _pDiscount.Size = -1;
            _pDiscount.Value = pDiscount;
            cmd.Parameters.Add(_pDiscount);
            SqlParameter _pDiscountReason = new SqlParameter();
            _pDiscountReason.ParameterName = "@pDiscountReason";
            _pDiscountReason.Size = 250;
            _pDiscountReason.Value = pDiscountReason;
            cmd.Parameters.Add(_pDiscountReason);
            SqlParameter _pDiscountApprovedBy = new SqlParameter();
            _pDiscountApprovedBy.ParameterName = "@pDiscountApprovedBy";
            _pDiscountApprovedBy.Size = -1;
            _pDiscountApprovedBy.Value = pDiscountApprovedBy;
            cmd.Parameters.Add(_pDiscountApprovedBy);
            SqlParameter _pTax = new SqlParameter();
            _pTax.ParameterName = "@pTax";
            _pTax.Size = -1;
            _pTax.Value = pTax;
            cmd.Parameters.Add(_pTax);
            SqlParameter _pServiceCharge = new SqlParameter();
            _pServiceCharge.ParameterName = "@pServiceCharge";
            _pServiceCharge.Size = -1;
            _pServiceCharge.Value = pServiceCharge;
            cmd.Parameters.Add(_pServiceCharge);
            SqlParameter _pRoundOff = new SqlParameter();
            _pRoundOff.ParameterName = "@pRoundOff";
            _pRoundOff.Size = -1;
            _pRoundOff.Value = pRoundOff;
            cmd.Parameters.Add(_pRoundOff);
            SqlParameter _pNetValue = new SqlParameter();
            _pNetValue.ParameterName = "@pNetValue";
            _pNetValue.Size = -1;
            _pNetValue.Value = pNetValue;
            cmd.Parameters.Add(_pNetValue);
            SqlParameter _pDue = new SqlParameter();
            _pDue.ParameterName = "@pDue";
            _pDue.Size = -1;
            _pDue.Value = pDue;
            cmd.Parameters.Add(_pDue);
            SqlParameter _pBillingTable = new SqlParameter();
            _pBillingTable.ParameterName = "@pBillingTable";
            _pBillingTable.Size = -1;
            _pBillingTable.Value = pBillingTable;
            cmd.Parameters.Add(_pBillingTable);
            SqlParameter _pIsCreditBill = new SqlParameter();
            _pIsCreditBill.ParameterName = "@pIsCreditBill";
            _pIsCreditBill.Size = 1;
            _pIsCreditBill.Value = pIsCreditBill;
            cmd.Parameters.Add(_pIsCreditBill);
            SqlParameter _AmtReceivedDetails = new SqlParameter();
            _AmtReceivedDetails.ParameterName = "@AmtReceivedDetails";
            _AmtReceivedDetails.Size = -1;
            _AmtReceivedDetails.Value = AmtReceivedDetails;
            cmd.Parameters.Add(_AmtReceivedDetails);
            SqlParameter _pOrderedInvTable = new SqlParameter();
            _pOrderedInvTable.ParameterName = "@pOrderedInvTable";
            _pOrderedInvTable.Size = -1;
            _pOrderedInvTable.Value = pOrderedInvTable;
            cmd.Parameters.Add(_pOrderedInvTable);
            SqlParameter _pEpisodeTrackID = new SqlParameter();
            _pEpisodeTrackID.ParameterName = "@pEpisodeTrackID";
            _pEpisodeTrackID.Size = -1;
            _pEpisodeTrackID.Value = pEpisodeTrackID;
            cmd.Parameters.Add(_pEpisodeTrackID);
            SqlParameter _pSiteID = new SqlParameter();
            _pSiteID.ParameterName = "@pSiteID";
            _pSiteID.Size = -1;
            _pSiteID.Value = pSiteID;
            cmd.Parameters.Add(_pSiteID);
            SqlParameter _pSamplePickupDate = new SqlParameter();
            _pSamplePickupDate.ParameterName = "@pSamplePickupDate";
            _pSamplePickupDate.Size = -1;
            _pSamplePickupDate.Value = pSamplePickupDate;
            cmd.Parameters.Add(_pSamplePickupDate);
            SqlParameter _pConsignmentNo = new SqlParameter();
            _pConsignmentNo.ParameterName = "@pConsignmentNo";
            _pConsignmentNo.Size = 50;
            _pConsignmentNo.Value = pConsignmentNo;
            cmd.Parameters.Add(_pConsignmentNo);
            SqlParameter _pControlMappingDetails = new SqlParameter();
            _pControlMappingDetails.ParameterName = "@pControlMappingDetails";
            _pControlMappingDetails.Size = -1;
            _pControlMappingDetails.Value = pControlMappingDetails;
            cmd.Parameters.Add(_pControlMappingDetails);
            SqlParameter _pRegistrationRemarks = new SqlParameter();
            _pRegistrationRemarks.ParameterName = "@pRegistrationRemarks";
            _pRegistrationRemarks.Size = 255;
            _pRegistrationRemarks.Value = pRegistrationRemarks;
            cmd.Parameters.Add(_pRegistrationRemarks);
            SqlParameter _pExternalPatientNumber = new SqlParameter();
            _pExternalPatientNumber.ParameterName = "@pExternalPatientNumber";
            _pExternalPatientNumber.Size = 30;
            _pExternalPatientNumber.Value = pExternalPatientNumber;
            cmd.Parameters.Add(_pExternalPatientNumber);
            SqlParameter _pDespatchMode = new SqlParameter();
            _pDespatchMode.ParameterName = "@pDespatchMode";
            _pDespatchMode.Size = -1;
            _pDespatchMode.Value = pDespatchMode;
            cmd.Parameters.Add(_pDespatchMode);
            SqlParameter _pIsEditMode = new SqlParameter();
            _pIsEditMode.ParameterName = "@pIsEditMode";
            _pIsEditMode.Size = 1;
            _pIsEditMode.Value = pIsEditMode;
            cmd.Parameters.Add(_pIsEditMode);
            SqlParameter _pVisitTypeID = new SqlParameter();
            _pVisitTypeID.ParameterName = "@pVisitTypeID";
            _pVisitTypeID.Size = -1;
            _pVisitTypeID.Value = pVisitTypeID;
            cmd.Parameters.Add(_pVisitTypeID);
            SqlParameter _pPatientStausID = new SqlParameter();
            _pPatientStausID.ParameterName = "@pPatientStausID";
            _pPatientStausID.Size = -1;
            _pPatientStausID.Value = pPatientStausID;
            cmd.Parameters.Add(_pPatientStausID);
            SqlParameter _ContextInfo = new SqlParameter();
            _ContextInfo.ParameterName = "@ContextInfo";
            _ContextInfo.Size = -1;
            _ContextInfo.Value = ContextInfo;
            cmd.Parameters.Add(_ContextInfo);
            SqlParameter _VisitClientMapping = new SqlParameter();
            _VisitClientMapping.ParameterName = "@VisitClientMapping";
            _VisitClientMapping.Size = -1;
            _VisitClientMapping.Value = VisitClientMapping;
            cmd.Parameters.Add(_VisitClientMapping);
            SqlParameter _OnBehalfofLocationID = new SqlParameter();
            _OnBehalfofLocationID.ParameterName = "@OnBehalfofLocationID";
            _OnBehalfofLocationID.Size = -1;
            _OnBehalfofLocationID.Value = OnBehalfofLocationID;
            cmd.Parameters.Add(_OnBehalfofLocationID);
            SqlParameter _pvisitID = new SqlParameter();
            _pvisitID.ParameterName = "@pvisitID";
            _pvisitID.Size = -1;
            _pvisitID.Value = pvisitID;
            cmd.Parameters.Add(_pvisitID);
            SqlParameter _pPhleboID = new SqlParameter();
            _pPhleboID.ParameterName = "@pPhleboID";
            _pPhleboID.Size = -1;
            _pPhleboID.Value = pPhleboID;
            cmd.Parameters.Add(_pPhleboID);
            SqlParameter _pLogisticsID = new SqlParameter();
            _pLogisticsID.ParameterName = "@pLogisticsID";
            _pLogisticsID.Size = -1;
            _pLogisticsID.Value = pLogisticsID;
            cmd.Parameters.Add(_pLogisticsID);
            SqlParameter _pRoundNo = new SqlParameter();
            _pRoundNo.ParameterName = "@pRoundNo";
            _pRoundNo.Size = 200;
            _pRoundNo.Value = pRoundNo;
            cmd.Parameters.Add(_pRoundNo);
            SqlParameter _pexautoauthorization = new SqlParameter();
            _pexautoauthorization.ParameterName = "@pexautoauthorization";
            _pexautoauthorization.Size = 5;
            _pexautoauthorization.Value = pexautoauthorization;
            cmd.Parameters.Add(_pexautoauthorization);
            SqlParameter _pconfidential = new SqlParameter();
            _pconfidential.ParameterName = "@pconfidential";
            _pconfidential.Size = 5;
            _pconfidential.Value = pconfidential;
            cmd.Parameters.Add(_pconfidential);
            SqlParameter _pParentPatientID = new SqlParameter();
            _pParentPatientID.ParameterName = "@pParentPatientID";
            _pParentPatientID.Size = -1;
            _pParentPatientID.Value = pParentPatientID;
            cmd.Parameters.Add(_pParentPatientID);
            SqlParameter _pExternalVisitID = new SqlParameter();
            _pExternalVisitID.ParameterName = "@pExternalVisitID";
            _pExternalVisitID.Size = 255;
            _pExternalVisitID.Value = pExternalVisitID;
            cmd.Parameters.Add(_pExternalVisitID);
            SqlParameter _pApprovalNo = new SqlParameter();
            _pApprovalNo.ParameterName = "@pApprovalNo";
            _pApprovalNo.Size = 50;
            _pApprovalNo.Value = pApprovalNo;
            cmd.Parameters.Add(_pApprovalNo);
            SqlParameter _NewPassword = new SqlParameter();
            _NewPassword.ParameterName = "@NewPassword";
            _NewPassword.Size = 255;
            _NewPassword.Value = NewPassword;
            cmd.Parameters.Add(_NewPassword);
            SqlParameter _pZoneId = new SqlParameter();
            _pZoneId.ParameterName = "@pZoneId";
            _pZoneId.Size = -1;
            _pZoneId.Value = pZoneId;
            cmd.Parameters.Add(_pZoneId);
            SqlParameter _pUnknownFlag = new SqlParameter();
            _pUnknownFlag.ParameterName = "@pUnknownFlag";
            _pUnknownFlag.Size = -1;
            _pUnknownFlag.Value = pUnknownFlag;
            cmd.Parameters.Add(_pUnknownFlag);
            SqlParameter _pDiscountID = new SqlParameter();
            _pDiscountID.ParameterName = "@pDiscountID";
            _pDiscountID.Size = -1;
            _pDiscountID.Value = pDiscountID;
            cmd.Parameters.Add(_pDiscountID);
            SqlParameter _IsCopay = new SqlParameter();
            _IsCopay.ParameterName = "@IsCopay";
            _IsCopay.Size = 2;
            _IsCopay.Value = IsCopay;
            cmd.Parameters.Add(_IsCopay);
            SqlParameter _PatientDiscount = new SqlParameter();
            _PatientDiscount.ParameterName = "@PatientDiscount";
            _PatientDiscount.Size = -1;
            _PatientDiscount.Value = PatientDiscount;
            cmd.Parameters.Add(_PatientDiscount);
            SqlParameter _IsFoc = new SqlParameter();
            _IsFoc.ParameterName = "@IsFoc";
            _IsFoc.Size = 3;
            _IsFoc.Value = IsFoc;
            cmd.Parameters.Add(_IsFoc);
            SqlParameter _MyCardActiveDays = new SqlParameter();
            _MyCardActiveDays.ParameterName = "@MyCardActiveDays";
            _MyCardActiveDays.Size = 15;
            _MyCardActiveDays.Value = MyCardActiveDays;
            cmd.Parameters.Add(_MyCardActiveDays);
            SqlParameter _MemebershipcardType = new SqlParameter();
            _MemebershipcardType.ParameterName = "@MemebershipcardType";
            _MemebershipcardType.Size = 255;
            _MemebershipcardType.Value = MemebershipcardType;
            cmd.Parameters.Add(_MemebershipcardType);
            SqlParameter _HealthCardType = new SqlParameter();
            _HealthCardType.ParameterName = "@HealthCardType";
            _HealthCardType.Size = 255;
            _HealthCardType.Value = HealthCardType;
            cmd.Parameters.Add(_HealthCardType);
            SqlParameter _OTP = new SqlParameter();
            _OTP.ParameterName = "@OTP";
            _OTP.Size = 10;
            _OTP.Value = OTP;
            cmd.Parameters.Add(_OTP);
            SqlParameter _MembershipCardMappingID = new SqlParameter();
            _MembershipCardMappingID.ParameterName = "@MembershipCardMappingID";
            _MembershipCardMappingID.Size = -1;
            _MembershipCardMappingID.Value = MembershipCardMappingID;
            cmd.Parameters.Add(_MembershipCardMappingID);
            SqlParameter _CreditRedeemType = new SqlParameter();
            _CreditRedeemType.ParameterName = "@CreditRedeemType";
            _CreditRedeemType.Size = 55;
            _CreditRedeemType.Value = CreditRedeemType;
            cmd.Parameters.Add(_CreditRedeemType);
            SqlParameter _HasHealthCard = new SqlParameter();
            _HasHealthCard.ParameterName = "@HasHealthCard";
            _HasHealthCard.Size = 1;
            _HasHealthCard.Value = HasHealthCard;
            cmd.Parameters.Add(_HasHealthCard);
            SqlParameter _RedemPoints = new SqlParameter();
            _RedemPoints.ParameterName = "@RedemPoints";
            _RedemPoints.Size = -1;
            _RedemPoints.Value = RedemPoints;
            cmd.Parameters.Add(_RedemPoints);
            SqlParameter _RedemValue = new SqlParameter();
            _RedemValue.ParameterName = "@RedemValue";
            _RedemValue.Size = -1;
            _RedemValue.Value = RedemValue;
            cmd.Parameters.Add(_RedemValue);
            SqlParameter _ExternalVisitType = new SqlParameter();
            _ExternalVisitType.ParameterName = "@ExternalVisitType";
            _ExternalVisitType.Size = -1;
            _ExternalVisitType.Value = ExternalVisitType;
            cmd.Parameters.Add(_ExternalVisitType);
            SqlParameter _OrderedID = new SqlParameter();
            _OrderedID.ParameterName = "@OrderedID";
            _OrderedID.Size = 30;
            _OrderedID.Value = OrderedID;
            cmd.Parameters.Add(_OrderedID);
            SqlParameter _MigratedvisitNumber = new SqlParameter();
            _MigratedvisitNumber.ParameterName = "@MigratedvisitNumber";
            _MigratedvisitNumber.Size = 510;
            _MigratedvisitNumber.Value = MigratedvisitNumber;
            cmd.Parameters.Add(_MigratedvisitNumber);
            SqlParameter _MigratedRequestNumber = new SqlParameter();
            _MigratedRequestNumber.ParameterName = "@MigratedRequestNumber";
            _MigratedRequestNumber.Size = 510;
            _MigratedRequestNumber.Value = MigratedRequestNumber;
            cmd.Parameters.Add(_MigratedRequestNumber);
            SqlParameter _PatientRedemDetails = new SqlParameter();
            _PatientRedemDetails.ParameterName = "@PatientRedemDetails";
            _PatientRedemDetails.Size = -1;
            _PatientRedemDetails.Value = PatientRedemDetails;
            cmd.Parameters.Add(_PatientRedemDetails);
            SqlParameter _pUnOrderedInv = new SqlParameter();
            _pUnOrderedInv.ParameterName = "@pUnOrderedInv";
            _pUnOrderedInv.Size = -1;
            _pUnOrderedInv.Value = pUnOrderedInv;
            cmd.Parameters.Add(_pUnOrderedInv);
            SqlParameter _ClientFlag = new SqlParameter();
            _ClientFlag.ParameterName = "@ClientFlag";
            _ClientFlag.Size = 20;
            _ClientFlag.Value = ClientFlag;
            cmd.Parameters.Add(_ClientFlag);
            SqlParameter _CollectionID = new SqlParameter();
            _CollectionID.ParameterName = "@CollectionID";
            _CollectionID.Size = -1;
            _CollectionID.Value = CollectionID;
            cmd.Parameters.Add(_CollectionID);
            SqlParameter _EmailCCAddress = new SqlParameter();
            _EmailCCAddress.ParameterName = "@EmailCCAddress";
            _EmailCCAddress.Size = -1;
            _EmailCCAddress.Value = EmailCCAddress;
            cmd.Parameters.Add(_EmailCCAddress);
            SqlParameter _pValue = new SqlParameter();
            _pValue.ParameterName = "@pValue";
            _pValue.Size = 50;
            _pValue.Value = pValue;
            cmd.Parameters.Add(_pValue);
            SqlParameter _pPVisitNumber = new SqlParameter();
            _pPVisitNumber.ParameterName = "@pPVisitNumber";
            _pPVisitNumber.Size = 50;
            _pPVisitNumber.Value = pPVisitNumber;
            cmd.Parameters.Add(_pPVisitNumber);
            SqlParameter _pClinicCode = new SqlParameter();
            _pClinicCode.ParameterName = "@pClinicCode";
            _pClinicCode.Size = 50;
            _pClinicCode.Value = pClinicCode;
            cmd.Parameters.Add(_pClinicCode);
            SqlParameter _pFirstName = new SqlParameter();
            _pFirstName.ParameterName = "@pFirstName";
            _pFirstName.Size = 250;
            _pFirstName.Value = pFirstName;
            cmd.Parameters.Add(_pFirstName);
            SqlParameter _pMiddleName = new SqlParameter();
            _pMiddleName.ParameterName = "@pMiddleName";
            _pMiddleName.Size = 250;
            _pMiddleName.Value = pMiddleName;
            cmd.Parameters.Add(_pMiddleName);
            SqlParameter _pLastName = new SqlParameter();
            _pLastName.ParameterName = "@pLastName";
            _pLastName.Size = 250;
            _pLastName.Value = pLastName;
            cmd.Parameters.Add(_pLastName);
            SqlParameter _pSpeciesID = new SqlParameter();
            _pSpeciesID.ParameterName = "@pSpeciesID";
            _pSpeciesID.Size = -1;
            _pSpeciesID.Value = pSpeciesID;
            cmd.Parameters.Add(_pSpeciesID);
            SqlParameter _pCityId = new SqlParameter();
            _pCityId.ParameterName = "@pCityId";
            _pCityId.Size = -1;
            _pCityId.Value = pCityId;
            cmd.Parameters.Add(_pCityId);
            SqlParameter _pSuburbID = new SqlParameter();
            _pSuburbID.ParameterName = "@pSuburbID";
            _pSuburbID.Size = -1;
            _pSuburbID.Value = pSuburbID;
            cmd.Parameters.Add(_pSuburbID);
            SqlParameter _refdoctorId = new SqlParameter();
            _refdoctorId.ParameterName = "@refdoctorId";
            _refdoctorId.Size = 50;
            _refdoctorId.Value = refdoctorId;
            cmd.Parameters.Add(_refdoctorId);
            SqlParameter _refPhysicianPNo = new SqlParameter();
            _refPhysicianPNo.ParameterName = "@refPhysicianPNo";
            _refPhysicianPNo.Size = 20;
            _refPhysicianPNo.Value = refPhysicianPNo;
            cmd.Parameters.Add(_refPhysicianPNo);
            SqlParameter _pReportMode = new SqlParameter();
            _pReportMode.ParameterName = "@pReportMode";
            _pReportMode.Size = 20;
            _pReportMode.Value = pReportMode;
            cmd.Parameters.Add(_pReportMode);
            SqlParameter _pSpeciesName = new SqlParameter();
            _pSpeciesName.ParameterName = "@pSpeciesName";
            _pSpeciesName.Size = 250;
            _pSpeciesName.Value = pSpeciesName;
            cmd.Parameters.Add(_pSpeciesName);
           
            return cmd;
        }

        public static SqlCommand pGetBarcodeAttributeNValues_V2Command(int pOrgId, string pPatientVisitId, string plstSampleId, long pBillId, string pCategoryCode, DataTable ContextInfo)
        {
            SqlCommand cmd;
            cmd = new SqlCommand();
            cmd.CommandText = "pGetBarcodeAttributeNValues_V2";
            cmd.CommandTimeout = 180;
            cmd.CommandType = CommandType.StoredProcedure;
            SqlParameter _pOrgId = new SqlParameter();
            _pOrgId.ParameterName = "@pOrgId";
            _pOrgId.Size = -1;
            _pOrgId.Value = pOrgId;
            cmd.Parameters.Add(_pOrgId);
            SqlParameter _pPatientVisitId = new SqlParameter();
            _pPatientVisitId.ParameterName = "@pPatientVisitId";
            _pPatientVisitId.Size = -1;
            _pPatientVisitId.Value = pPatientVisitId;
            cmd.Parameters.Add(_pPatientVisitId);
            SqlParameter _plstSampleId = new SqlParameter();
            _plstSampleId.ParameterName = "@plstSampleId";
            _plstSampleId.Size = -1;
            _plstSampleId.Value = plstSampleId;
            cmd.Parameters.Add(_plstSampleId);
            SqlParameter _pBillId = new SqlParameter();
            _pBillId.ParameterName = "@pBillId";
            _pBillId.Size = -1;
            _pBillId.Value = pBillId;
            cmd.Parameters.Add(_pBillId);
            SqlParameter _pCategoryCode = new SqlParameter();
            _pCategoryCode.ParameterName = "@pCategoryCode";
            _pCategoryCode.Size = 50;
            _pCategoryCode.Value = pCategoryCode;
            cmd.Parameters.Add(_pCategoryCode);
            SqlParameter _ContextInfo = new SqlParameter();
            _ContextInfo.ParameterName = "@ContextInfo";
            _ContextInfo.Size = -1;
            _ContextInfo.Value = ContextInfo;
            cmd.Parameters.Add(_ContextInfo);
            return cmd;
        }
        public static SqlCommand pGetBillConfigDetails_V2Command(string pConfigKey, int pOrgID, long pOrgAddressID, int pBillGroupID, DataTable ContextInfo)
        {
            SqlCommand cmd;
            cmd = new SqlCommand();
            cmd.CommandText = "pGetBillConfigDetails_V2";
            cmd.CommandTimeout = 180;
            cmd.CommandType = CommandType.StoredProcedure;
            SqlParameter _pConfigKey = new SqlParameter();
            _pConfigKey.ParameterName = "@pConfigKey";
            _pConfigKey.Size = 50;
            _pConfigKey.Value = pConfigKey;
            cmd.Parameters.Add(_pConfigKey);
            SqlParameter _pOrgID = new SqlParameter();
            _pOrgID.ParameterName = "@pOrgID";
            _pOrgID.Size = -1;
            _pOrgID.Value = pOrgID;
            cmd.Parameters.Add(_pOrgID);
            SqlParameter _pOrgAddressID = new SqlParameter();
            _pOrgAddressID.ParameterName = "@pOrgAddressID";
            _pOrgAddressID.Size = -1;
            _pOrgAddressID.Value = pOrgAddressID;
            cmd.Parameters.Add(_pOrgAddressID);
            SqlParameter _pBillGroupID = new SqlParameter();
            _pBillGroupID.ParameterName = "@pBillGroupID";
            _pBillGroupID.Size = -1;
            _pBillGroupID.Value = pBillGroupID;
            cmd.Parameters.Add(_pBillGroupID);
            SqlParameter _ContextInfo = new SqlParameter();
            _ContextInfo.ParameterName = "@ContextInfo";
            _ContextInfo.Size = -1;
            _ContextInfo.Value = ContextInfo;
            cmd.Parameters.Add(_ContextInfo);
            return cmd;
        }
        public static SqlCommand pGetPaymentMode_V2Command(long FinalBillID, long VisitID, string ReceiptNo, int payingPage, DataTable ContextInfo)
        {
            SqlCommand cmd;
            cmd = new SqlCommand();
            cmd.CommandText = "pGetPaymentMode_V2";
            cmd.CommandTimeout = 180;
            cmd.CommandType = CommandType.StoredProcedure;
            SqlParameter _FinalBillID = new SqlParameter();
            _FinalBillID.ParameterName = "@FinalBillID";
            _FinalBillID.Size = -1;
            _FinalBillID.Value = FinalBillID;
            cmd.Parameters.Add(_FinalBillID);
            SqlParameter _VisitID = new SqlParameter();
            _VisitID.ParameterName = "@VisitID";
            _VisitID.Size = -1;
            _VisitID.Value = VisitID;
            cmd.Parameters.Add(_VisitID);
            SqlParameter _ReceiptNo = new SqlParameter();
            _ReceiptNo.ParameterName = "@ReceiptNo";
            _ReceiptNo.Size = 30;
            _ReceiptNo.Value = ReceiptNo;
            cmd.Parameters.Add(_ReceiptNo);
            SqlParameter _payingPage = new SqlParameter();
            _payingPage.ParameterName = "@payingPage";
            _payingPage.Size = -1;
            _payingPage.Value = payingPage;
            cmd.Parameters.Add(_payingPage);
            SqlParameter _ContextInfo = new SqlParameter();
            _ContextInfo.ParameterName = "@ContextInfo";
            _ContextInfo.Size = -1;
            _ContextInfo.Value = ContextInfo;
            cmd.Parameters.Add(_ContextInfo);
            return cmd;
        }
        public static SqlCommand pGetBillPrinting_V2Command(long pVisitID, string pPhysicianName, long pBillID, string SplitStatus, DataTable ContextInfo)
        {
            SqlCommand cmd;
            cmd = new SqlCommand();
            cmd.CommandText = "pGetBillPrinting_V2";
            cmd.CommandTimeout = 180;
            cmd.CommandType = CommandType.StoredProcedure;
            SqlParameter _pVisitID = new SqlParameter();
            _pVisitID.ParameterName = "@pVisitID";
            _pVisitID.Size = -1;
            _pVisitID.Value = pVisitID;
            cmd.Parameters.Add(_pVisitID);
            SqlParameter _pPhysicianName = new SqlParameter();
            _pPhysicianName.ParameterName = "@pPhysicianName";
            _pPhysicianName.Size = 255;
            _pPhysicianName.Value = pPhysicianName;
            cmd.Parameters.Add(_pPhysicianName);
            SqlParameter _pBillID = new SqlParameter();
            _pBillID.ParameterName = "@pBillID";
            _pBillID.Size = -1;
            _pBillID.Value = pBillID;
            cmd.Parameters.Add(_pBillID);
            SqlParameter _SplitStatus = new SqlParameter();
            _SplitStatus.ParameterName = "@SplitStatus";
            _SplitStatus.Size = 50;
            _SplitStatus.Value = SplitStatus;
            cmd.Parameters.Add(_SplitStatus);
            SqlParameter _ContextInfo = new SqlParameter();
            _ContextInfo.ParameterName = "@ContextInfo";
            _ContextInfo.Size = -1;
            _ContextInfo.Value = ContextInfo;
            cmd.Parameters.Add(_ContextInfo);
            return cmd;
        }
        public static System.Data.SqlClient.SqlCommand pGetDeptToTrackSamplesForQucikBill_V2Command(long PatientVisitID, int OrgID, long RoleID, string gUID, System.Data.DataTable ContextInfo)
        {
            System.Data.SqlClient.SqlCommand cmd;
            cmd = new System.Data.SqlClient.SqlCommand();
            cmd.CommandText = "pGetDeptToTrackSamplesForQucikBill_V2";
            cmd.CommandTimeout = 180;
            cmd.CommandType = CommandType.StoredProcedure;
            System.Data.SqlClient.SqlParameter _PatientVisitID = new System.Data.SqlClient.SqlParameter();
            _PatientVisitID.ParameterName = "@PatientVisitID";
            _PatientVisitID.Size = -1;
            _PatientVisitID.Value = PatientVisitID;
            cmd.Parameters.Add(_PatientVisitID);
            System.Data.SqlClient.SqlParameter _OrgID = new System.Data.SqlClient.SqlParameter();
            _OrgID.ParameterName = "@OrgID";
            _OrgID.Size = -1;
            _OrgID.Value = OrgID;
            cmd.Parameters.Add(_OrgID);
            System.Data.SqlClient.SqlParameter _RoleID = new System.Data.SqlClient.SqlParameter();
            _RoleID.ParameterName = "@RoleID";
            _RoleID.Size = -1;
            _RoleID.Value = RoleID;
            cmd.Parameters.Add(_RoleID);
            System.Data.SqlClient.SqlParameter _gUID = new System.Data.SqlClient.SqlParameter();
            _gUID.ParameterName = "@gUID";
            _gUID.Size = 255;
            _gUID.Value = gUID;
            cmd.Parameters.Add(_gUID);
            System.Data.SqlClient.SqlParameter _ContextInfo = new System.Data.SqlClient.SqlParameter();
            _ContextInfo.ParameterName = "@ContextInfo";
            _ContextInfo.Size = -1;
            _ContextInfo.Value = ContextInfo;
            cmd.Parameters.Add(_ContextInfo);
            return cmd;
        }
        public static System.Data.SqlClient.SqlCommand pInsertTaskAllowDuplicate_V2Command(
                    int pTaskActionID,
                    string pTaskDescription,
                    string pRedirectURL,
                    long pPatientID,
                    long pAssignedTo,
                    int pOrgID,
                    long pParentID,
                    long pPatientVisitID,
                    string pHighlightColor,
                    long pCreatedBy,
                    int pSpecialityID,
                    string pReferenceID,
                    string pType,
                    out long pTaskID,
                    string pIsstat,
                    System.Data.DataTable ContextInfo)
        {
            System.Data.SqlClient.SqlCommand cmd;
            cmd = new System.Data.SqlClient.SqlCommand();
            cmd.CommandText = "pInsertTaskAllowDuplicate_V2";
            cmd.CommandTimeout = 180;
            cmd.CommandType = CommandType.StoredProcedure;
            System.Data.SqlClient.SqlParameter _pTaskActionID = new System.Data.SqlClient.SqlParameter();
            _pTaskActionID.ParameterName = "@pTaskActionID";
            _pTaskActionID.Size = -1;
            _pTaskActionID.Value = pTaskActionID;
            cmd.Parameters.Add(_pTaskActionID);
            System.Data.SqlClient.SqlParameter _pTaskDescription = new System.Data.SqlClient.SqlParameter();
            _pTaskDescription.ParameterName = "@pTaskDescription";
            _pTaskDescription.Size = 1000;
            _pTaskDescription.Value = pTaskDescription;
            cmd.Parameters.Add(_pTaskDescription);
            System.Data.SqlClient.SqlParameter _pRedirectURL = new System.Data.SqlClient.SqlParameter();
            _pRedirectURL.ParameterName = "@pRedirectURL";
            _pRedirectURL.Size = 1000;
            _pRedirectURL.Value = pRedirectURL;
            cmd.Parameters.Add(_pRedirectURL);
            System.Data.SqlClient.SqlParameter _pPatientID = new System.Data.SqlClient.SqlParameter();
            _pPatientID.ParameterName = "@pPatientID";
            _pPatientID.Size = -1;
            _pPatientID.Value = pPatientID;
            cmd.Parameters.Add(_pPatientID);
            System.Data.SqlClient.SqlParameter _pAssignedTo = new System.Data.SqlClient.SqlParameter();
            _pAssignedTo.ParameterName = "@pAssignedTo";
            _pAssignedTo.Size = -1;
            _pAssignedTo.Value = pAssignedTo;
            cmd.Parameters.Add(_pAssignedTo);
            System.Data.SqlClient.SqlParameter _pOrgID = new System.Data.SqlClient.SqlParameter();
            _pOrgID.ParameterName = "@pOrgID";
            _pOrgID.Size = -1;
            _pOrgID.Value = pOrgID;
            cmd.Parameters.Add(_pOrgID);
            System.Data.SqlClient.SqlParameter _pParentID = new System.Data.SqlClient.SqlParameter();
            _pParentID.ParameterName = "@pParentID";
            _pParentID.Size = -1;
            _pParentID.Value = pParentID;
            cmd.Parameters.Add(_pParentID);
            System.Data.SqlClient.SqlParameter _pPatientVisitID = new System.Data.SqlClient.SqlParameter();
            _pPatientVisitID.ParameterName = "@pPatientVisitID";
            _pPatientVisitID.Size = -1;
            _pPatientVisitID.Value = pPatientVisitID;
            cmd.Parameters.Add(_pPatientVisitID);
            System.Data.SqlClient.SqlParameter _pHighlightColor = new System.Data.SqlClient.SqlParameter();
            _pHighlightColor.ParameterName = "@pHighlightColor";
            _pHighlightColor.Size = 25;
            _pHighlightColor.Value = pHighlightColor;
            cmd.Parameters.Add(_pHighlightColor);
            System.Data.SqlClient.SqlParameter _pCreatedBy = new System.Data.SqlClient.SqlParameter();
            _pCreatedBy.ParameterName = "@pCreatedBy";
            _pCreatedBy.Size = -1;
            _pCreatedBy.Value = pCreatedBy;
            cmd.Parameters.Add(_pCreatedBy);
            System.Data.SqlClient.SqlParameter _pSpecialityID = new System.Data.SqlClient.SqlParameter();
            _pSpecialityID.ParameterName = "@pSpecialityID";
            _pSpecialityID.Size = -1;
            _pSpecialityID.Value = pSpecialityID;
            cmd.Parameters.Add(_pSpecialityID);
            System.Data.SqlClient.SqlParameter _pReferenceID = new System.Data.SqlClient.SqlParameter();
            _pReferenceID.ParameterName = "@pReferenceID";
            _pReferenceID.Size = 100;
            _pReferenceID.Value = pReferenceID;
            cmd.Parameters.Add(_pReferenceID);
            System.Data.SqlClient.SqlParameter _pType = new System.Data.SqlClient.SqlParameter();
            _pType.ParameterName = "@pType";
            _pType.Size = 50;
            _pType.Value = pType;
            cmd.Parameters.Add(_pType);
            pTaskID = -1;
            System.Data.SqlClient.SqlParameter _pTaskID = new System.Data.SqlClient.SqlParameter();
            _pTaskID.ParameterName = "@pTaskID";
            _pTaskID.Size = -1;
            _pTaskID.Value = pTaskID;
            cmd.Parameters.Add(_pTaskID);
            _pTaskID.Direction = ParameterDirection.Output;
            System.Data.SqlClient.SqlParameter _pIsstat = new System.Data.SqlClient.SqlParameter();
            _pIsstat.ParameterName = "@pIsstat";
            _pIsstat.Size = 10;
            _pIsstat.Value = pIsstat;
            cmd.Parameters.Add(_pIsstat);
            System.Data.SqlClient.SqlParameter _ContextInfo = new System.Data.SqlClient.SqlParameter();
            _ContextInfo.ParameterName = "@ContextInfo";
            _ContextInfo.Size = -1;
            _ContextInfo.Value = ContextInfo;
            cmd.Parameters.Add(_ContextInfo);
            pTaskID = ((long)(_pTaskID.Value));
            return cmd;
        }
        public static System.Data.SqlClient.SqlCommand PUpdateOrderedInvestigation_V2Command(long pPatientVisitID, string PLabno, int orgId, long pTaskID, string pbillNo, out int pReturnStatus, System.Data.DataTable ContextInfo)
        {
            System.Data.SqlClient.SqlCommand cmd;
            cmd = new System.Data.SqlClient.SqlCommand();
            cmd.CommandText = "PUpdateOrderedInvestigation_V2";
            cmd.CommandTimeout = 180;
            cmd.CommandType = CommandType.StoredProcedure;
            System.Data.SqlClient.SqlParameter _pPatientVisitID = new System.Data.SqlClient.SqlParameter();
            _pPatientVisitID.ParameterName = "@pPatientVisitID";
            _pPatientVisitID.Size = -1;
            _pPatientVisitID.Value = pPatientVisitID;
            cmd.Parameters.Add(_pPatientVisitID);
            System.Data.SqlClient.SqlParameter _PLabno = new System.Data.SqlClient.SqlParameter();
            _PLabno.ParameterName = "@PLabno";
            _PLabno.Size = 30;
            _PLabno.Value = PLabno;
            cmd.Parameters.Add(_PLabno);
            System.Data.SqlClient.SqlParameter _orgId = new System.Data.SqlClient.SqlParameter();
            _orgId.ParameterName = "@orgId";
            _orgId.Size = -1;
            _orgId.Value = orgId;
            cmd.Parameters.Add(_orgId);
            System.Data.SqlClient.SqlParameter _pTaskID = new System.Data.SqlClient.SqlParameter();
            _pTaskID.ParameterName = "@pTaskID";
            _pTaskID.Size = -1;
            _pTaskID.Value = pTaskID;
            cmd.Parameters.Add(_pTaskID);
            System.Data.SqlClient.SqlParameter _pbillNo = new System.Data.SqlClient.SqlParameter();
            _pbillNo.ParameterName = "@pbillNo";
            _pbillNo.Size = 30;
            _pbillNo.Value = pbillNo;
            cmd.Parameters.Add(_pbillNo);
            pReturnStatus = -1;
            System.Data.SqlClient.SqlParameter _pReturnStatus = new System.Data.SqlClient.SqlParameter();
            _pReturnStatus.ParameterName = "@pReturnStatus";
            _pReturnStatus.Size = -1;
            _pReturnStatus.Value = pReturnStatus;
            cmd.Parameters.Add(_pReturnStatus);
            _pReturnStatus.Direction = ParameterDirection.Output;
            System.Data.SqlClient.SqlParameter _ContextInfo = new System.Data.SqlClient.SqlParameter();
            _ContextInfo.ParameterName = "@ContextInfo";
            _ContextInfo.Size = -1;
            _ContextInfo.Value = ContextInfo;
            cmd.Parameters.Add(_ContextInfo);
            pReturnStatus = ((int)(_pReturnStatus.Value));
            return cmd;
        }
        public static System.Data.SqlClient.SqlCommand pGetHealthPackageData_V2Command(int pOrgID, System.Data.DataTable ContextInfo, int Pkgid)
        {
            System.Data.SqlClient.SqlCommand cmd;
            cmd = new System.Data.SqlClient.SqlCommand();
            cmd.CommandText = "pGetHealthPackageData_V2";
            cmd.CommandTimeout = 180;
            cmd.CommandType = CommandType.StoredProcedure;
            System.Data.SqlClient.SqlParameter _pOrgID = new System.Data.SqlClient.SqlParameter();
            _pOrgID.ParameterName = "@pOrgID";
            _pOrgID.Size = -1;
            _pOrgID.Value = pOrgID;
            cmd.Parameters.Add(_pOrgID);
            System.Data.SqlClient.SqlParameter _ContextInfo = new System.Data.SqlClient.SqlParameter();
            _ContextInfo.ParameterName = "@ContextInfo";
            _ContextInfo.Size = -1;
            _ContextInfo.Value = ContextInfo;
            cmd.Parameters.Add(_ContextInfo);
            System.Data.SqlClient.SqlParameter _Pkgid = new System.Data.SqlClient.SqlParameter();
            _Pkgid.ParameterName = "@Pkgid";
            _Pkgid.Size = -1;
            _Pkgid.Value = Pkgid;
            cmd.Parameters.Add(_Pkgid);
            return cmd;
        }
        public static System.Data.SqlClient.SqlCommand PINSERTNOTIFICATIONSLISCommand(System.Data.DataTable ACTIONDETAIL, System.Data.DataTable CONTEXTINFO)
        {
            System.Data.SqlClient.SqlCommand cmd;
            cmd = new System.Data.SqlClient.SqlCommand();
            cmd.CommandText = "PINSERTNOTIFICATIONSLIS";
            cmd.CommandTimeout = 180;
            cmd.CommandType = CommandType.StoredProcedure;
            System.Data.SqlClient.SqlParameter _ACTIONDETAIL = new System.Data.SqlClient.SqlParameter();
            _ACTIONDETAIL.ParameterName = "@ACTIONDETAIL";
            _ACTIONDETAIL.Size = -1;
            _ACTIONDETAIL.Value = ACTIONDETAIL;
            cmd.Parameters.Add(_ACTIONDETAIL);
            System.Data.SqlClient.SqlParameter _CONTEXTINFO = new System.Data.SqlClient.SqlParameter();
            _CONTEXTINFO.ParameterName = "@CONTEXTINFO";
            _CONTEXTINFO.Size = -1;
            _CONTEXTINFO.Value = CONTEXTINFO;
            cmd.Parameters.Add(_CONTEXTINFO);
            return cmd;
        }
        public static System.Data.SqlClient.SqlCommand pSaveReportBarcodeDetailsCommand(long pVisitID, int pOrgID, byte[] pBarcode, string pBarcodeType)
        {
            System.Data.SqlClient.SqlCommand cmd;
            cmd = new System.Data.SqlClient.SqlCommand();
            cmd.CommandText = "pSaveReportBarcodeDetails";
            cmd.CommandTimeout = 180;
            cmd.CommandType = CommandType.StoredProcedure;
            System.Data.SqlClient.SqlParameter _pVisitID = new System.Data.SqlClient.SqlParameter();
            _pVisitID.ParameterName = "@pVisitID";
            _pVisitID.Size = -1;
            _pVisitID.Value = pVisitID;
            cmd.Parameters.Add(_pVisitID);
            System.Data.SqlClient.SqlParameter _pOrgID = new System.Data.SqlClient.SqlParameter();
            _pOrgID.ParameterName = "@pOrgID";
            _pOrgID.Size = -1;
            _pOrgID.Value = pOrgID;
            cmd.Parameters.Add(_pOrgID);
            System.Data.SqlClient.SqlParameter _pBarcode = new System.Data.SqlClient.SqlParameter();
            _pBarcode.ParameterName = "@pBarcode";
            _pBarcode.Size = -1;
            _pBarcode.Value = pBarcode;
            cmd.Parameters.Add(_pBarcode);
            System.Data.SqlClient.SqlParameter _pBarcodeType = new System.Data.SqlClient.SqlParameter();
            _pBarcodeType.ParameterName = "@pBarcodeType";
            _pBarcodeType.Size = 55;
            _pBarcodeType.Value = pBarcodeType;
            cmd.Parameters.Add(_pBarcodeType);
            return cmd;
        }
        public static System.Data.SqlClient.SqlCommand pUpdateInvestigationStatusCommand(long pPatientVisitID, System.Data.DataTable pInvestigationID, string pStatus, int orgId, out int pReturnStatus, System.Data.DataTable ContextInfo)
        {
            System.Data.SqlClient.SqlCommand cmd;
            cmd = new System.Data.SqlClient.SqlCommand();
            cmd.CommandText = "pUpdateInvestigationStatus";
            cmd.CommandTimeout = 180;
            cmd.CommandType = CommandType.StoredProcedure;
            System.Data.SqlClient.SqlParameter _pPatientVisitID = new System.Data.SqlClient.SqlParameter();
            _pPatientVisitID.ParameterName = "@pPatientVisitID";
            _pPatientVisitID.Size = -1;
            _pPatientVisitID.Value = pPatientVisitID;
            cmd.Parameters.Add(_pPatientVisitID);
            System.Data.SqlClient.SqlParameter _pInvestigationID = new System.Data.SqlClient.SqlParameter();
            _pInvestigationID.ParameterName = "@pInvestigationID";
            _pInvestigationID.Size = -1;
            _pInvestigationID.Value = pInvestigationID;
            cmd.Parameters.Add(_pInvestigationID);
            System.Data.SqlClient.SqlParameter _pStatus = new System.Data.SqlClient.SqlParameter();
            _pStatus.ParameterName = "@pStatus";
            _pStatus.Size = 100;
            _pStatus.Value = pStatus;
            cmd.Parameters.Add(_pStatus);
            System.Data.SqlClient.SqlParameter _orgId = new System.Data.SqlClient.SqlParameter();
            _orgId.ParameterName = "@orgId";
            _orgId.Size = -1;
            _orgId.Value = orgId;
            cmd.Parameters.Add(_orgId);
            pReturnStatus = -1;
            System.Data.SqlClient.SqlParameter _pReturnStatus = new System.Data.SqlClient.SqlParameter();
            _pReturnStatus.ParameterName = "@pReturnStatus";
            _pReturnStatus.Size = -1;
            _pReturnStatus.Value = pReturnStatus;
            cmd.Parameters.Add(_pReturnStatus);
            _pReturnStatus.Direction = ParameterDirection.Output;
            System.Data.SqlClient.SqlParameter _ContextInfo = new System.Data.SqlClient.SqlParameter();
            _ContextInfo.ParameterName = "@ContextInfo";
            _ContextInfo.Size = -1;
            _ContextInfo.Value = ContextInfo;
            cmd.Parameters.Add(_ContextInfo);
            pReturnStatus = ((int)(_pReturnStatus.Value));
            return cmd;
        }
        public static System.Data.SqlClient.SqlCommand pInsertTaskAllowDuplicateCommand(
                    int pTaskActionID,
                    string pTaskDescription,
                    string pRedirectURL,
                    long pPatientID,
                    long pAssignedTo,
                    int pOrgID,
                    long pParentID,
                    long pPatientVisitID,
                    string pHighlightColor,
                    long pCreatedBy,
                    int pSpecialityID,
                    string pReferenceID,
                    string pType,
                    out long pTaskID,
                    string pIsstat,
                    System.Data.DataTable ContextInfo)
        {
            System.Data.SqlClient.SqlCommand cmd;
            cmd = new System.Data.SqlClient.SqlCommand();
            cmd.CommandText = "pInsertTaskAllowDuplicate";
            cmd.CommandTimeout = 180;
            cmd.CommandType = CommandType.StoredProcedure;
            System.Data.SqlClient.SqlParameter _pTaskActionID = new System.Data.SqlClient.SqlParameter();
            _pTaskActionID.ParameterName = "@pTaskActionID";
            _pTaskActionID.Size = -1;
            _pTaskActionID.Value = pTaskActionID;
            cmd.Parameters.Add(_pTaskActionID);
            System.Data.SqlClient.SqlParameter _pTaskDescription = new System.Data.SqlClient.SqlParameter();
            _pTaskDescription.ParameterName = "@pTaskDescription";
            _pTaskDescription.Size = 1000;
            _pTaskDescription.Value = pTaskDescription;
            cmd.Parameters.Add(_pTaskDescription);
            System.Data.SqlClient.SqlParameter _pRedirectURL = new System.Data.SqlClient.SqlParameter();
            _pRedirectURL.ParameterName = "@pRedirectURL";
            _pRedirectURL.Size = 1000;
            _pRedirectURL.Value = pRedirectURL;
            cmd.Parameters.Add(_pRedirectURL);
            System.Data.SqlClient.SqlParameter _pPatientID = new System.Data.SqlClient.SqlParameter();
            _pPatientID.ParameterName = "@pPatientID";
            _pPatientID.Size = -1;
            _pPatientID.Value = pPatientID;
            cmd.Parameters.Add(_pPatientID);
            System.Data.SqlClient.SqlParameter _pAssignedTo = new System.Data.SqlClient.SqlParameter();
            _pAssignedTo.ParameterName = "@pAssignedTo";
            _pAssignedTo.Size = -1;
            _pAssignedTo.Value = pAssignedTo;
            cmd.Parameters.Add(_pAssignedTo);
            System.Data.SqlClient.SqlParameter _pOrgID = new System.Data.SqlClient.SqlParameter();
            _pOrgID.ParameterName = "@pOrgID";
            _pOrgID.Size = -1;
            _pOrgID.Value = pOrgID;
            cmd.Parameters.Add(_pOrgID);
            System.Data.SqlClient.SqlParameter _pParentID = new System.Data.SqlClient.SqlParameter();
            _pParentID.ParameterName = "@pParentID";
            _pParentID.Size = -1;
            _pParentID.Value = pParentID;
            cmd.Parameters.Add(_pParentID);
            System.Data.SqlClient.SqlParameter _pPatientVisitID = new System.Data.SqlClient.SqlParameter();
            _pPatientVisitID.ParameterName = "@pPatientVisitID";
            _pPatientVisitID.Size = -1;
            _pPatientVisitID.Value = pPatientVisitID;
            cmd.Parameters.Add(_pPatientVisitID);
            System.Data.SqlClient.SqlParameter _pHighlightColor = new System.Data.SqlClient.SqlParameter();
            _pHighlightColor.ParameterName = "@pHighlightColor";
            _pHighlightColor.Size = 25;
            _pHighlightColor.Value = pHighlightColor;
            cmd.Parameters.Add(_pHighlightColor);
            System.Data.SqlClient.SqlParameter _pCreatedBy = new System.Data.SqlClient.SqlParameter();
            _pCreatedBy.ParameterName = "@pCreatedBy";
            _pCreatedBy.Size = -1;
            _pCreatedBy.Value = pCreatedBy;
            cmd.Parameters.Add(_pCreatedBy);
            System.Data.SqlClient.SqlParameter _pSpecialityID = new System.Data.SqlClient.SqlParameter();
            _pSpecialityID.ParameterName = "@pSpecialityID";
            _pSpecialityID.Size = -1;
            _pSpecialityID.Value = pSpecialityID;
            cmd.Parameters.Add(_pSpecialityID);
            System.Data.SqlClient.SqlParameter _pReferenceID = new System.Data.SqlClient.SqlParameter();
            _pReferenceID.ParameterName = "@pReferenceID";
            _pReferenceID.Size = 100;
            _pReferenceID.Value = pReferenceID;
            cmd.Parameters.Add(_pReferenceID);
            System.Data.SqlClient.SqlParameter _pType = new System.Data.SqlClient.SqlParameter();
            _pType.ParameterName = "@pType";
            _pType.Size = 50;
            _pType.Value = pType;
            cmd.Parameters.Add(_pType);
            pTaskID = -1;
            System.Data.SqlClient.SqlParameter _pTaskID = new System.Data.SqlClient.SqlParameter();
            _pTaskID.ParameterName = "@pTaskID";
            _pTaskID.Size = -1;
            _pTaskID.Value = pTaskID;
            cmd.Parameters.Add(_pTaskID);
            _pTaskID.Direction = ParameterDirection.Output;
            System.Data.SqlClient.SqlParameter _pIsstat = new System.Data.SqlClient.SqlParameter();
            _pIsstat.ParameterName = "@pIsstat";
            _pIsstat.Size = 10;
            _pIsstat.Value = pIsstat;
            cmd.Parameters.Add(_pIsstat);
            System.Data.SqlClient.SqlParameter _ContextInfo = new System.Data.SqlClient.SqlParameter();
            _ContextInfo.ParameterName = "@ContextInfo";
            _ContextInfo.Size = -1;
            _ContextInfo.Value = ContextInfo;
            cmd.Parameters.Add(_ContextInfo);
            pTaskID = ((long)(_pTaskID.Value));
            return cmd;
        }
        public static System.Data.SqlClient.SqlCommand pGetPatientDetailandAddressCommand(long pUserID, System.Data.DataTable ContextInfo)
        {
            System.Data.SqlClient.SqlCommand cmd;
            cmd = new System.Data.SqlClient.SqlCommand();
            cmd.CommandText = "pGetPatientDetailandAddress";
            cmd.CommandTimeout = 180;
            cmd.CommandType = CommandType.StoredProcedure;
            System.Data.SqlClient.SqlParameter _pUserID = new System.Data.SqlClient.SqlParameter();
            _pUserID.ParameterName = "@pUserID";
            _pUserID.Size = -1;
            _pUserID.Value = pUserID;
            cmd.Parameters.Add(_pUserID);
            System.Data.SqlClient.SqlParameter _ContextInfo = new System.Data.SqlClient.SqlParameter();
            _ContextInfo.ParameterName = "@ContextInfo";
            _ContextInfo.Size = -1;
            _ContextInfo.Value = ContextInfo;
            cmd.Parameters.Add(_ContextInfo);
            return cmd;
        }
        public static System.Data.SqlClient.SqlCommand pGetHealthPackageDataCommand(int pOrgID, System.Data.DataTable ContextInfo, int Pkgid)
        {
            System.Data.SqlClient.SqlCommand cmd;
            cmd = new System.Data.SqlClient.SqlCommand();
            cmd.CommandText = "pGetHealthPackageData";
            cmd.CommandTimeout = 180;
            cmd.CommandType = CommandType.StoredProcedure;
            System.Data.SqlClient.SqlParameter _pOrgID = new System.Data.SqlClient.SqlParameter();
            _pOrgID.ParameterName = "@pOrgID";
            _pOrgID.Size = -1;
            _pOrgID.Value = pOrgID;
            cmd.Parameters.Add(_pOrgID);
            System.Data.SqlClient.SqlParameter _ContextInfo = new System.Data.SqlClient.SqlParameter();
            _ContextInfo.ParameterName = "@ContextInfo";
            _ContextInfo.Size = -1;
            _ContextInfo.Value = ContextInfo;
            cmd.Parameters.Add(_ContextInfo);
            System.Data.SqlClient.SqlParameter _Pkgid = new System.Data.SqlClient.SqlParameter();
            _Pkgid.ParameterName = "@Pkgid";
            _Pkgid.Size = -1;
            _Pkgid.Value = Pkgid;
            cmd.Parameters.Add(_Pkgid);
            return cmd;
        }
        public static System.Data.SqlClient.SqlCommand pGetURN_V2Command(int UrnTypeId, string UrnNo, System.Data.DataTable ContextInfo)
        {
            System.Data.SqlClient.SqlCommand cmd;
            cmd = new System.Data.SqlClient.SqlCommand();
            cmd.CommandText = "pGetURN_V2";
            cmd.CommandTimeout = 180;
            cmd.CommandType = CommandType.StoredProcedure;
            System.Data.SqlClient.SqlParameter _UrnTypeId = new System.Data.SqlClient.SqlParameter();
            _UrnTypeId.ParameterName = "@UrnTypeId";
            _UrnTypeId.Size = -1;
            _UrnTypeId.Value = UrnTypeId;
            cmd.Parameters.Add(_UrnTypeId);
            System.Data.SqlClient.SqlParameter _UrnNo = new System.Data.SqlClient.SqlParameter();
            _UrnNo.ParameterName = "@UrnNo";
            _UrnNo.Size = 50;
            _UrnNo.Value = UrnNo;
            cmd.Parameters.Add(_UrnNo);
            System.Data.SqlClient.SqlParameter _ContextInfo = new System.Data.SqlClient.SqlParameter();
            _ContextInfo.ParameterName = "@ContextInfo";
            _ContextInfo.Size = -1;
            _ContextInfo.Value = ContextInfo;
            cmd.Parameters.Add(_ContextInfo);
            return cmd;
        }
        public static System.Data.SqlClient.SqlCommand pGetPincodeDetails_V2Command(long Pincode, int OrgID, System.Data.DataTable ContextInfo)
        {
            System.Data.SqlClient.SqlCommand cmd;
            cmd = new System.Data.SqlClient.SqlCommand();
            cmd.CommandText = "pGetPincodeDetails_V2";
            cmd.CommandTimeout = 180;
            cmd.CommandType = CommandType.StoredProcedure;
            System.Data.SqlClient.SqlParameter _Pincode = new System.Data.SqlClient.SqlParameter();
            _Pincode.ParameterName = "@Pincode";
            _Pincode.Size = -1;
            _Pincode.Value = Pincode;
            cmd.Parameters.Add(_Pincode);
            System.Data.SqlClient.SqlParameter _OrgID = new System.Data.SqlClient.SqlParameter();
            _OrgID.ParameterName = "@OrgID";
            _OrgID.Size = -1;
            _OrgID.Value = OrgID;
            cmd.Parameters.Add(_OrgID);
            System.Data.SqlClient.SqlParameter _ContextInfo = new System.Data.SqlClient.SqlParameter();
            _ContextInfo.ParameterName = "@ContextInfo";
            _ContextInfo.Size = -1;
            _ContextInfo.Value = ContextInfo;
            cmd.Parameters.Add(_ContextInfo);
            return cmd;
        }
        public static System.Data.SqlClient.SqlCommand pGetClientAttributesFieldDetails_V2Command(long ReferenceID, string ReferenceType, System.Data.DataTable ContextInfo)
        {
            System.Data.SqlClient.SqlCommand cmd;
            cmd = new System.Data.SqlClient.SqlCommand();
            cmd.CommandText = "pGetClientAttributesFieldDetails_V2";
            cmd.CommandTimeout = 180;
            cmd.CommandType = CommandType.StoredProcedure;
            System.Data.SqlClient.SqlParameter _ReferenceID = new System.Data.SqlClient.SqlParameter();
            _ReferenceID.ParameterName = "@ReferenceID";
            _ReferenceID.Size = -1;
            _ReferenceID.Value = ReferenceID;
            cmd.Parameters.Add(_ReferenceID);
            System.Data.SqlClient.SqlParameter _ReferenceType = new System.Data.SqlClient.SqlParameter();
            _ReferenceType.ParameterName = "@ReferenceType";
            _ReferenceType.Size = 200;
            _ReferenceType.Value = ReferenceType;
            cmd.Parameters.Add(_ReferenceType);
            System.Data.SqlClient.SqlParameter _ContextInfo = new System.Data.SqlClient.SqlParameter();
            _ContextInfo.ParameterName = "@ContextInfo";
            _ContextInfo.Size = -1;
            _ContextInfo.Value = ContextInfo;
            cmd.Parameters.Add(_ContextInfo);
            return cmd;
        }
        public static System.Data.SqlClient.SqlCommand pInsertClientAttributeFieldDetails_V2Command(long PatientVisit, System.Data.DataTable ClientAttribute, System.Data.DataTable ContextInfo)
        {
            System.Data.SqlClient.SqlCommand cmd;
            cmd = new System.Data.SqlClient.SqlCommand();
            cmd.CommandText = "pInsertClientAttributeFieldDetails_V2";
            cmd.CommandTimeout = 180;
            cmd.CommandType = CommandType.StoredProcedure;
            System.Data.SqlClient.SqlParameter _PatientVisit = new System.Data.SqlClient.SqlParameter();
            _PatientVisit.ParameterName = "@PatientVisit";
            _PatientVisit.Size = -1;
            _PatientVisit.Value = PatientVisit;
            cmd.Parameters.Add(_PatientVisit);
            System.Data.SqlClient.SqlParameter _ClientAttribute = new System.Data.SqlClient.SqlParameter();
            _ClientAttribute.ParameterName = "@ClientAttribute";
            _ClientAttribute.Size = -1;
            _ClientAttribute.Value = ClientAttribute;
            cmd.Parameters.Add(_ClientAttribute);
            System.Data.SqlClient.SqlParameter _ContextInfo = new System.Data.SqlClient.SqlParameter();
            _ContextInfo.ParameterName = "@ContextInfo";
            _ContextInfo.Size = -1;
            _ContextInfo.Value = ContextInfo;
            cmd.Parameters.Add(_ContextInfo);
            return cmd;
        }

        public static System.Data.SqlClient.SqlCommand pGetComplaintByNameIDCommand(string pComplaintName, System.Data.DataTable ContextInfo)
        {
            System.Data.SqlClient.SqlCommand cmd;
            cmd = new System.Data.SqlClient.SqlCommand();
            cmd.CommandText = "pGetComplaintByNameID";
            cmd.CommandTimeout = 180;
            cmd.CommandType = CommandType.StoredProcedure;
            System.Data.SqlClient.SqlParameter _pComplaintName = new System.Data.SqlClient.SqlParameter();
            _pComplaintName.ParameterName = "@pComplaintName";
            _pComplaintName.Size = 255;
            _pComplaintName.Value = pComplaintName;
            cmd.Parameters.Add(_pComplaintName);
            System.Data.SqlClient.SqlParameter _ContextInfo = new System.Data.SqlClient.SqlParameter();
            _ContextInfo.ParameterName = "@ContextInfo";
            _ContextInfo.Size = -1;
            _ContextInfo.Value = ContextInfo;
            cmd.Parameters.Add(_ContextInfo);
            return cmd;
        }

        public static System.Data.SqlClient.SqlCommand pGetICDCODEDESCCommand(string pICDCODEDESC, System.Data.DataTable ContextInfo)
        {
            System.Data.SqlClient.SqlCommand cmd;
            cmd = new System.Data.SqlClient.SqlCommand();
            cmd.CommandText = "pGetICDCODEDESC";
            cmd.CommandTimeout = 180;
            cmd.CommandType = CommandType.StoredProcedure;
            System.Data.SqlClient.SqlParameter _pICDCODEDESC = new System.Data.SqlClient.SqlParameter();
            _pICDCODEDESC.ParameterName = "@pICDCODEDESC";
            _pICDCODEDESC.Size = 255;
            _pICDCODEDESC.Value = pICDCODEDESC;
            cmd.Parameters.Add(_pICDCODEDESC);
            System.Data.SqlClient.SqlParameter _ContextInfo = new System.Data.SqlClient.SqlParameter();
            _ContextInfo.ParameterName = "@ContextInfo";
            _ContextInfo.Size = -1;
            _ContextInfo.Value = ContextInfo;
            cmd.Parameters.Add(_ContextInfo);
            return cmd;
        }
        public static System.Data.SqlClient.SqlCommand pGetICDCODECommand(string pICDCODE, System.Data.DataTable ContextInfo)
        {
            System.Data.SqlClient.SqlCommand cmd;
            cmd = new System.Data.SqlClient.SqlCommand();
            cmd.CommandText = "pGetICDCODE";
            cmd.CommandTimeout = 180;
            cmd.CommandType = CommandType.StoredProcedure;
            System.Data.SqlClient.SqlParameter _pICDCODE = new System.Data.SqlClient.SqlParameter();
            _pICDCODE.ParameterName = "@pICDCODE";
            _pICDCODE.Size = 255;
            _pICDCODE.Value = pICDCODE;
            cmd.Parameters.Add(_pICDCODE);
            System.Data.SqlClient.SqlParameter _ContextInfo = new System.Data.SqlClient.SqlParameter();
            _ContextInfo.ParameterName = "@ContextInfo";
            _ContextInfo.Size = -1;
            _ContextInfo.Value = ContextInfo;
            cmd.Parameters.Add(_ContextInfo);
            return cmd;
        }
        public static System.Data.SqlClient.SqlCommand pSaveHistoryCommand(System.Data.DataTable pHistory, int OrgID, long pCreatedBy, long pvisitID, long patientID, System.Data.DataTable ContextInfo)
        {
            System.Data.SqlClient.SqlCommand cmd;
            cmd = new System.Data.SqlClient.SqlCommand();
            cmd.CommandText = "pSaveHistory";
            cmd.CommandTimeout = 180;
            cmd.CommandType = CommandType.StoredProcedure;
            System.Data.SqlClient.SqlParameter _pHistory = new System.Data.SqlClient.SqlParameter();
            _pHistory.ParameterName = "@pHistory";
            _pHistory.Size = -1;
            _pHistory.Value = pHistory;
            cmd.Parameters.Add(_pHistory);
            System.Data.SqlClient.SqlParameter _OrgID = new System.Data.SqlClient.SqlParameter();
            _OrgID.ParameterName = "@OrgID";
            _OrgID.Size = -1;
            _OrgID.Value = OrgID;
            cmd.Parameters.Add(_OrgID);
            System.Data.SqlClient.SqlParameter _pCreatedBy = new System.Data.SqlClient.SqlParameter();
            _pCreatedBy.ParameterName = "@pCreatedBy";
            _pCreatedBy.Size = -1;
            _pCreatedBy.Value = pCreatedBy;
            cmd.Parameters.Add(_pCreatedBy);
            System.Data.SqlClient.SqlParameter _pvisitID = new System.Data.SqlClient.SqlParameter();
            _pvisitID.ParameterName = "@pvisitID";
            _pvisitID.Size = -1;
            _pvisitID.Value = pvisitID;
            cmd.Parameters.Add(_pvisitID);
            System.Data.SqlClient.SqlParameter _patientID = new System.Data.SqlClient.SqlParameter();
            _patientID.ParameterName = "@patientID";
            _patientID.Size = -1;
            _patientID.Value = patientID;
            cmd.Parameters.Add(_patientID);
            System.Data.SqlClient.SqlParameter _ContextInfo = new System.Data.SqlClient.SqlParameter();
            _ContextInfo.ParameterName = "@ContextInfo";
            _ContextInfo.Size = -1;
            _ContextInfo.Value = ContextInfo;
            cmd.Parameters.Add(_ContextInfo);
            return cmd;
        }
    }
}
