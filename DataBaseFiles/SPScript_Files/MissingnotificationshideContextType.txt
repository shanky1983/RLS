
CREATE procedure MissingnotificationshideContextType
as
begin
 DECLARE @Curdate DATE =getdate()
 DECLARE @Fromdate DATE =getdate()-1 
DECLARE @ClientVisitDetails AS TABLE
        (
           Id           INT IDENTITY(1, 1),
           PatientId    BIGINT,
           VisitId      BIGINT,
           FinalBillId  BIGINT,
           OrgId        INT,
           OrgAddressId INT,
		   ContextType varchar(3)
        )

DECLARE @tblActionList TABLE
  (
     ContextType       VARCHAR(50) DEFAULT(''),
     Description       VARCHAR(max) DEFAULT(''),
     ActionType        VARCHAR(124) DEFAULT(''),
     Attributes        VARCHAR(500) DEFAULT(''),
     MailFrom          VARCHAR(124) DEFAULT(''),
     MailTo            VARCHAR(1000) DEFAULT(''),
     CCTo              VARCHAR(124) DEFAULT(''),
     BccTo             VARCHAR(124) DEFAULT(''),
     Subject           VARCHAR(500) DEFAULT(''),
     NAME              VARCHAR(124) DEFAULT(''),
     PhoneNo           VARCHAR(124) DEFAULT(''),
     RedirectURL       VARCHAR(255) DEFAULT(''),
     PatientNumber     VARCHAR(124) DEFAULT(''),
     MsgedDate         VARCHAR(124) DEFAULT(''),
     OrgName           VARCHAR(124) DEFAULT(''),
     LocationName      VARCHAR(124) DEFAULT(''),
     ClientStatus      VARCHAR(50) DEFAULT(''),
     BlockFrom         VARCHAR(50) DEFAULT(''),
     BlockTo           VARCHAR(50) DEFAULT(''),
     RefDoctorName     VARCHAR(50) DEFAULT(''),
     PublishedDate     VARCHAR(50) DEFAULT(''),
     InvsNValues       VARCHAR(max) DEFAULT(''),
     AccessionNumber   VARCHAR(max) DEFAULT(''),
     ClientName        VARCHAR(124) DEFAULT(''),
     PatientDueStatus  VARCHAR(50) DEFAULT(''),
     IsAttachment      VARCHAR(50) DEFAULT(''),
     Password          VARCHAR(255) DEFAULT(''),
     AdditionalContext VARCHAR(255) DEFAULT(''),
     Priority          INT DEFAULT(1),
     ApplicationUrl    VARCHAR(max) DEFAULT(''),
     VisitNumber       VARCHAR(50) DEFAULT(''),
     AttachmentName    VARCHAR(500) DEFAULT(''),
     ClientCode        VARCHAR(20) DEFAULT(''),
     SampleName        VARCHAR(100) DEFAULT(''),
     TestName          VARCHAR(2000) DEFAULT(''),
     RejectedDate      DATETIME DEFAULT(''),
     ReCollectedDate   DATETIME,
     BarcodeNumber     VARCHAR(255),
     Reason            VARCHAR(500),
     IsClientblinding  VARCHAR(10),
	VisitType Nvarchar(10),
    ReportLanguage NVARCHAR(100),
    NoofCopies INT  ,
	ClientID BIGINT
  )

DECLARE @RoleID          BIGINT,
        @PatientVisitID  BIGINT,
        @PatientID       BIGINT,
        @OrgAddID        BIGINT,
        @OrgId           INT,
        @FinalBillId     AS BIGINT,
        @AccessionNumber VARCHAR(Max)
DECLARE @ActionDetail [ACTIONDETAILS]
DECLARE @MinId INT,@MaxId AS INT
DECLARE @DueStatus as varchar(10),@ContextType as Varchar(3)

INSERT INTO @ClientVisitDetails(PatientId, VisitId, FinalBillId, OrgId, OrgAddressId,ContextType)
SELECT DISTINCT PV.PatientID,PV.PatientVisitId,VCM.FinalBillID,PV.orgid,PV.OrgAddressID,
CASE WHEN CM.ClientCode='GENERAL' THEN 'P' ELSE 'CP' END
FROM  OrderedInvestigations OI WITH (NOLOCK) 
INNER JOIN PatientVisit PV WITH (NOLOCK) ON OI.VisitID=PV.PatientVisitId
INNER JOIN PatientInvestigation PINV WITH (NOLOCK) ON OI.VisitID=PINV.PatientVisitID
INNER JOIN VisitClientMapping VCM (NOLOCK) ON PINV.PatientVisitID=VCM.VisitID
INNER JOIN ClientMaster CM (NOLOCK) on CM.ClientID=VCM.ClientID
LEFT JOIN Notifications NT WITH (NOLOCK) 
ON OI.VisitID=NT.IdentityID and NT.Category='report' --and nt.status=
--and NT.ActionType='bb' --AND NT.Createdat>=PINV.approvedat 
WHERE OI.Status in ('Approve') And NT.IdentityID IS NULL 
AND
CAST(PINV.approvedat AS DATE) between @Fromdate and @Curdate  
--and PV.orgid=109
--And PV.PatientVisitid in (52997)
GROUP BY PV.PatientID,PV.PatientVisitId,VCM.FinalBillID,PV.orgid,PV.OrgAddressID,CM.ClientCode
--Select * from @ClientVisitDetails

SELECT @MinId = (SELECT Min(Id)
                 FROM   @ClientVisitDetails)

SELECT @MaxId = (SELECT Max(Id)
                 FROM   @ClientVisitDetails)

DECLARE @UDT_Context dbo.UDT_CONTEXT

WHILE @MinId <= @MaxId
  BEGIN
      SELECT @PatientID = PatientID,
             @FinalBillId = FinalBillId,
             @PatientVisitID = VisitId,
             @OrgId = OrgId,
             @OrgAddID = OrgAddressId,
			 @ContextType=ContextType
      FROM   @ClientVisitDetails
      WHERE  Id = @MinId
	  Select @DueStatus =(Select Isnull(Status,'') from PatientDueDetails (nolock) where VisitID=@PatientVisitID)
      SELECT @RoleID = ROLEID FROM   ROLE WITH (NOLOCK) WHERE  ROLENAME = 'Doctor'
             AND ORGID = @OrgID

      SELECT @AccessionNumber=(SELECT Stuff((SELECT N', ' + Ltrim(Rtrim(AccessionNumber)) FROM OrderedInvestigations
                 WHERE  Status IN('Approve','With Held','Rejected','PartiallyApproved')   AND VisitID=@PatientVisitID
                 FOR XML PATH(''),TYPE).value('text()[1]','nvarchar(max)'),1,2,N'')  AS AccessionNumber)
     
      DELETE FROM @tblActionList

      --declare @p5 dbo.UDT_Context
      insert into @UDT_Context values(98,N'Anderson Diagnostics & Labs',N'',107,3076,N'Lab Manager',0,34620,NULL,N'',107,-1,N'',NULL,NULL,3,75,11,N'en-GB',474,N'5ny3p355drslec55vorjtx45',NULL,N'0',NULL)

      INSERT INTO @tblActionList
      EXEC Pperformingnextaction @PageID=474,@ButtonName=N'btnSave',@RoleID=@RoleID,@PatientID=@PatientID,@OrgID=@OrgID,@PatientVisitID=@PatientVisitID,@pSampleID=0,@pIds=''

      DELETE FROM @ActionDetail

      INSERT INTO @ActionDetail(ActionType, Value, AdditionalContext, Category, version, Status, OrgID, OrgAddressID, CreatedAt, CreatedBy, Template, ContextType, IsAttachment, Subject, AttachmentName)
      SELECT ActionType,
             CASE
               WHEN ActionType = 'EMAIL' THEN MailTo
			   WHEN ActionType = 'SMS' THEN PhoneNo
               ELSE ''
             END,
             '<?xml version="1.0" encoding="utf-16"?><ContextInfo><VisitID>'
             + CONVERT(VARCHAR, @PatientVisitID)
             + '</VisitID><AccessionNumber>'
             + @AccessionNumber
             + '</AccessionNumber></ContextInfo>',
             'Report',
             '',
             Case WHEN @DueStatus='Open' THEN 'Due'
			   Else ''
			 END,
             @OrgID,
             @OrgAddID,
             Getdate(),
             '2345',
             Description,
             ContextType,
             IsAttachment,
             Subject,
             Replace(Replace(Replace(AttachmentName, '{VisitNumber}', VisitNumber), '{Name}', Name), '{ClientCode}', ClientCode) AS AttachmentName
      FROM   @tblActionList
     -- WHERE  ContextType = @ContextType
	  DECLARE @SEQ_NUM INT

	SET @SEQ_NUM = (
			SELECT Isnull(Max(seq_num), 0) + 1
			FROM Notifications(nolock)
			)
	  
insert into notifications(
ActionType,
Value,
AdditionalContext,
Category, 
Status,
OrgID,
OrgAddressID,
CreatedAt,
CreatedBy,
Template,
ContextType,
IsAttachment,
Subject,
Seq_Num,
AttachmentName,
IdentityID,
IsClientBlinding)


 select distinct ActionType,
Value,
AdditionalContext,
Category, 
'',
OrgID,
OrgAddressID,
CreatedAt,
CreatedBy,
Template,
ContextType,
IsAttachment,
Subject,
@SEQ_NUM,
AttachmentName,
@PatientVisitID,
'' from @ActionDetail 

SET @MinId = @MinId + 1
  END
 end   

