 CREATE PROCEDURE pGetConsalidateRevenue  (@FinalOut NVarchar(Max) OUTPUT)    
 As      
BEGIN      
 SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED       
  SET NOCOUNT ON       
             
                 
DECLARE -- @pOrgID INT=220,      
@pFDate DATETIME= CONVERT(DATETIME, CONVERT(NVARCHAR, GETDATE(), 101) + ' 00:00:00'),      
@pTDate DATETIME= CONVERT(DATETIME, CONVERT(NVARCHAR, GETDATE(), 101) + ' 23:59:59') --,      
DECLARE @Curdate DATE = Getdate()      
      
declare @ConfigCashAd varchar(10)               
--select  @ConfigCashAd= COM.Configvalue from configkeymaster CM                
--inner join configorgmaster COM on COM.ConfigkeyID=CM.ConfigkeyID                
--where CM.ConfigKey='RestrictReceAmtForCashwithAdvance' and COM.Orgid= @pOrgId         
            
/*Temp Table Declaration */                
DECLARE @DuePaidTable AS TABLE (                
DuePaidDate DATETIME                
,DuePaidAmount DECIMAL(18, 2)                
,DueBillNo BIGINT                
,DiscountAmount Decimal(18,2)                
)                
DECLARE @pPayMentTempTable AS TABLE (                
RowID BIGINT IDENTITY(1, 1)                
,FinalBillID BIGINT                
,Amount DECIMAL(23, 2) NULL                
,PaymentName NVARCHAR(25)                
,PayMentTypeID INT            
,BillType VARCHAR(10)            
,BillDate VARCHAR(10)              
)                
DECLARE @PaymentMode TABLE (                
PaymentName NVARCHAR(200)                
,FinalBillID BIGINT                
,PayMentTypeID INT             
,BillType VARCHAR(10)            
,BillDate VARCHAR(10)             
,Cash DECIMAL(23, 2)                
,Cards DECIMAL(23, 2)                
,Cheque DECIMAL(23, 2)                
,DemandDraft DECIMAL(23, 2)                
,Coupon DECIMAL(23, 2)                
,PRIMARY KEY (                
FinalBillID                
,PaymentName                
)                
)                
DECLARE @tblBills TABLE (                
FinalBillID BIGINT                
,BillNumber NVARCHAR(30)                
,NAME NVARCHAR(255)                
,Age NVARCHAR(100)                
,PatientID BIGINT                
,PatientNumber NVARCHAR(30)                
,BillAmount DECIMAL(23, 2)                
,DiscountAmount DECIMAL(23, 2)                
,BillDate NVARCHAR(10)                
,AmtReceived DECIMAL(23, 2)                
,Cash DECIMAL(23, 2) NULL                
,Cards DECIMAL(23, 2) NULL                
,Cheque DECIMAL(23, 2) NULL                
,DD DECIMAL(23, 2) NULL                
,Coupon DECIMAL(23, 2) NULL                
,CurrencyCode NVARCHAR(100)                
,PaidCurrencyAmt DECIMAL(23, 2)                
,PaidCurrencyID INT                
,RefundAmt DECIMAL(23, 2)                
,BillType NVARCHAR(5)                
,RefundNo NVARCHAR(30)                
,RefCurrencyID INT                
,RefCurrency NVARCHAR(10)                
,Tax DECIMAL(23, 2)                
,NetValue DECIMAL(23, 2)                
,Due DECIMAL(23, 2)                
,OrgID BIGINT                
,OrgName NVARCHAR(100)                
,VisitId BIGINT                
,VisitType INT                
,IsCreditBill NCHAR(1)                
,ClientID BIGINT                
,ClientName NVARCHAR(250)                
,ServiceCharge DECIMAL(18, 2)                
,ReferingPhysicianID INT                
,ReferingPhysicianName NVARCHAR(150)                
,ReferOrgID INT                
,ReferOrgName NVARCHAR(150)                
,ClientTypeId INT                
,Location NVARCHAR(150)                
,WriteoffAmount DECIMAL(18, 2)                
,RoundOff DECIMAL(18, 2)                
,RegistrationDate DATETIME                
,DuePaidAmount DECIMAL(18, 2)                
,RedeemAmount DECIMAL(18, 2) ----Added by Thamilselvan For adding the Redeem amount in Collection Report..                    
,VisitNumber VARCHAR(100)                
,UserName VARCHAR(250)                
,WardName VARCHAR(15)      
,CancelledBill Char(1)               
,IsAdvanceClientFlag Bit Default(0)      
,AdvanceAmt Decimal(18,2) Default(0.00)          
)                
DECLARE @tblAmtRcvd TABLE (                
FinalBillID BIGINT                
,AmtReceived DECIMAL(23, 2)                
,PaidCurrencyCode NVARCHAR(100)                
--,PaidCurrencyAmt DECIMAL(23, 2)                
,OrgId BIGINT                
,PaidCurrencyID INT          
,BillType VARCHAR(255)             
,Createdat VARCHAR(10)                
,PRIMARY KEY (                
FinalBillID                
,PaidCurrencyCode             
,BillType,Createdat          
)                
)                
DECLARE @tblAmtRfnd TABLE (                
FinalBillID BIGINT                
,RefundNo NVARCHAR(20)                
,AmtRefund DECIMAL(23, 2)                
,RefCurrencyID INT                
,TransCurrencyAmt DECIMAL(23, 2)                
,OrgId BIGINT                
)                
                
                
--Declare @tblOrg Table (TOrgId INT)                                  
DECLARE @pBaseCurrencyID INT                
SELECT @pBaseCurrencyID = CurrencyID                
FROM CurrencyOrgMapping(NOLOCK)                
WHERE OrgID in (220,247,245,246,248)  --= @pOrgID                
AND IsBaseCurrency = 'Y'                
DECLARE @pBaseCurrencyCode NVARCHAR(100)                
SELECT @pBaseCurrencyCode = CurrencyCode                
FROM CurrencyMaster(NOLOCK)                
WHERE CurrencyID = @pBaseCurrencyID                
DECLARE @currencycode NVARCHAR(5)        
Declare @pCurrencyID INT =0          
SELECT @currencycode = CurrencyCode                
FROM CurrencyMaster(NOLOCK)                
WHERE CurrencyID = @pCurrencyID                
IF (@pCurrencyID = 0)                
SET @pCurrencyID = NULL                        
DECLARE @tblOrg TABLE (                  
ORGNAME NVARCHAR(100)                  
,TORGID INT                  
)                  
INSERT INTO @tblOrg                  
 SELECT COALESCE(O.OrgDisplayName,O.Name) AS Name,O.OrgID FROM Organization O          
WHERE O.ParentOrgID  in  (Select distinct ParentOrgID from Organization WHERE OrgID in (220,247,245,246,248)   )        
and OrgID =COALESCE(CASE WHEN ParentOrgID=OrgID THEN null ELSE  OrgID END,OrgID)        
              
DECLARE @TblClient TABLE (                
ClientID INT                
,ClientName NVARCHAR(150)                
,ClientTypeID INT                
,OrgID INT                
,ORGADDRESSID INT                
)                
INSERT INTO @TblClient                
SELECT ClientID                
,ClientName                
,ClientTypeID                
,OrgID                
,OrgAddreSSID                
FROM ClientMaster CM(NOLOCK)                
INNER JOIN @tblOrg T ON T.TORGID = CM.OrgID                
                
DECLARE @DefaultCurrencyID BIGINT = 63                
SELECT @DefaultCurrencyID = CurrencyID                
FROM CurrencyOrgMapping                
WHERE OrgID in (220,247,245,246,248) --= @pOrgID                
UPDATE ARD                
SET ARD.PaidCurrencyID = @DefaultCurrencyID                
FROM AmountReceivedDetails ARD WITH (NOLOCK)                
WHERE ARD.CreatedAT BETWEEN @pFDate                
AND @pTDate                
AND Isnull(PaidCurrencyID, 0) = 0                
AND OrgID in (220,247,245,246,248)  --= @pOrgID                
UPDATE ARD                
SET ARD.TranCurrencyID = @DefaultCurrencyID                
FROM AmountRefundDetails ARD WITH (NOLOCK)                
WHERE ARD.CreatedAT BETWEEN @pFDate                
AND @pTDate                
AND Isnull(TranCurrencyID, 0) = 0                
AND OrgID in (220,247,245,246,248)  --= @pOrgID                 
      
INSERT INTO @tblBills            
SELECT DISTINCT FB.FinalBillID            
,FB.BillNumber            
,NULL            
,NULL            
,FB.PatientID            
,NULL            
,CASE             
WHEN max(FeeId) = - 2            
THEN 0            
ELSE SUM(BD.Amount * BD.Quantity)            
END AS BillAmount            
,FB.DiscountAmount + DPD.DiscountAmount            
,convert(VARCHAR(10), cast(BD.BilledDate AS DATE), 101)            
,0        
,0            
,0            
,0            
,0            
,0            
,@pBaseCurrencyCode            
,0            
,@pBaseCurrencyID            
,0            
,CASE             
WHEN MAX(FeeId) = - 2            
THEN 'DC'            
ELSE 'FB'            
END AS BillType            
,NULL            
,NULL            
,NULL            
,(ISNULL(FB.TaxAmount, 0.00) + ISNULL(FB.EDCess, 0.00) + ISNULL(FB.SHEDCess, 0.00)) AS TaxAmount       
,0            
,FB.Due            
,FB.OrgID            
,''            
,FB.VisitID            
,PV.VisitType            
,ISNULL(FB.IsCreditBill, 'N')            
,VCM.ClientID            
,''            
,Isnull(FB.ServiceCharge, 0.00)            
,pv.ReferingPhysicianID            
,pv.ReferingPhysicianName            
,pv.HospitalID            
,PV.HospitalName            
,NULL            
,OA.Location            
,0            
,Isnull(FB.RoundOff, 0)            
,Isnull(pv.VisitDate, '') AS RegistrationDate            
--,ISNULL(max(DPD.PaidDate), '')          
,0--ISNULL((DPD.PaidAmount), 0)            
,0--Isnull(FB.RedeemValue, 0) AS RedeemAmount           
,pv.VisitNumber            
,U.NAME AS UserName            
,CASE             
WHEN CM.ISCash = 'Y'            
THEN 'CASH CLIENT'            
ELSE 'CREDIT CLIENT'            
END AS WardName  ,      
(SELECT CASE when (Sum(Case WHEN oi.Status in('Cancel') then 1 ELSE 0 End))=(COUNT(1)) then 'Y' ELSE 'N' END                                   
FROM OrderedInvestigations oi With (NOLOCK ) where oi.visitid=fb.visitid)  As CancelledBill      
,CM.IsAdvanceClient,0      
FROM PatientVisit pv WITH (NOLOCK)            
INNER JOIN FinalBill FB WITH (NOLOCK) ON PV.Patientvisitid = FB.Visitid and pv.ReferVisitID is null            
INNER JOIN VisitClientMapping VCM(NOLOCK) ON VCM.FinalBillID = FB.FinalBillID --AND VCM.VisitID =FB.VisitID AND VCM.OrgID =FB.OrgID                                
INNER JOIN ClientMaster CM ON CM.ClientID = VCM.ClientID            
AND CM.OrgID in (220,247,245,246,248)  --= @pOrgID            
INNER JOIN BillingDetails BD WITH (NOLOCK) ON BD.FinalBillID = FB.FinalBillID            
AND BD.OrgID = FB.OrgID            
--LEFT JOIN DuePaidDetail DPD WITH (NOLOCK) ON DPD.DueBillNo = FB.FinalBillID AND FB.OrgID = @pOrgID            
OUTER APPLY (            
SELECT ISNULL(max(DTD.PaidDate), '') AS PaidDate            
,ISNULL(SUM(DTD.PaidAmount), 0) AS PaidAmount            
,ISNULL(SUM(DTD.DiscountAmt), 0) AS DiscountAmount            
FROM DuePaidDetail DTD            
WHERE FB.FinalBillID = DTD.DueBillNo        
) DPD            
INNER JOIN @tblOrg Org ON Org.TOrgId = FB.OrgID            
INNER JOIN OrganizationAddreSS OA WITH (NOLOCK) ON OA.OrgID = FB.OrgID            
AND OA.AddreSSID = FB.OrgAddreSSID            
INNER JOIN Users U(NOLOCK) ON U.LoginID = FB.CreatedBy            
AND U.OrgID = FB.OrgID            
WHERE BD.BilledDate BETWEEN @pFDate            
AND @pTDate            
AND PV.OrgID in (220,247,245,246,248)  --= @pOrgid            
AND FB.Orgid in (220,247,245,246,248)  --= @POrgid            
AND VCM.Orgid in (220,247,245,246,248)  --= @POrgid            
AND pv.VisitType = 0   and pv.refervisitid is null               
AND OA.AddreSSID  in (471,483,476,482,487,488,489,493,434,484)               
AND FeeId != - 2            
GROUP BY FB.FinalBillID            
,FB.PatientID            
,            
--FeeId,              
FB.OrgID            
,FB.BillNumber            
,FB.DiscountAmount            
,cast(BD.BilledDate AS DATE)            
,FB.due            
,FB.RedeemValue          
,FB.TaxAmount            
,FB.VisitID            
,FB.IsCreditBill            
,VCM.ClientID            
,PV.VisitType            
,FB.EDCess            
,FB.SHEDCess            
,FB.ServiceCharge            
,pv.ReferingPhysicianID            
,pv.ReferingPhysicianName            
,PV.HospitalID            
,PV.HospitalName            
,OA.Location            
,FB.RoundOff            
,pv.VisitDate            
--,DPD.PaidDate            
,DPD.PaidAmount            
,pv.visitnumber            
,U.NAME          
,DPD.DiscountAmount ,CM.IsAdvanceClient          
,CASE             
WHEN CM.ISCash = 'Y'            
THEN 'CASH CLIENT'            
ELSE 'CREDIT CLIENT'            
END       
         
   -- Delete if cancelled whole test per visit --            
  delete from @tblbills where CancelledBill='Y'      
      
DECLARE @DuepaidDetails TABLE (            
DueBillNo BIGINT            
,orgid INT            
,PaidDate VARCHAR(10)            
,ReceiptNO VARCHAR(50)            
,PaidAmount DECIMAL(18, 0)            
,BaseCurrencyID INT            
,PaidCurrencyID INT            
,OtherCurrencyAmount DECIMAL(18, 2)            
,createdat DATETIME            
,Discount DECIMAL(18, 2)      
,CreatedBy INT      --Added by Jayaramanan 12/03/2018      
)            
INSERT INTO @DuepaidDetails            
SELECT DPD.DueBillNo            
,fb.ORGID            
,convert(VARCHAR(10), cast(DPD.PaidDate AS DATE), 101)            
,ISNULL(DPD.ReceiptNO, '0')            
,DPD.PaidAmount            
,DPD.BaseCurrencyID            
,DPD.PaidCurrencyID            
,DPD.OtherCurrencyAmount            
,DPD.createdat            
,DPD.DiscountAmt       
,DPD.CreatedBy     --Added by Jayaramanan 12/03/2018      
FROM DuePaidDetail DPD            
INNER JOIN FinalBill FB ON FB.FinalBillID = DPD.DueBillNo            
AND ISNULL(DPD.ReceiptNO, '0') <> '0'            
WHERE FB.OrgID in (220,247,245,246,248)  --= @pOrgId            
AND DPD.PaidDate BETWEEN @pFDatE           
AND @pTDate            
INSERT INTO @tblBills            
SELECT DISTINCT FB.FinalBillID            
,FB.BillNumber            
,NULL            
,NULL            
,FB.PatientID            
,NULL            
,0 AS BillAmount            
,0 --Sum(DPD.Discount)            
,convert(VARCHAR(10), cast(DPD.PaidDate AS DATE), 101)            
,0            
,0            
,0            
,0            
,0            
,0            
,@pBaseCurrencyCode            
,0            
,@pBaseCurrencyID            
,0            
,'DC' AS BillType            
,NULL            
,NULL            
,NULL            
,0 AS TaxAmount            
,0            
,0 --,FB.currentdue            
,FB.OrgID            
,''            
,FB.VisitID            
,PV.VisitType            
,ISNULL(FB.IsCreditBill, 'N')            
,VCM.ClientID            
,''            
,Isnull(FB.ServiceCharge, 0.00)            
,pv.ReferingPhysicianID            
,pv.ReferingPhysicianName            
,pv.HospitalID            
,PV.HospitalName            
,NULL            
,OA.Location            
,0            
,Isnull(FB.RoundOff, 0)            
--,Isnull(pv.VisitDate, '') AS RegistrationDate           
,Isnull(DPD.PaidDate, '') AS RegistrationDate          
          
--,ISNULL(max(DPD.PaidDate), '')            
           
 ,sum(ISNULL((DPD.PaidAmount), 0))  ,0          
,pv.VisitNumber            
,U.NAME AS UserName            
,CASE             
WHEN CM.ISCash = 'Y'            
THEN 'CASH CLIENT'            
ELSE 'CREDIT CLIENT'            
END AS WardName       
,(SELECT CASE when (Sum(Case WHEN oi.Status in('Cancel') then 1 ELSE 0 End))=(COUNT(1)) then 'Y' ELSE 'N' END                                   
FROM OrderedInvestigations oi With (NOLOCK ) where oi.visitid=FB.VisitID) As CancelledBill           
,CM.IsAdvanceClient,0      
FROM PatientVisit pv WITH (NOLOCK)            
INNER JOIN FinalBill FB WITH (NOLOCK) ON PV.Patientvisitid = FB.Visitid and pv.ReferVisitID is null            
INNER JOIN VisitClientMapping VCM(NOLOCK) ON VCM.FinalBillID = FB.FinalBillID --AND VCM.VisitID =FB.VisitID AND VCM.OrgID =FB.OrgID                                
INNER JOIN ClientMaster CM ON CM.ClientID = VCM.ClientID            
AND CM.OrgID in (220,247,245,246,248)  --= @pOrgID            
INNER JOIN @DuepaidDetails DPD ON FB.FinalBillID = DPD.DueBillNo            
AND ISNULL(DPD.ReceiptNO, '0') <> '0'            
--INNER JOIN BillingDetails BD WITH (NOLOCK) ON BD.FinalBillID = FB.FinalBillID            
--AND BD.OrgID = FB.OrgID            
--LEFT JOIN DuePaidDetail DPD WITH (NOLOCK) ON DPD.DueBillNo = FB.FinalBillID AND FB.OrgID = @pOrgID            
INNER JOIN @tblOrg Org ON Org.TOrgId = FB.OrgID            
INNER JOIN OrganizationAddreSS OA WITH (NOLOCK) ON OA.OrgID = FB.OrgID            
AND OA.AddreSSID = FB.OrgAddreSSID            
INNER JOIN Users U(NOLOCK) ON U.LoginID = DPD.CreatedBy      --Added by Jayaramanan 12/03/2018      
AND U.OrgID = FB.OrgID            
WHERE DPD.createdat BETWEEN @pFDate            
AND @pTDate            
AND PV.OrgID in (220,247,245,246,248)  --= @pOrgid            
AND FB.Orgid in (220,247,245,246,248)  --= @POrgid            
AND VCM.Orgid in (220,247,245,246,248)  --= @POrgid            
AND pv.VisitType = 0      and pv.refervisitid is null           
AND OA.AddreSSID in (471,483,476,482,487,488,489,493,434,484)               
GROUP BY FB.FinalBillID            
,FB.PatientID            
,            
--FeeId,                                                    
FB.OrgID            
,FB.BillNumber            
--,DPD.Discount            
,cast(PV.VisitDate AS DATE)            
,FB.currentdue            
,FB.TaxAmount            
,FB.VisitID            
,FB.IsCreditBill            
,VCM.ClientID            
,PV.VisitType            
,FB.EDCess            
,FB.SHEDCess            
,FB.ServiceCharge            
,pv.ReferingPhysicianID            
,pv.ReferingPhysicianName            
,PV.HospitalID  ,PV.HospitalName            
,OA.Location            
,FB.RoundOff            
,pv.VisitDate            
,convert(VARCHAR(10), cast(DPD.PaidDate AS DATE), 101)            
--,DPD.PaidAmount            
,pv.visitnumber            
,U.NAME  ,DPD.PaidDate  ,CM.IsAdvanceClient        
,CASE             
WHEN CM.ISCash = 'Y'            
THEN 'CASH CLIENT'            
ELSE 'CREDIT CLIENT'            
END        
      
-- Delete if cancelled whole test per visit --      
delete from @tblbills where CancelledBill='Y'      
          
update t set t.due= PD.DueAmount from @tblBills t inner join Patientduedetails PD on PD.finalbillid=t.finalbillid where t.billtype='FB'        
      
/* Same Date Due collection Cleared by Surya.G */       
update T set T.[Due]=Case when T.Billdate=T1.BillDate and T.BillNumber=T1.BillNumber and T.BillType<>T1.BillType Then (T.Due-T1.DuePaidAmount-DPD.Discount) else T.Due End       
from  @tblBills T      
inner join @tblBills T1 on T.FinalBillID=T1.FinalBillID and T.BillNumber=T1.BillNumber      
Inner join @DuepaidDetails DPD ON DPD.DueBillNo=T.FinalBillID and DPD.DueBillNo=T1.FinalBillID      
Where T.BillType='FB' and T1.BillType='DC'        
       
 /* Same Date Due collection Cleared by Surya.G */      
      
      
update T SET                 
      
--T.BillAmount= (Case when T.BillAmount >0 Then T.BillAmount-(isnull(s.DiscountAmount,0)+isnull(s.AmtRefund,0)) Else 0 End), --Surya Changes (Hided First update line)      
--T.BillAmount= (Case when T.BillAmount >0 Then T.BillAmount-(isnull(s.AmtRefund,0)) Else T.BillAmount End), --Added By Jayaramanan 08/03/2019               
T.DiscountAmount=((Case when T.DiscountAmount>0 Then Isnull(T.DiscountAmount,0)-isnull(s.DiscountAmount,0) Else T.DiscountAmount End) + Isnull(s.DiscountAdjustedAmt,0))--(--Surya Changes (added DiscountAdjustedAmt))----Added By Jayaramanan 08/03/2019    
  
   
 from @tblBills  T         
inner join                 
 (SELECT BD.Finalbillid,sum(DiscountAmount) DiscountAmount,sum(AmtRefund) AmtRefund ,Sum(ISnull(S.DiscountAdjustedAmt,0)) as DiscountAdjustedAmt FROM billingdetails BD                 
INNER JOIN AmountRefundDetails s on s.BillingDetailsID=bd.BillingDetailsID and  BD.FinalBillID = s.FinalBillID                
WHERE BD.BilledDate BETWEEN @pFDate                
AND @pTDate            
  AND S.Createdat BETWEEN @pFDate AND @pTDate                
AND BD.Orgid in (220,247,245,246,248)  --= @POrgid           
AND S.Orgid in (220,247,245,246,248)        
group by BD.Finalbillid) S on S.FinalBillID=T.FinalBillID       
               
  /** Suresh Changes  START**/              
  Declare @tblAmountRefundDetails as table(Finalbillid bigint,AmtRefund decimal(18,2))                
INSERT INTO @tblAmountRefundDetails (                
FinalBillID                
,AmtRefund                
)                
SELECT ARD.FinalBillID                
,SUM(AmtRefund)                
FROM AmountRefundDetails ARD WITH (NOLOCK)                
INNER JOIN @tblBills F  ON F.FinalBillID = ARD.FinalBillID                 
AND F.OrgID in (220,247,245,246,248)                  
AND ARD.CreatedAt BETWEEN @pFDate                
AND @pTDate                
where F.BillType='FB'      
--AND f.OrgAddressID = ISNULL(@LocationId, F.OrgAddressID)               
GROUP BY ARD.FinalBillID       
                
  /** Suresh Changes END**/              
--INSERT INTO @tblAmtRcvd                
--SELECT FB.FinalBillID                
--,                     
--Sum(ARD.AmtReceived)-sum(isnull(S.AmtRefund,0))                
--,CM.CurrencyCode,               
--Sum(ARD.OtherCurrencyamount)                
--,ARD.OrgID                
--,ARD.PaidCurrencyID                
--FROM @tblBills FB                
--INNER JOIN AmountReceivedDetails ARD WITH (NOLOCK) ON FB.FinalBillID = ARD.FinalBillID                   
--AND FB.OrgID = ARD.OrgID                
--left join @tblAmountRefundDetails s on   FB.FinalBillID = s.FinalBillID              
-- INNER JOIN CurrencyMaster CM WITH (NOLOCK) ON CM.CurrencyID = ARD.PaidCurrencyID                
--INNER JOIN @tblOrg Org ON Org.TOrgId = ARD.OrgID                
--WHERE Isnull(ARD.PaidCurrencyID, @pBaseCurrencyID) = COALESCE(@pCurrencyID, Isnull(ARD.PaidCurrencyID, @pBaseCurrencyID))                
--AND ARD.CreatedAt BETWEEN @pFDate                
--AND @pTDate                
--GROUP BY FB.FinalBillID                
--,CM.CurrencyCode                
--,ARD.OrgID                
--,ARD.PaidCurrencyID                
--select * from @tblBills                
INSERT @tblAmtRcvd            
SELECT FB.FinalBillID            
,SUM(ARD.AmtReceived) --+ ISNULL(SUM(DPD.PaidAmount), 0)            
,ISNULL(CM.CurrencyCode, 0)            
-- ,ISNULL(sum(ARD.OtherCurrencyAmount) + ISNULL(SUM(DPD.PaidAmount), 0), SUM(ARD.AmtReceived)) + ISNULL(SUM(DPD.PaidAmount), 0)            
,ARD.OrgID            
,ISNULL(ARD.PaidCurrencyID, 0)            
,FB.BillType            
,convert(VARCHAR(10), cast(FB.BillDate AS DATE), 101)           
           
           
FROM @tblBills FB            
INNER JOIN AmountReceivedDetails ARD WITH (NOLOCK) ON FB.FinalBillID = ARD.FinalBillID            
AND ISNULL(Receiptno, 0) = 0            
INNER JOIN CurrencyMaster CM WITH (NOLOCK) ON CM.CurrencyID = ARD.PaidCurrencyID            
WHERE ISNUll(ARD.PaidCurrencyID, @pBaseCurrencyID) = Coalesce(@pCurrencyID, isNull(ARD.PaidCurrencyID, @pBaseCurrencyID))            
AND ARD.CreatedAt BETWEEN @pFDate            
AND @pTDate            
AND ARD.OrgID in (220,247,245,246,248)            
AND FB.BillType ='FB'            
GROUP BY FB.FinalBillID            
,CM.CurrencyCode            
,FB.BillType            
,ARD.OrgID            
,ARD.PaidCurrencyID            
,convert(VARCHAR(10), cast(FB.BillDate AS DATE), 101)            
         
INSERT @tblAmtRcvd            
SELECT FB.DueBillNo            
,SUM(ARD.Amtreceived) --+ ISNULL(SUM(DPD.PaidAmount), 0)            
,ISNULL(CM.CurrencyCode, 0)            
-- ,ISNULL(sum(ARD.OtherCurrencyAmount) + ISNULL(SUM(DPD.PaidAmount), 0), SUM(ARD.AmtReceived)) + ISNULL(SUM(DPD.PaidAmount), 0)            
,ARD.OrgID            
,ISNULL(ARD.PaidCurrencyID, 0)            
,'DC'            
,convert(VARCHAR(10), cast(FB.PaidDate AS DATE), 101)            
FROM @DuepaidDetails FB            
inner join @tblBills tb on tb.finalbillid=fb.DueBillNo          
--Inner join DuePaiddetail DPD with(nolock) on FB.Finalbillid=DPD.DueBillNo-- and DPD.ReceiptNO=FB.billnumber            
INNER JOIN AmountReceivedDetails ARD WITH (NOLOCK) ON FB.DueBillNo = ARD.FinalBillID            
AND ARD.Receiptno = FB.Receiptno            
AND ISNULL(ARD.Receiptno, 0) > 0            
INNER JOIN CurrencyMaster CM WITH (NOLOCK) ON CM.CurrencyID = ARD.PaidCurrencyID            
WHERE ISNUll(ARD.PaidCurrencyID, @pBaseCurrencyID) = Coalesce(@pCurrencyID, isNull(ARD.PaidCurrencyID, @pBaseCurrencyID))            
AND ARD.CreatedAt BETWEEN @pFDate           
AND @pTDate   and tb.billtype='DC'          
AND ARD.OrgID in (220,247,245,246,248)           
--AND BillType = 'DC'-- and ARD.isduereceived='Y' and fb.finalbillid=375374 and dpd.receiptno<>'90'            
GROUP BY FB.DueBillNo            
,CM.CurrencyCode            
--,FB.BillType            
,ARD.OrgID            
,ARD.PaidCurrencyID            
,convert(VARCHAR(10), cast(FB.PaidDate AS DATE), 101)           
          
--INSERT INTO @DuePaidTable                
--SELECT Max(DPD.PaidDate)                
--,Sum(DPD.Paidamount)                
--,DPD.DueBillNo                
--,sum(isnull(DPD.DiscountAmt,0))                
--FROM @tblBills T                
--INNER JOIN DuePaidDetail DPD ON T.FinalBillID = DPD.DueBillNo                
--AND T.OrgID = @pOrgId                
--GROUP BY DPD.DueBillNo                
--UPDATE T                
--SET T.RegistrationDate = DPD.DuePaidDate                
--,T.DuePaidAmount = DPD.DuePaidAmount                
--,T.DiscountAmount=isnull(T.DiscountAmount,0)+ isnull(DPD.DiscountAmount,0)                
--FROM @tblBills T                
--INNER JOIN @DuePaidTable DPD ON T.FinalBillID = DPD.DueBillNo                
UPDATE T                
SET T.AmtReceived = ARD.AmtReceived                
,T.CurrencyCode = ARD.PaidCurrencyCode                
--,T.PaidCurrencyAmt = ARD.PaidCurrencyAmt                
,T.PaidCurrencyID = ARD.PaidCurrencyID                
FROM @tblBills T                
INNER JOIN @tblAmtRcvd ARD ON T.FinalBillID = ARD.FinalBillID                
AND T.OrgID = ARD.OrgId where T.Billtype='FB' and ARD.billtype='FB'              
          
UPDATE T                
SET T.AmtReceived = ARD.AmtReceived                
,T.CurrencyCode = ARD.PaidCurrencyCode                
--,T.PaidCurrencyAmt = ARD.PaidCurrencyAmt                
,T.PaidCurrencyID = ARD.PaidCurrencyID                
FROM @tblBills T                
INNER JOIN @tblAmtRcvd ARD ON T.FinalBillID = ARD.FinalBillID                
AND T.OrgID = ARD.OrgId where T.Billtype='DC' and ARD.billtype='DC'           
--select * from @tblbills where billnumber='JC/03667'          
--UPDATE T                
--SET T.AmtReceived = ARD.AmtReceived                
--,T.CurrencyCode = ARD.PaidCurrencyCode                
----,T.PaidCurrencyAmt = ARD.PaidCurrencyAmt                
--,T.PaidCurrencyID = ARD.PaidCurrencyID                
--FROM @tblBills T                
--INNER JOIN @tblAmtRcvd ARD ON T.FinalBillID = ARD.FinalBillID                
--AND T.OrgID = ARD.OrgId where T.Billtype='DC'           
          
/* WRITEOFF AMOUNT UPDATION*/       
              
UPDATE T                
SET WriteoffAmount = PDD.WriteOffAmt                
FROM @tblBills T                
INNER JOIN PatientDueDetails PDD WITH (NOLOCK) ON PDD.PaidFinalbillID = T.FinalBillID                
AND PDD.OrgID = T.OrgID                       
          
INSERT @pPayMentTempTable (            
Amount            
,FinalBillID            
,PaymentName            
,PayMentTypeID            
,BillType            
)            
SELECT sum(ARM.AmtReceived) -- + ISNULL(SUM(DPD.PaidAmount), 0)            
,ARM.FinalBillID            
,CASE             
WHEN PT.PaymentTypeID = 1            
THEN 'Cash'            
WHEN PT.PaymentTypeID = 2            
THEN 'Cheque'            
WHEN PT.PaymentTypeID = 4            
THEN 'Demand Draft'            
WHEN PT.PaymentTypeID = 10            
THEN 'Coupon'            
ELSE 'Cards'            
END            
,PT.PaymentTypeID            
,T.BillType            
FROM @tblBills T            
INNER JOIN AmountReceivedDetails ARM WITH (NOLOCK) ON T.FinalBillID = ARM.FinalBillID            
AND T.OrgID = ARM.OrgID            
INNER JOIN PaymentType PT WITH (NOLOCK) ON PT.PaymentTypeID = ARM.TypeID            
--LEFT JOIN DuePaidDetail DPD WITH (NOLOCK) ON DPD.DueBillNo = T.FinalBillID AND T.OrgID = @pOrgID            
--LEFT JOIN PatientDueDetails PDD WITH (NOLOCK) ON PDD.FinalBillID = ARM.finalbillid            
--AND PDD.OrgID = @pOrgId            
WHERE isNUll(ARM.PaidCurrencyID, @pBaseCurrencyID) = Coalesce(@pCurrencyID, isNull(ARM.PaidCurrencyID, @pBaseCurrencyID))            
AND t.BillType = 'FB'            
AND ARm.receiptno = 0            
GROUP BY PT.PaymentName            
,PT.PaymentTypeID            
,ARM.FinalBillID            
,BillType            
          
INSERT @pPayMentTempTable (            
Amount            
,FinalBillID            
,PaymentName            
,PayMentTypeID            
,BillType            
,BillDate            
)            
SELECT sum(ARM.AmtReceived) -- + ISNULL(SUM(DPD.PaidAmount), 0)            
,ARM.FinalBillID            
,CASE             
WHEN PT.PaymentTypeID = 1            
THEN 'Cash'            
WHEN PT.PaymentTypeID = 2            
THEN 'Cheque'            
WHEN PT.PaymentTypeID = 4            
THEN 'Demand Draft'            
WHEN PT.PaymentTypeID = 10            
THEN 'Coupon'            
ELSE 'Cards'            
END            
,PT.PaymentTypeID            
,'DC'            
,T.paiddate            
FROM @Duepaiddetails T            
inner join @tblBills tb on tb.FinalBillID=t.DueBillNo          
INNER JOIN AmountReceivedDetails ARM WITH (NOLOCK) ON T.DueBillNo = ARM.FinalBillID            
AND t.ReceiptNO = ARM.ReceiptNO            
AND T.OrgID = ARM.OrgID            
INNER JOIN PaymentType PT WITH (NOLOCK) ON PT.PaymentTypeID = ARM.TypeID            
--LEFT JOIN DuePaidDetail DPD WITH (NOLOCK) ON DPD.DueBillNo = T.FinalBillID AND T.OrgID = @pOrgID            
--LEFT JOIN PatientDueDetails PDD WITH (NOLOCK) ON PDD.FinalBillID = ARM.finalbillid            
--AND PDD.OrgID = @pOrgId            
WHERE isNUll(ARM.PaidCurrencyID, @pBaseCurrencyID) = Coalesce(@pCurrencyID, isNull(ARM.PaidCurrencyID, @pBaseCurrencyID)) -- and t.BillType='DC'             
AND ARm.receiptno > 0  and tb.billtype='DC'            
GROUP BY PT.PaymentName            
,PT.PaymentTypeID            
,ARM.FinalBillID            
,t.PaidDate            
          
INSERT INTO @PaymentMode                
SELECT *                
FROM @pPayMentTempTable                 
PIVOT(Sum(Amount) FOR PaymentName IN (                
[cash]                
,[cards]                
,[cheque]                
,[Demand Draft]                
,[Coupon]                
)) AS resultpayment             
          
          
UPDATE T                
SET T.Cards = Isnull(ARD.Cards, 0)                
,T.Cash = Isnull(ARD.Cash, 0)                
,T.Cheque = Isnull(ARD.Cheque, 0)                
,T.dd = Isnull(ARD.DemandDraft, 0)                
,T.Coupon = Isnull(ARD.Coupon, 0)                
FROM @tblBills T                
INNER JOIN @PaymentMode ARD ON T.FinalBillID = ARD.FinalBillID  and T.billtype='FB' and ARD.billtype='FB'          
--select * from @tblbills where billnumber='PJ/00189'          
UPDATE T                
SET T.Cards = Isnull(ARD.Cards, 0)                
,T.Cash = Isnull(ARD.Cash, 0)                
,T.Cheque = Isnull(ARD.Cheque, 0)            
,T.dd = Isnull(ARD.DemandDraft, 0)                
,T.Coupon = Isnull(ARD.Coupon, 0)                
FROM @tblBills T                
INNER JOIN @PaymentMode ARD ON T.FinalBillID = ARD.FinalBillID    and T.billtype='DC' and ARD.billtype='DC'          
           
 INSERT INTO @tblAmtRfnd            
SELECT ARD.FINALBILLID            
,0            
,SUM(ARD.AmtRefund)            
,ARD.TranCurrencyID            
,SUM(ARD.TranCurrencyAmount)            
,ARD.OrgID            
FROM @tblBills T            
INNER JOIN AmountRefundDetails ARD ON ARD.FinalBillID = T.FinalBillID            
AND ARD.OrgID = T.OrgID            
--INNER JOIN CurrencyMaster CM WITH(NOLOCK) ON CM.CurrencyID = ARD.TranCurrencyID                                                                                
WHERE isNUll(ARD.TranCurrencyID, @pBaseCurrencyID) = Coalesce(@pCurrencyID, isNull(ARD.TranCurrencyID, @pBaseCurrencyID))            
AND ARD.CreatedAt BETWEEN @pFDate            
AND @pTDate -- AND ARD.BillStatus !='CANCELLED'                    
GROUP BY ARD.FINALBILLID            
,ARD.TranCurrencyID            
,ARD.OrgID            
      
--select * from @tblbills where billnumber='PJ/00202'      
--select * from @tblbills where billnumber='PJ/00199'      
--Select * from @tblAmountRefundDetails where Finalbillid=21518      
-- Added by Jayaramanan       
IF Exists (Select 1 from @tblBills where Due>0)      
Begin      
--Select '1'      
UPDATE T SET           
T.AmtReceived=(Case when isnull(ARD.AmtRefund ,0)>isnull(T.Due,0)      
then isnull(T.AmtReceived,0)-(isnull(ARD.AmtRefund ,0)-isnull(T.Due,0)) Else T.AmtReceived End)        
,T.Due= (Case when isnull(ARD.AmtRefund ,0)>isnull(T.Due,0) then 0 Else T.Due End )      
--,T.Cash=(Case when T.Cash>0 Then T.AmtReceived Else 0 End)         
--,T.Cards=(Case when T.Cards>0 Then T.AmtReceived Else 0 End)        
FROM @tblBills T                
INNER JOIN @tblAmountRefundDetails ARD ON ARD.FinalBillID = T.FinalBillID  and T.BillType='FB' and isnull(ARD.AmtRefund ,0)>isnull(T.Due,0)      
      
UPDATE TT SET      
TT.Cash=(Case when T.Cash>0 and T.Cash>isnull(ARD.AmtRefund ,0) Then T.Cash-isnull(ARD.AmtRefund ,0)       
When T.Cash>0 and T.Cash<isnull(ARD.AmtRefund ,0) Then 0  Else 0 End)       
,TT.Cards=(Case when T.Cards>0 and T.Cards>isnull(ARD.AmtRefund ,0) Then T.Cards-isnull(ARD.AmtRefund ,0)       
When T.Cards>0 and T.Cards<isnull(ARD.AmtRefund ,0) Then T.Cards-(isnull(ARD.AmtRefund ,0)-T.Cash)  Else 0 End)      
From @tblBills TT Inner join       
(Select tb.FinalBillID, Sum(Cash) Cash,SUM(Cards) Cards ,Due from @tblBills tb group by tb.Finalbillid,tb.due) T ON T.FinalBillID = TT.FinalBillID         
INNER JOIN @tblAmountRefundDetails ARD ON ARD.FinalBillID = T.FinalBillID and isnull(ARD.AmtRefund ,0)>isnull(TT.Due,0)-- and T.BillType='FB'       
      
UPDATE T SET           
T.AmtReceived= isnull(T.AmtReceived ,0)-isnull(ARD.AmtRefund ,0),        
T.Cards=(Case when T.Cards>0 and ((isnull(ARD.AmtRefund ,0)>isnull(T.Due,0)) OR (isnull(T.AmtReceived ,0)>isnull(ARD.AmtRefund ,0))) Then       
((isnull(T.AmtReceived ,0)-isnull(ARD.AmtRefund ,0))-T.Cash) Else 0 End  )      
FROM @tblBills T                
INNER JOIN @tblAmountRefundDetails ARD ON ARD.FinalBillID = T.FinalBillID  and T.BillType='DC'       
and (isnull(ARD.AmtRefund ,0)>isnull(T.Due,0) OR isnull(T.AmtReceived ,0)>isnull(ARD.AmtRefund ,0))      
        
IF NOT EXISTS (Select 1 FROM @tblBills T                
INNER JOIN @tblAmountRefundDetails ARD ON ARD.FinalBillID = T.FinalBillID  and T.BillType='DC'       
and (isnull(ARD.AmtRefund ,0)>isnull(T.Due,0) OR isnull(T.AmtReceived ,0)>isnull(ARD.AmtRefund ,0)))      
BEGIN      
UPDATE T SET           
T.AmtReceived=0       
,T.Cash=0      
,T.Cards=0           
FROM @tblBills T                
INNER JOIN @tblAmountRefundDetails ARD ON ARD.FinalBillID = T.FinalBillID  and T.BillType='DC' and isnull(ARD.AmtRefund ,0)>isnull(T.Due,0)      
END      
      
UPDATE T SET           
T.Due= (Case when isnull(ARD.AmtRefund ,0)<isnull(T.Due,0) then isnull(T.Due,0)-isnull(ARD.AmtRefund ,0) Else T.Due End )           
FROM @tblBills T                
INNER JOIN @tblAmountRefundDetails ARD ON ARD.FinalBillID = T.FinalBillID  and T.BillType='FB' and isnull(ARD.AmtRefund ,0)<isnull(T.Due,0)      
ENd      
Else      
Begin      
--Select '2'      
UPDATE T SET           
T.AmtReceived= (isnull(T.AmtReceived,0)-isnull(ARD.AmtRefund ,0))      
--,T.Cash=(Case when T.Cash>0 Then T.AmtReceived Else 0 End)       
--,T.Cash=(Case when T.Cash>0 and isnull(T.AmtReceived,0)=isnull(ARD.AmtRefund ,0)Then isnull(T.AmtReceived,0)-isnull(ARD.AmtRefund ,0) Else isnull(T.AmtReceived,0) End)       
,T.Cash=(Case when T.Cash>0 and isnull(T.AmtReceived,0)>=isnull(ARD.AmtRefund ,0)Then isnull(T.AmtReceived,0)-isnull(ARD.AmtRefund ,0) Else 0 End)       
,T.Cards=(Case when T.Cards>0 then isnull(T.Cards,0)-isnull(ARD.AmtRefund ,0) Else 0 End)         
FROM @tblBills T                
INNER JOIN @tblAmountRefundDetails ARD ON ARD.FinalBillID = T.FinalBillID  and T.BillType='FB'       
End      
--UPDATE T SET           
--T.AmtReceived=(Case when isnull(ARD.AmtRefund ,0)>isnull(T.Due,0)      
--then isnull(T.AmtReceived,0)-isnull(ARD.AmtRefund ,0) Else T.AmtReceived End)       
--,T.Due= (Case when isnull(ARD.AmtRefund ,0)>isnull(T.Due,0) then 0 Else T.Due End )      
--,T.Cash=(Case when T.Cash>0 Then T.AmtReceived Else 0 End)           
--FROM @tblBills T                
--INNER JOIN @tblAmountRefundDetails ARD ON ARD.FinalBillID = T.FinalBillID  and T.BillType='FB' and isnull(ARD.AmtRefund ,0)>isnull(T.Due,0)      
      
--UPDATE T SET         
--T.Due=(Case when T.AmtReceived=T.Due then isnull(T.Due,0)-isnull(ARD.AmtRefund ,0) Else T.Due End)            
--FROM @tblBills T                
--INNER JOIN @tblAmountRefundDetails ARD ON ARD.FinalBillID = T.FinalBillID  and T.BillType in ('FB') and T.Due=T.AmtReceived      
      
--UPDATE T SET         
--T.Due=(Case when isnull(ARD.AmtRefund ,0)<isnull(T.Due,0)      
-- then isnull(T.Due,0)-(isnull(T.DiscountAmount ,0)+Isnull(ARD.AmtRefund,0)) Else T.Due End)            
--FROM @tblBills T                
--INNER JOIN @tblAmountRefundDetails ARD ON ARD.FinalBillID = T.FinalBillID  and T.BillType='FB' and  isnull(ARD.AmtRefund ,0)<isnull(T.Due,0)      
      
      
--update T SET                
--T.Due=(Case when T.Due>T.AmtReceived then (isnull(T.Due,0)-(isnull(AmtRefund ,0)-Isnull(S.DiscountAmount,0))) Else T.Due End)       
-- from @tblBills  T         
--inner join                 
-- (SELECT BD.Finalbillid,sum(DiscountAmount) DiscountAmount,sum(AmtRefund) AmtRefund FROM billingdetails BD                 
--INNER JOIN AmountRefundDetails s on s.BillingDetailsID=bd.BillingDetailsID and  BD.FinalBillID = s.FinalBillID             
--WHERE BD.BilledDate BETWEEN @pFDate                
--AND @pTDate            
--  AND S.Createdat BETWEEN @pFDate AND @pTDate                
--AND BD.Orgid = @POrgid           
--AND S.Orgid = @POrgid group by BD.Finalbillid) S on S.FinalBillID=T.FinalBillID      
      
--select * from @tblbills where billnumber='PJ/00205'      
--select * from @tblbills where billnumber='PJ/00208'  return      
         
UPDATE T SET       
--Select T.AmtReceived,t.due,t.BillType,ard.AmtRefund      
 T.RefundNo = 0                
,T.RefundAmt = ARD.AmtRefund                
,T.RefCurrencyID = 63      
--,T.Cash=(Case when T.Cash>0 Then T.AmtReceived Else 0 End)              
--,T.AmtReceived=(Case when T.AmtReceived>0 then isnull(T.AmtReceived,0)-isnull(ARD.AmtRefund ,0) Else 0 End)            
--,T.Cash=(Case when T.Cash>0 then isnull(T.Cash,0)-isnull(ARD.AmtRefund ,0) Else T.Cash End) -- Added By Jayaramanan 06/03/2019      
--,T.Cards=(Case when T.Cards>0 then isnull(T.Cards,0)-isnull(ARD.AmtRefund ,0) Else 0 End) -- Added By Jayaramanan 06/03/2019      
,T.Cheque=0            
FROM @tblBills T                
INNER JOIN @tblAmountRefundDetails ARD ON ARD.FinalBillID = T.FinalBillID  and T.BillType in ('FB')       
      
--select * from @tblbills where billnumber='PJ/00202'      
--select * from @tblbills where billnumber='PJ/00199'  return      
      
INSERT INTO @tblBills                
SELECT FB.FinalBillID                
,FB.BillNumber                
,NULL                
,NULL                
,FB.PatientID                
,NULL                
,0                
,0                
,CONVERT(NVARCHAR, ARD.CreatedAt, 101)                
,0                
,0                
,0                
,0                
,0                
,0                
,NULL                
,0                
,ARD.TranCurrencyID                
,Sum(Isnull(AmtRefund, 0))                
,NULL                
,ARD.RefundNo                
,ARD.TranCurrencyID                
,NULL                
,0       
,0               
,0                
,FB.OrgID                
,''                
,FB.VisitID                
,PV.VisitType                
,Isnull(FB.IsCreditBill, 'N')                
,VCM.ClientID                
,''                
,0                
,pv.ReferingPhysicianID                
,pv.ReferingPhysicianName             
,PV.HospitalID                
,PV.HospitalName                
,NULL                
,OA.Location                
,0                
,Isnull(FB.RoundOff, 0)                
,Isnull(DPD.PaidDate, '')                
,Isnull(DPD.PaidAmount, 0)                
,0 ----Added by Thamilselvan For adding the Redeem amount in Collection Report..                    
,''                
,U.Name As UserName              
,CASE                 
WHEN CMS.ISCash = 'Y'                
THEN 'CASH CLIENT'                
ELSE 'CREDIT CLIENT'                
END AS WardName      
,(SELECT CASE when (Sum(Case WHEN oi.Status in('Cancel') then 1 ELSE 0 End))=(COUNT(1)) then 'Y' ELSE 'N' END                                   
FROM OrderedInvestigations oi With (NOLOCK ) where oi.visitid=fb.visitid) As CancelledBill          
,CMS.IsAdvanceClient ,0         
FROM AmountRefundDetails ARD WITH (NOLOCK)              
INNER JOIN FinalBill FB WITH (NOLOCK) ON ARD.FinalBillID = FB.FinalBillID                
AND ARD.OrgID = FB.OrgID                
INNER JOIN VisitClientMapping VCM(NOLOCK) ON VCM.FinalBillID = FB.FinalBillID --AND VCM.VisitID =FB.VisitID AND VCM.OrgID =FB.OrgID                                             
INNER JOIN ClientMaster CMS(NOLOCK) ON CMS.ClientID = VCM.ClientID                
AND CMS.OrgID in (220,247,245,246,248)                
LEFT JOIN DuePaidDetail DPD WITH (NOLOCK) ON DPD.DueBillNo = FB.FinalBillID                
AND FB.OrgID in (220,247,245,246,248)                
INNER JOIN PatientVisit pv WITH (NOLOCK) ON pv.PatientVisitId = FB.VisitID                
AND pv.OrgID = FB.OrgID          and pv.ReferVisitID is null      
AND pv.VisitType = 0          
INNER JOIN @tblOrg Org ON Org.TOrgId = ARD.OrgID                
INNER JOIN OrganizationAddreSS OA WITH (NOLOCK) ON OA.OrgID = FB.OrgID                
AND OA.AddreSSID = FB.OrgAddreSSID                
LEFT JOIN CurrencyMaster CM WITH (NOLOCK) ON CM.CurrencyID = ARD.TranCurrencyID                
LEFT JOIN @tblBills T ON T.FinalBillID = ARD.FinalBillID      
Inner Join Users U On  U.LoginID=ARD.CreatedBy and U.OrgID=ARD.OrgID                   WHERE ARD.Orgid in (220,247,245,246,248)         and pv.ReferVisitID is null            
AND ARD.CreatedAt BETWEEN @pFDate                
AND @pTDate                
AND AmtRefund > 0                
AND BillStatus IN (                
'REFUND'                
,'CANCELLED'                
)                          
--AND Isnull(VCM.ClientID, - 2) = Isnull(@ClientID, Isnull(VCM.ClientID, - 2))                
AND OA.AddreSSID in (471,483,476,482,487,488,489,493,434,484)                    
AND T.FinalBillID IS NULL                
GROUP BY FB.FinalBillID                
,FB.BillNumber                
,FB.PatientID                
,FB.OrgID                
,FB.VisitID                
,FB.IsCreditBill                
,VCM.ClientID                
,CONVERT(NVARCHAR, ARD.CreatedAt, 101)                
,ARD.RefundNo                
,ARD.TranCurrencyID                
,PV.VisitType                
,pv.ReferingPhysicianID                
,pv.ReferingPhysicianName                
,PV.HospitalID                
,PV.HospitalName                
,OA.Location                
,FB.RoundOff                
,DPD.PaidDate                
,DPD.PaidAmount       
,U.NAme  ,CMS.IsAdvanceClient               
,CASE                 
WHEN CMS.ISCash = 'Y'                
THEN 'CASH CLIENT'                
ELSE 'CREDIT CLIENT'                
END;          
       
      
-- Delete if cancelled whole test per visit --      
delete from @tblbills where CancelledBill='Y'      
             
/* Updation of Patient Name*/                
UPDATE T                
SET NAME = CASE             
WHEN t.BillType = 'DC'            
THEN SS5.DisplayText + P.NAME + ' (Due Collection)'            
ELSE SS5.DisplayText + P.NAME            
END                  
,PatientNumber = P.PatientNumber                
,Age = CASE                 
WHEN  P.DOB='1800-01-01'                
THEN  ' UnKnown'WHEN Datediff(yy, P.DOB, Getdate()) > 0                
THEN CONVERT(NVARCHAR, Datediff(yy, P.DOB, Getdate())) + ' Years'                
ELSE CASE                 
WHEN Datediff(mm, P.DOB, Getdate()) > 0                
THEN CONVERT(NVARCHAR, Datediff(mm, P.DOB, Getdate())) + ' Months'                
ELSE CONVERT(NVARCHAR, Datediff(DD, P.DOB, Getdate())) + ' Days'                
END                
END                
FROM @tblBills T                
INNER JOIN Patient P(NOLOCK) ON P.PatientID = T.PatientID                
INNER JOIN SalutationOrgMapping SS5(NOLOCK) ON P.TITLECode = SS5.TitleID                
--INNER JOIN @ContextInfo ctx1 ON ctx1.OrgID = SS5.OrgID                
--AND ctx1.LanguageCode = SS5.LanguageCode                
/* Updation of Net Value of bills*/                
----Added by Thamilselvan For adding the Redeem amount in Collection Report.....T.RedeemAmount        
UPDATE T                
SET RefundAmt = isnull(RefundAmt,0) --+  isnull(RefundedAmount,0) -- commented by jayaramanan       
--,BillAmount=isnull(BillAmount,0)-isnull(RefundedAmount,0)   -- commented by jayaramanan          
FROM @tblBills T                
INNER JOIN PatientDueDetails PDD WITH (NOLOCK) ON PDD.FinalbillID = T.FinalBillID                
AND PDD.OrgID = T.OrgID  and PDD.status='Closed'      
UPDATE T                
SET RefundAmt = isnull(RefundAmt,0)-- +  isnull(RefundedAmount,0) -- commented by jayaramanan       
-- ,BillAmount=isnull(BillAmount,0)-isnull(RefundedAmount,0)      Not this line      
FROM @tblBills T                
INNER JOIN PatientDueDetails PDD WITH (NOLOCK) ON PDD.FinalbillID = T.FinalBillID                
AND PDD.OrgID = T.OrgID  and PDD.status='Open'       
                  
UPDATE T                
SET NETVALUE = T.BillAmount - T.DiscountAmount - T.RedeemAmount + T.Tax + T.ServiceCharge + T.RoundOff                
FROM @tblBills T              
WHERE billtype = 'FB'       
      
 IF Exists (Select 1 from @tblBills where IsCreditBill='Y' and WardName='CREDIT CLIENT' and billtype='FB')       
BEGIN      
UPDATE T Set T.Due=T1.NetValue from @tblBills T JOIN @tblBills T1 On T.FinalBillID=T1.FinalBillID      
 where T1.IsCreditBill='Y' and T1.WardName='CREDIT CLIENT' and T1.billtype='FB'      
END      
 --select * from @tblBills where BillNumber='PJ/00183'  return        
UPDATE T                
SET OrgName = ORG.NAME                
FROM @tblBills T                
INNER JOIN Organization ORG WITH (NOLOCK) ON ORG.OrgID = T.OrgID                
--UPDATE T                                                                
--     SET  ReferOrgName = ORG.Name                                                                
--FROM @tblBills T                                                                
--INNER JOIN Organization ORG WITH(NOLOCK) ON ORG.OrgID=T.ReferOrgID                                                             
UPDATE T                
SET ClientID = NULL                
FROM @tblBills T                
WHERE ClientID = 1                
-- UPDATE T                                               
--     SET  ClientName = CM.ClientName                                                      
--FROM @tblBills T                                                                
--INNER JOIN ClientMaster CM WITH(NOLOCK)ON CM.ClientID=T.ClientID and CM.OrgID=T.OrgID                                                      
--WHERE  T.ClientID IS NOT NULL                                                       
UPDATE T                
SET ClientName = tmp1.ClientName                
,clienttypeid = tmp1.ClientTypeID                
FROM @tblBills T                
INNER JOIN @TblClient tmp1 ON T.ClientID = tmp1.ClientID                
AND T.OrgID = tmp1.OrgID                
UPDATE @tblBills                
SET ClientName = 'GENERAL'                
WHERE ClientName = 'GENERAL'                
--UPDATE T                                                                
--     SET VISITTYPE = Case When Upper(PV.IsExternalPatient) ='Y' Then 1                                                                
--            Else 0 End                                               
-- FROM @tblBills T                                                                
--INNER JOIN PATIENTVISIT PV ON PV.PatientVisitId=T.VisitId and T.PatientID=PV.PatientID                                                             
UPDATE @tblBills           
SET PaidCurrencyID = @pBaseCurrencyID                
WHERE PaidCurrencyID IS NULL                
OR PaidCurrencyID = 0                
UPDATE @tblBills                
SET CurrencyCode = @pBaseCurrencyCode                
WHERE CurrencyCode IS NULL                
OR CurrencyCode = ''                
UPDATE @tblBills                
SET ClientTypeId = - 100                
WHERE ClientTypeId IS NULL                
       
--select * from @tblBills         
      
update t set t.amtreceived=0 from @tblBills t where t.Amtreceived<0        
       
      
      
      
Declare @temp table      
(ID int Identity (1,1)      
,FinalBillID BIGINT      
,OrgID BIGINT      
,OrganisationName NVARCHAR(100)      
--,VisitId BIGINT      
--,VisitType INT      
,PatientNumber NVARCHAR(30)      
,PatientName NVARCHAR(255)      
,Age NVARCHAR(100)      
,BillNumber NVARCHAR(30)      
,BillDate NVARCHAR(10)      
,BillAmount DECIMAL(23, 2)      
,Discount DECIMAL(23, 2)      
,TaxAmount DECIMAL(23, 2)      
,NetValue DECIMAL(23, 2)      
,ReceivedAmount DECIMAL(23, 2)      
,ServiceCharge DECIMAL(18, 2)      
,Cash DECIMAL(23, 2) NULL      
,Cards DECIMAL(23, 2) NULL      
,Cheque DECIMAL(23, 2) NULL      
,DD DECIMAL(23, 2) NULL      
,Coupon DECIMAL(23, 2) NULL      
,PaidCurrency NVARCHAR(100)      
--,PaidCurrencyID INT      
,RefundAmt DECIMAL(23, 2)      
,Due DECIMAL(23, 2)      
,IsCreditBill NCHAR(1)      
,ClientID BIGINT      
,ClientName NVARCHAR(250)      
,RefphysicianName NVARCHAR(150)      
,ClientTypeName NVARCHAR(150)      
,Location NVARCHAR(150)      
,WriteoffAmount DECIMAL(18, 2)      
,RoundOff DECIMAL(18, 2)      
,RegistrationDate DATETIME      
,TotalAmount DECIMAL(18, 2)      
,HOSRefund DECIMAL(18, 2)          
,VisitNumber VARCHAR(100)      
,UserName VARCHAR(250)      
,WardName VARCHAR(15)      
,IsAdvanceClientFlag Bit      
,AdvanceAmt DECIMAL(18, 2) Default(0.00)      
)      
      
       
       
Update @tblBills Set Due=0,AdvanceAmt=(Isnull(NetValue,0)) ,AmtReceived=0 Where   IsCreditBill='N' and Isnull(IsAdvanceClientFlag,0)=1 --and Due>0       
and OrgID in (      
select COM.OrgID from configkeymaster CM                
inner join configorgmaster COM on COM.ConfigkeyID=CM.ConfigkeyID                
where CM.ConfigKey='RestrictReceAmtForCashwithAdvance' and COM.Orgid in (220,247,245,246,248) and COM.Configvalue='Y')      
       
      
declare @WalkinTemp as Table (OrgName varchar(255),Center Varchar(255),LocRateID int,GrossAmount int,Discount int,NetAmount int, TotalDue int)      
insert into @WalkinTemp      
SELECT       
OrgName,T.Location,LocRateID,      
Sum(Isnull(BillAmount, 0)) AS BillAmount      
,Sum(Isnull(DiscountAmount, 0)) AS Discount      
,Sum(Isnull(NetValue, 0)) AS NetValue      
--,Sum(Isnull(NetValue, 0)) - (Sum(Isnull(AmtReceived, 0)) + Sum(Isnull(WriteoffAmount, 0))) AS Due      
,Sum(Isnull(Due,0)) As Due      
FROM @tblBills T      
inner join OrganizationAddress O on T.Orgid=O.Orgid and T.Location=O.Location and O.Addressid in (434,471,483,476,482,487,488,489,493,492,484)          
WHERE Isnull(PaidCurrencyID, @pBaseCurrencyID) =Isnull(PaidCurrencyID, @pBaseCurrencyID)      
AND Isnull(VisitType, - 2) = Isnull(VisitType, - 2)        
GROUP BY                 
BillDate                  
,T.OrgID                  
,CurrencyCode,T.Location,LocRateID,OrgName                          
ORDER BY                
BillDate                           
,Isnull(CurrencyCode, @pBaseCurrencyCode)      
      
      
Declare @AddressTemp As Table (Location Varchar(255),OrgID int)      
Insert Into @AddressTemp      
Select Location,OrgID   from OrganizationAddress with(NOLOCK) where AddressID in (434,471,483,476,482,487,488,489,493,492,484)          
      
Insert Into @WalkinTemp      
Select OG.Name,T.Location,LocRateID,0,0,0,0 from @AddressTemp T      
Inner Join Organization OG on OG.OrgID=T.OrgID      
inner join OrganizationAddress OA on OA.Orgid=T.Orgid and OA.Location=T.Location      
Where T.Location Not in (      
Select Center from @WalkinTemp )and OG.OrgID in (220,247,245,246,248)      
      
Insert into @WalkinTemp      
Select 'Whole Prima', 'Over All',15,Sum(Isnull(GrossAmount,0)) as GrossAmount      
,Sum(Isnull(Discount, 0)) AS Discount      
,Sum(Isnull(NetAmount, 0)) AS NetAmount      
,Sum(Isnull(TotalDue, 0)) AS TotalDue      
 from @WalkinTemp      
        
 DECLARE @FilePath VARCHAR(500)        
  SELECT @FilePath = @FilePath         
       
 DECLARE @tableHTML NVARCHAR(MAX);      
 DECLARE @tableHTML1 NVARCHAR(MAX);      
 DECLARE @TblHeader NVARCHAR(MAX);      
  IF (      
 (      
 SELECT count(1)      
 FROM @WalkinTemp      
 ) > 0      
 )      
 BEGIN       
      
SET @tableHTML = N'<P>Dear All<br>The following are Consolidate Revenue Alert for Prima '  + '-' + convert(VARCHAR(11), @Curdate, 6) + N'<table border="1" cellpadding="1" cellspacing="1">' +      
 N'<tr><th>Center</th><th>GrossAmount</th><th>NetAmount</th><th>Discount</th><th>TotalDue</th></tr>'       
 + CAST((      
 SELECT td = Center      
 ,''      
 ,td = GrossAmount      
 ,''      
  ,td = NetAmount      
 ,''      
 ,td = Discount      
 ,''      
  ,td = TotalDue      
 ,''       
 FROM @WalkinTemp T order by LocRateID --,OrgName,Center       
 FOR XML PATH('tr')      
 ,TYPE      
 ) AS NVARCHAR(MAX)) + N'</table>';      
        
  Set @FinalOut =  @tableHTML     
 --EXEC msdb.dbo.sp_send_dbmail @profile_name = 'Devicenotification'      
 --,@recipients = 'surya.g@attunelive.com'      
 --,@body_format = 'HTML'      
 --,@body = @tableHTML        
 --,@subject = 'Consolidate Revenue Alert for Prima'                       
 END      
 Else      
 Begin      
 Set @FinalOut ='No Billing in Prima Org level'      
     
 End      
 SET NOCOUNT OFF      
 END       
               
       