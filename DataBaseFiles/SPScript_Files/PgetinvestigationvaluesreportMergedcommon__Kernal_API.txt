
CREATE PROCEDURE [dbo].[PgetinvestigationvaluesreportMergedcommon__Kernal_API] (@pVisitID        BIGINT,
                                                                    @OrgID           INT,
                                                                    @TemplateID      INT,
                                                                    @InvestigationID VARCHAR(max))
--WITH recompile         
AS
  BEGIN
      SET nocount ON

  /* Declaration Variable and Table Variables */
      /** NULL ReportFormatGroupMaster**/
      CREATE TABLE #ReportFormatGroupOrgMapping
        (
           [ReportFormatID]   [INT] NULL,
           [ReportFormatName] [VARCHAR](255) NULL,
           [OrgID]            [INT] NULL,
           [SequenceNo]       [INT] NULL,
           [PrintSeparately]  [CHAR](1) NULL,
           [IsShowName]       [BIT] NULL DEFAULT ((1))
        )

      INSERT INTO #ReportFormatGroupOrgMapping
      SELECT RFG.ReportFormatId,
             RFG.ReportFormatName,
             RFG.OrgID,
             RFG.SequenceNo,
             RFG.PrintSeparately,
             IsShowName
      FROM   ReportFormatGroupOrgMapping RFG WITH(NOLOCK)
      WHERE  RFG.OrgID = @OrgID
      UNION ALL
      SELECT 999999,
             '999999',
             @OrgID,
             999999,
             'N',
             1

      DECLARE @MinRno INT = 1,
              @MaxRno INT
      DECLARE @MinRno1 INT,
              @MaxRno1 INT
      DECLARE @MinRNo2 INT,
              @MaxRNo2 INT
      DECLARE @tblInvestigationValues TABLE
        (
           [investigationvalueid]          [BIGINT],
           [name]                          [VARCHAR](600) NULL,
           [value]                         [NVARCHAR](max) NULL,
           [investigationid]               [BIGINT] NULL,
           [groupid]                       [INT] NULL,
           [patientvisitid]                [BIGINT] NULL,
           [uomid]                         [INT] NULL,
           [status]                        [VARCHAR](100) NULL,
           [createdby]                     [BIGINT] NULL,
           [createdat]                     [DATETIME] NULL,
           [modifiedby]                    [BIGINT] NULL,
           [modifiedat]                    [DATETIME] NULL,
           [uomcode]                       [VARCHAR](50) NULL,
           [groupname]                     [VARCHAR](255) NULL,
           [orgid]                         [INT] NULL,
           [ipinvsamplecollectionmasterid] [BIGINT] NULL,
           [packageid]                     [INT] NULL,
           [packagename]                   [VARCHAR](255),
           [sequenceno]                    [INT],
           [uid]                           [VARCHAR](255),
           [newvalue]                      [NVARCHAR](20) NULL,
           [convvalue]                     [VARCHAR](50) NULL,
           convuomcode                     [VARCHAR](50) NULL
        )
      DECLARE @tblPatientInvestigation TABLE
        (
           [patientvisitid]                 [BIGINT],
           [investigationid]                [BIGINT],
           [investigationname]              [VARCHAR](250),
           [createdby]                      [BIGINT],
           [createdat]                      [DATETIME],
           [modifiedby]                     [BIGINT],
           [modifiedat]                     [DATETIME],
           [investigationmethodid]          [BIGINT],
           [investigationsamplecontainerid] [INT],
           [sampleid]                       [INT],
           [investigationsiteid]            [INT],
           [iscompleted]                    [CHAR](1),
           [collecteddatetime]              [DATETIME],
           [status]                         [VARCHAR](100),
           [complaintid]                    [INT],
           [groupid]                        [INT],
           [groupname]                      [VARCHAR](255),
         [reason]                         [VARCHAR](250),
           [reportstatus]                   [VARCHAR](500),
           [referencerange]                 [VARCHAR](max),
           [methodname]                     [VARCHAR](255),
           [ipinvsamplecollectionmasterid]  [BIGINT],
           [orgid]                          [INT],
           [worklistdeletedstatus]          [VARCHAR](50),
           [performingphysicainname]        [VARCHAR](500),
           [kitid]                          [BIGINT],
           [kitname]                        [VARCHAR](255),
           [instrumentid]                   [BIGINT],
           [instrumentname]                 [VARCHAR](255),
           [interpretation]                 [VARCHAR](max),
           [principleid]                    [BIGINT],
           [principlename]                  [VARCHAR](255),
           [qcdata]                         [VARCHAR](max),
           [packageid]                      [INT],
           [packagename]                    [VARCHAR](255),
           [approvedby]                     [BIGINT],
           [patientinvid]                   [BIGINT],
           [orderedat]                      [DATETIME],
           [uid]                            [VARCHAR](255),
           [groupcomment]                   [VARCHAR](255),
           [approvedat]                     [DATETIME],
           [accessionnumber]                [BIGINT],
           [isabnormal]                     [VARCHAR](80),
           [medicalremarks]                 [NVARCHAR](max),
           [groupmedicalremarks]            [VARCHAR](255),
           refsuffixtext                    VARCHAR(100),
           [isnonreportable]                [CHAR] (1),
           [authorizedby]                   [BIGINT],
           [convreferencerange]             [NVARCHAR](max),
           printablerange                   VARCHAR(max),
           IsContentFollowRFSG              BIT,
           ReportMedicalSequence            INT,
           IsFollowRFSGForReflex            BIT,
           IsNonRepeatableInReport          BIT
        )
      DECLARE @tblRecheckTestDetails TABLE
        (
           [patientvisitid]    [BIGINT],
           [investigationid]   [BIGINT],
           [investigationname] [VARCHAR](250),
           oldaccessionnumber  BIGINT,
           [olduid]            [VARCHAR](255),
           [orgid]             [INT],
           newaccessionnumber  BIGINT,
           [newuid]            [VARCHAR](255),
           groupid             INT,
           packageid           INT,
           [oldvalues]         [NVARCHAR](max) NULL,
           [newvalue]          [NVARCHAR](max) NULL,
           [oldconvvalues]     [VARCHAR](50) NULL,
           [newconvvalue]      [VARCHAR](50) NULL
        )
      DECLARE @tblRetestDetails TABLE
        (
           [patientvisitid]    [BIGINT],
           [investigationid]   [BIGINT],
           [investigationname] [VARCHAR](250),
           oldaccessionnumber  BIGINT,
           [olduid]            [VARCHAR](255),
           [orgid]             [INT],
           newaccessionnumber  BIGINT,
           [newuid]            [VARCHAR](255),
           groupid             INT,
           packageid           INT,
           [oldvalues]         [NVARCHAR](max) NULL,
           [newvalue]          [NVARCHAR](max) NULL,
           [oldconvvalues]     [VARCHAR](50) NULL,
           [newconvvalue]      [VARCHAR](50) NULL
        )
      DECLARE @tblOrdPerfOrgGrpInvDtls TABLE
        (
           orderedorgid        INT,
           performedorgid      INT,
           attunegroupid       INT,
           invtype             VARCHAR(10),
           performedorggroupid INT,
           performedorguid     VARCHAR(255),
           orderedorggroupid   INT,
           orderedorguid       VARCHAR(255)
        )
      /* This table used to Get list of VisitID Details for Org to Org Processes */
      DECLARE @tblAffectedVisits TABLE
        (
           visitid BIGINT,
           orgid   BIGINT
        )
      /* This table used to Get list of InvestigationID for Retest Details */
      DECLARE @OrderedPatientInv TABLE
        (
           [patientvisitid]                 [BIGINT],
           [investigationid]                [BIGINT],
           [investigationname]              [VARCHAR](250),
           [investigationmethodid]          [BIGINT],
           [investigationsamplecontainerid] [INT],
           [sampleid]                       [INT],
           [groupid]                        BIGINT,
           [groupname]                      [VARCHAR](250),
           [reason]                         [VARCHAR](250),
           [referencerange]                 [VARCHAR](max),
           [methodname]                     [VARCHAR](255),
           [orgid]                          [INT],
           [worklistdeletedstatus]          [VARCHAR](50),
           [performingphysicainname]        [VARCHAR](500),
           [kitid]                          [BIGINT],
           [kitname]                        [VARCHAR](255),
           [instrumentid]                   [BIGINT],
           [instrumentname]                 [VARCHAR](255),
           [interpretation]                 [VARCHAR](max),
           [principleid]                    [BIGINT],
           [principlename]                  [VARCHAR](255),
           [qcdata]                         [VARCHAR](max),
           [packageid]                      [INT],
           [packagename]                    [VARCHAR](255),
           [approvedby]                     [BIGINT],
           [patientinvid]                   [BIGINT],
           [uid]                            [VARCHAR](255),
           [groupcomment]                   [VARCHAR](255),
           [approvedat]                     [DATETIME],
           [accessionnumber]                [BIGINT],
           refrangesuffixtest               VARCHAR(255),
           [authorizedby]                   [BIGINT],
           convreferencerange               [NVARCHAR](max),
           printablerange                   VARCHAR(max),
           [isabnormal]                     [VARCHAR](80)
        )
      /* Below Table Variable used for Get list of AccessionNo from InvestigationID Parameter(Comma Separated Values). */
      DECLARE @tblResultSelectID TABLE
        (
           accessionno BIGINT
        )

      INSERT INTO @tblResultSelectID
                  (accessionno)
      SELECT DISTINCT item
      FROM   Fnsplit(@InvestigationID, ',')

      /* Get list of InvestigationID details for Retest details from  Referred Accession Number in OrderedInvestigations */
      INSERT INTO @OrderedPatientInv
      SELECT PIV.[patientvisitid],
             PIV.investigationid,
             PIV.[investigationname],
             PIV.[investigationmethodid],
             PIV.[investigationsamplecontainerid],
             PIV.[sampleid],
             PIV.[groupid],
             PIV.[groupname],
             PIV.[reason],
             PIV.[referencerange],
             PIV.[methodname],
             PIV.orgid,
             PIV.[worklistdeletedstatus],
             PIV.[performingphysicainname],
             PIV.[kitid],
             PIV.[kitname],
             PIV.[instrumentid],
             PIV.[instrumentname],
             PIV.[interpretation],
             PIV.[principleid],
             PIV.[principlename],
             PIV.[qcdata],
             PIV.[packageid],
             PIV.[packagename],
             PIV.[approvedby],
             PIV.[patientinvid],
             PIV.uid,
             PIV.[groupcomment],
             PIV.[approvedat],
             PIV.accessionnumber,
             PIV.groupmedicalremarks,
             PIV.authorizedby,
             PIV.convreferencerange,
             PIV.printablerange,
             PIV.[isabnormal]
      FROM   @tblResultSelectID tbl
             INNER JOIN orderedinvestigations OI WITH(NOLOCK)
                     ON tbl.accessionno = OI.referredaccessionno
             INNER JOIN PatientInvestigation PIV WITH(NOLOCK)
                     ON OI.accessionnumber = PIV.AccessionNumber
      --INSERT INTO @OrderedPatientInv
      --SELECT [patientvisitid],
      --       investigationid,
      --       [investigationname],
      --       [investigationmethodid],
      --       [investigationsamplecontainerid],
      --       [sampleid],
      --       [groupid],
      --       [groupname],
      --       [reason],
      --       [referencerange],
      --       [methodname],
      --       orgid,
      --       [worklistdeletedstatus],
      --       [performingphysicainname],
      --       [kitid],
      --       [kitname],
      --       [instrumentid],
      --    [instrumentname],
      --       [interpretation],
      --       [principleid],
      --       [principlename],
      --       [qcdata],
      --       [packageid],
      --       [packagename],
      --       [approvedby],
      --       [patientinvid],
      --       uid,
      --       [groupcomment],
      --       [approvedat],
      --       accessionnumber,
      --       groupmedicalremarks,
      --       authorizedby,
      --       convreferencerange,
      --       printablerange,
      --       [isabnormal]
      --FROM   patientinvestigation (nolock)
      --WHERE  accessionnumber IN (SELECT accessionnumber
      --                           FROM   orderedinvestigations OI WITH(nolock)
      --                                  INNER JOIN @tblResultSelectID tbl
      --                                          ON tbl.accessionno = OI.referredaccessionno)
      --INSERT INTO @tblAffectedVisits
      --SELECT @pVisitID,
      --       @OrgID
      --UNION
      --SELECT patientvisitid,
      --       organizationid
      --FROM   patientvisit (NOLOCK)
      --WHERE  refervisitid = @pVisitID
      /* Get multiple Org to Org Transfer Visit Details */
      ;

      WITH OrgToOrg AS (SELECT PatientVisitID,
                               orgid
                        FROM   patientvisit WITH(NOLOCK)
                        WHERE  PatientVisitID = @pVisitID
                        UNION ALL
                        SELECT PT.PatientVisitID,
                               PT.orgid
                        FROM   patientvisit PT WITH(NOLOCK)
                               INNER JOIN OrgToOrg C
                                       ON PT.refervisitid = C.PatientVisitID)
      INSERT INTO @tblAffectedVisits
      SELECT *
      FROM   OrgToOrg

      INSERT INTO @tblInvestigationValues
      SELECT [investigationvalueid],
             [name] + ' ' + ( CASE
                                WHEN IOA.isnabl = 'Y' THEN '<b>*</b>'
                                ELSE ''
                              END ) + ' ' + ( CASE
                                                WHEN IOA.iscap = 'Y' THEN '<b>#</b>'
                                                ELSE ''
                                              END ) AS [Name],
             [value],
             INV1.[investigationid]                 AS [InvestigationID],
             [groupid],
             [patientvisitid],
             [uomid],
             [status],
             INV1.[createdby],
             INV1.[createdat],
             INV1.[modifiedby],
             INV1.[modifiedat],
             [uomcode],
             [groupname],
             INV1.[orgid],
             [ipinvsamplecollectionmasterid],
             [packageid],
             [packagename],
             [sequenceno],
             [uid],
             '',
             [convvalue],
             convuomcode
      FROM   investigationvalues INV1 WITH(nolock)
             INNER JOIN @tblAffectedVisits v2
                     ON INV1.patientvisitid = v2.visitid
             LEFT JOIN invreportmapping IRM WITH(nolock)
                    ON IRM.investigationid = INV1.investigationid
                       AND IRM.templateid = @TemplateID
             LEFT JOIN investigationorgattributes IOA WITH(nolock)
                    ON INV1.orgid = IOA.orgid
                       AND INV1.investigationid = IOA.investigationid
      WHERE  INV1.value <> ''
             AND Isnull(INV1.statustype, '') NOT IN ( 'RC', 'RR' )

  /*Recheck Investigations Order Merging with Parent Group Order Start*/
      /*Select Recheck Type based on statustype column instead of status column in patientinvestigation table 
        Modified by :Prasanna.S  
        Modified on : 10-Sep-2013    
      */
      INSERT INTO @tblRecheckTestDetails
                  ([patientvisitid],[investigationid],[investigationname],oldaccessionnumber,[olduid],[orgid],groupid,packageid)
      SELECT PINV.[patientvisitid],
             [PINV].investigationid,
             [investigationname],
             PINV.[accessionnumber],
             PINV.[uid],
             PINV.[orgid],
             PINV.groupid,
             PINV.packageid
      FROM   patientinvestigation PINV WITH(nolock)
             INNER JOIN @tblResultSelectID tbl
                     ON tbl.accessionno = PINV.accessionnumber
      WHERE  PINV.statustype = 'RC'
      UNION ALL
      SELECT PINV.[patientvisitid],
             PINV.investigationid,
             [investigationname],
             PINV.[accessionnumber],
             PINV.[uid],
             PINV.[orgid],
             PINV.groupid,
             PINV.packageid
      FROM   patientinvestigation PINV WITH(nolock)
      WHERE  PINV.statustype = 'RC'
             AND accessionnumber IN (SELECT accessionnumber
                                     FROM   orderedinvestigations OI (NOLOCK)
                                            INNER JOIN @tblResultSelectID tbl
                                                    ON tbl.accessionno = OI.referredaccessionno
                                                       AND OI.orgid != @OrgID)

      /*Update NewAccessionNumber based on statustype column in patientinvestigation table instead of referred type column in orderedinvestigations table*/
      UPDATE t1
      SET    t1.newaccessionnumber = tmp.accessionnumber
      FROM   @tblRecheckTestDetails t1
             INNER JOIN (SELECT t.investigationid,
                                Max(PIV.accessionnumber) AS AccessionNumber
                         FROM   orderedinvestigations OI (NOLOCK)
                                INNER JOIN @tblRecheckTestDetails t
                                        ON t.patientvisitid = OI.visitid
                                           AND t.orgid = OI.orgid
                                INNER JOIN patientinvestigation PIV WITH(nolock)
                                        ON PIV.patientvisitid = OI.visitid
                                           AND piv.orgid = OI.orgid
                         WHERE  statustype = 'RC'
                         GROUP  BY t.investigationid) AS tmp
                     ON tmp.investigationid = t1.investigationid

      UPDATE t1
      SET    t1.newuid = OI.uid
      FROM   @tblRecheckTestDetails t1
             INNER JOIN orderedinvestigations OI WITH(nolock)
                     ON OI.accessionnumber = t1.newaccessionnumber
                        AND OI.orgid = t1.orgid

      /*Add Condition IV.statustype='RC' to get the old values   
      Modified by :Prasanna.S 
      Modified on : 12-Sep-2013
      */
      UPDATE t
      SET    t.oldvalues = IV.value,t.oldconvvalues = IV.convvalue
      FROM   @tblRecheckTestDetails T
             INNER JOIN investigationvalues IV WITH(nolock)
                     ON T.patientvisitid = IV.patientvisitid
                        AND T.investigationid = IV.investigationid
                        AND T.groupid = IV.groupid
                        AND T.packageid = IV.packageid
                        AND T.orgid = IV.orgid
                        AND T.olduid = IV.uid
                        AND IV.statustype = 'RC'

      /*Add Condition isnull(IV.statustype,'') not in ('RC','RR') to get the New values 
      Modified by :Prasanna.S 
      Modified on : 12-Sep-2013 
      */
      UPDATE t
      SET    t.newvalue = IV.value,t.newconvvalue = IV.convvalue
      FROM   @tblRecheckTestDetails T
             INNER JOIN investigationvalues IV WITH(nolock)
                     ON T.patientvisitid = IV.patientvisitid
                        AND T.investigationid = IV.investigationid
                        AND T.orgid = IV.orgid
                        AND T.newuid = IV.uid
                        AND Isnull(IV.statustype, '') NOT IN ( 'RC', 'RR' )

      UPDATE iv
      SET    iv.value = T.newvalue,iv.newvalue = ' (RC)',iv.convvalue = T.newconvvalue
      FROM   @tblInvestigationValues IV
             INNER JOIN @tblRecheckTestDetails T
                     ON T.patientvisitid = IV.patientvisitid
                        AND T.investigationid = IV.investigationid
                        AND T.olduid = IV.uid

      --Delete @tblInvestigationValues where Value is Null--if Investigation Value is Null,it will not disploy in Report                       
      --Select * from @tblRecheckTestDetails                                                   
      --select * from @tblInvestigationValues                                                 
  /*Recheck Investigations Order Merging with Parent Group Order Start*/
      /*Retest Investigations Order Merging with Parent Group Order Start*/
      INSERT INTO @tblRetestDetails
                  ([patientvisitid],[investigationid],[investigationname],oldaccessionnumber,[olduid],[orgid],groupid,packageid,newaccessionnumber)
      SELECT PINV.[patientvisitid],
             [PINV].investigationid,
             [investigationname],
             PINV.[accessionnumber],
             PINV.[uid],
             PINV.[orgid],
             PINV.groupid,
             PINV.packageid,
             PINV.accessionnumber
      FROM   patientinvestigation PINV WITH(nolock)
             INNER JOIN @tblResultSelectID tbl
                     ON tbl.accessionno = PINV.accessionnumber
      WHERE  PINV.statustype = 'RR'

      UPDATE t1
      SET    t1.newaccessionnumber = tmp.accessionnumber
      FROM   @tblRetestDetails t1
             INNER JOIN (SELECT investigationid,
                                Max(OI.accessionnumber) AS AccessionNumber
                         FROM   orderedinvestigations OI (NOLOCK)
                                INNER JOIN @tblRetestDetails t
                                        ON t.patientvisitid = OI.visitid
                                           AND t.investigationid = OI.id
                                           AND t.orgid = OI.orgid
                         WHERE  referredtype = 'Retest'
                         GROUP  BY t.investigationid) AS tmp
                     ON tmp.investigationid = t1.investigationid

      UPDATE t1
      SET    t1.newuid = OI.uid
      FROM   @tblRetestDetails t1
             INNER JOIN orderedinvestigations OI WITH(nolock)
                     ON OI.accessionnumber = t1.newaccessionnumber
                        AND OI.orgid = t1.orgid

      UPDATE t
      SET    t.oldvalues = IV.value,t.oldconvvalues = IV.convvalue
      FROM   @tblRetestDetails T
             INNER JOIN investigationvalues IV WITH(nolock)
                     ON T.patientvisitid = IV.patientvisitid
                        AND T.investigationid = IV.investigationid
                        AND T.groupid = IV.groupid
                        AND T.packageid = IV.packageid
                        AND T.orgid = IV.orgid
                        AND T.olduid = IV.uid

      UPDATE t
      SET    t.newvalue = IV.value,t.newconvvalue = IV.convvalue
      FROM   @tblRetestDetails T
             INNER JOIN investigationvalues IV WITH(nolock)
                     ON T.patientvisitid = IV.patientvisitid
                        AND T.investigationid = IV.investigationid
                        AND T.orgid = IV.orgid
                        AND T.newuid = IV.uid

      UPDATE iv
      SET    iv.value = T.newvalue,iv.newvalue = ' (RT)',iv.convvalue = T.newconvvalue
      FROM   @tblInvestigationValues IV
             INNER JOIN @tblRetestDetails T
                     ON T.patientvisitid = IV.patientvisitid
                        AND T.investigationid = IV.investigationid
                        AND T.olduid = IV.uid

      --Delete @tblInvestigationValues where Value is Null--if Investigation Value is Null,it will not disploy in Report                                                                                                                                    
      --Select * from @tblRecheckTestDetails                                                                 
      --select * from @tblInvestigationValues                                            
      --return
      /*Retest Investigations Order Merging with Parent Group Order Start*/
      INSERT INTO @tblPatientInvestigation
                  ([patientvisitid],[investigationid],[investigationname],[createdby],[createdat],[modifiedby],[modifiedat],[investigationmethodid],  
      [investigationsamplecontainerid],[sampleid],[investigationsiteid],[iscompleted],[collecteddatetime],[status],[complaintid],[groupid],  
      [groupname],[reason],[reportstatus],[referencerange],[methodname],[ipinvsamplecollectionmasterid],[orgid],[worklistdeletedstatus],[performingphysicainname],  
      [kitid],[kitname],[instrumentid],[instrumentname],[interpretation],[principleid],[principlename],[qcdata],[packageid],[packagename],[approvedby],  
      [patientinvid],[orderedat],[uid],[groupcomment],[approvedat],[accessionnumber],[isabnormal],[medicalremarks],[groupmedicalremarks],refsuffixtext,[isnonreportable],  
      [authorizedby],[convreferencerange],printablerange,IsContentFollowRFSG,ReportMedicalSequence,IsFollowRFSGForReflex,IsNonRepeatableInReport)  
      SELECT [patientvisitid],  
             [PINV].investigationid,  
             [investigationname],  
             PINV.[createdby],  
             PINV.[createdat],  
             PINV.[modifiedby],  
             PINV.[modifiedat],  
             [investigationmethodid],  
             [investigationsamplecontainerid],  
             [sampleid],  
             [investigationsiteid],  
             [iscompleted],  
             [collecteddatetime],  
             [status],  
             [complaintid],  
             [groupid],  
             [groupname],  
             [reason],  
             [reportstatus],  
  
            case when  Replace(PINV.[referencerange], '<?xml version="1.0" encoding="utf-16"?>', '') = '' then  
     
   isnull(PINV.printablerange,'') else Replace(PINV.[referencerange], '<?xml version="1.0" encoding="utf-16"?>', '') end ,  
  
             [methodname],  
             [ipinvsamplecollectionmasterid],  
             PINV.[orgid],  
             [worklistdeletedstatus],  
             [performingphysicainname],  
             PINV.[kitid],  
             [kitname],  
             PINV.[instrumentid],  
             [instrumentname],  
             PINV.[interpretation],  
             PINV.[principleid],  
             [principlename],  
             PINV.[qcdata],  
             [packageid],  
             [packagename],  
             [approvedby],  
             [patientinvid],  
             [orderedat],  
             [uid],  
             [groupcomment],  
             [approvedat],  
             PINV.[accessionnumber],  
             PINV.isabnormal,  
             PINV.medicalremarks,  
             PINV.groupmedicalremarks,  
             PINV.refsuffixtext,  
             IOM.isnonreportable,  
             PINV.authorizedby,  
             PINV.convreferencerange,  
             PINV.printablerange,  
             '' AS IsContentFollowRFSG,  
             0 AS ReportMedicalSequence,  
             0 AS IsFollowRFSGForReflex,  
             0 AS IsNonRepeatableInReport  
      FROM   patientinvestigation PINV WITH(nolock)  
             INNER JOIN @tblResultSelectID tbl  
                     ON tbl.accessionno = PINV.accessionnumber  
             INNER JOIN investigationorgmapping IOM WITH(nolock)  
                     ON IOM.investigationid = PINV.investigationid  
                        AND IOM.orgid = PINV.orgid  
                        AND PINV.status IN ( 'Pending', 'Completed', 'Approve', 'Validate',  
                                             'ReflexWithSameSample', 'ReflexWithNewSample', 'Reject', 'Co-authorize',  
                                             'With Held', 'PartiallyApproved' )  
      AND ISNULL(PINV.statustype,'') NOT IN ( 'RC', 'RR' )  
             LEFT JOIN invreportmapping IRM WITH(nolock)  
                    ON IRM.investigationid = PINV.investigationid  
                       AND IRM.templateid = @TemplateID  
  
      UPDATE @tblPatientInvestigation  
      SET    referencerange = ORDBTL.referencerange,methodname = ORDBTL.methodname,reason = ORDBTL.reason,interpretation = ORDBTL.interpretation,kitname = ORDBTL.kitname,convreferencerange = ORDBTL.convreferencerange,printablerange = ORDBTL.printablerange
,isabnormal = ORDBTL.[isabnormal]
      FROM   @tblPatientInvestigation TBL1
             INNER JOIN @OrderedPatientInv ORDBTL
                     ON ORDBTL.investigationid = TBL1.investigationid

      INSERT INTO @tblOrdPerfOrgGrpInvDtls
                  (orderedorgid,performedorgid,attunegroupid,invtype,performedorggroupid)
      SELECT @OrgID,
             OA.orgid,
             OI.id,
             OI.type,
             CASE
               WHEN OI.type = 'GRP' THEN IOG.orggroupid
               ELSE OI.id
             END
      FROM   orderedinvestigations OI WITH(nolock)
             INNER JOIN organizationaddress OA WITH(nolock)
                     ON OI.rescaptureloc = OA.addressid
             LEFT JOIN invorggroup IOG WITH(nolock)
                    ON IOG.attgroupid = OI.id
                       AND IOG.orgid = OA.orgid
      WHERE  OI.visitid = @pVisitID

      UPDATE t
      SET    t.orderedorggroupid = IOG.orggroupid
      FROM   @tblOrdPerfOrgGrpInvDtls T
             INNER JOIN invorggroup IOG WITH(nolock)
                     ON T.attunegroupid = IOG.attgroupid
                        AND IOG.orgid = @OrgID
      WHERE  t.invtype != 'INV'

      UPDATE t
      SET    t.performedorguid = OI.uid
      FROM   @tblOrdPerfOrgGrpInvDtls T
             INNER JOIN orderedinvestigations OI WITH(nolock)
                     ON T.performedorgid = OI.orgid
                        AND T.attunegroupid = OI.id
                        AND t.invtype = OI.type
             INNER JOIN @tblResultSelectID TRS
                     ON TRS.accessionno = OI.referredaccessionno
             INNER JOIN @tblAffectedVisits TAV
                     ON TAV.visitid = OI.visitid
                        AND TAV.orgid = T.performedorgid

      UPDATE t
      SET    t.orderedorguid = OI.uid
      FROM   @tblOrdPerfOrgGrpInvDtls T
             INNER JOIN orderedinvestigations OI WITH(nolock)
                     ON T.orderedorgid = OI.orgid
                        AND T.attunegroupid = OI.id
                        AND OI.visitid = @pVisitID
             INNER JOIN @tblAffectedVisits TAV
                     ON TAV.visitid = OI.visitid
                        AND TAV.orgid = T.orderedorgid

      UPDATE @tblOrdPerfOrgGrpInvDtls
      SET    performedorguid = orderedorguid
      WHERE  orderedorgid = performedorgid

      IF( 1 < (SELECT Count(1)
               FROM   @tblAffectedVisits) )
        BEGIN
            UPDATE t
            SET    patientvisitid = @pVisitID,orgid = @OrgID,GroupID = dbo.Fn_getorderedorggroupid(@OrgID, Orgid, GroupID),uid = T1.orderedorguid
            FROM   @tblInvestigationValues T
                   INNER JOIN @tblOrdPerfOrgGrpInvDtls T1
                           ON T.uid = T1.performedorguid
                              AND T.groupid = T1.performedorggroupid
            WHERE  T1.invtype != 'INV'
                   AND Isnull(T.GroupID, 0) > 0

            UPDATE t
            SET    patientvisitid = @pVisitID,orgid = @OrgID,uid = T1.orderedorguid
            FROM   @tblInvestigationValues T
                   INNER JOIN @tblOrdPerfOrgGrpInvDtls T1
                           ON T.uid = T1.performedorguid
                              AND T.investigationid = T1.performedorggroupid
            WHERE  T1.invtype = 'INV'
        END

      DECLARE @tblTempGrp TABLE
        (
           invid                        VARCHAR(10),
           grpid                        VARCHAR(10),
           accessionno                  VARCHAR(10),
           parentgrpid                  VARCHAR(10),
           isgroup                      CHAR(1),
           atlevel                      INT,
           grpcontentseq                INT,
           [uid]                        VARCHAR(500),
           patientvisitid               BIGINT,
           actualgrpid                  BIGINT,
           --deptname              VARCHAR(255),
           methodname                   VARCHAR(255),
           notes                        VARCHAR(1),
           referencerange               VARCHAR(1),
           sampleid                     BIGINT,
           samplename                   VARCHAR(500),
           uomcode                      VARCHAR(100),
           comments                     VARCHAR(1),
           pkgid                        INT,
           packagename                  VARCHAR(255),
           childprintseparately         CHAR(1),
           convreferencerange           NVARCHAR(1),
           printablerange               VARCHAR(1),
           ReferredAccessionNo          BIGINT,
           ReportFormatId               INT,
           MLGSequenceNo                INT,
           MLGPrintSeparately           CHAR(1),
           MLGReportName                VARCHAR(255),
           grpcontentseqMedical         INT,
           grpcontentMLGSequenceNo      INT,
           grpContentMLGPrintSeparately VARCHAR(2),
           IsContentFollowRFSG          BIT,
           IsFollowRFSGForReflex        BIT,
           IsContentFollowRFSGSeq       BIT,
           ReferredType                 VARCHAR(50)
        )
      DECLARE @tblOrdInvExploded TABLE
        (
           invid                          VARCHAR(10),
           grpid                          VARCHAR(10),
           accessionno                    VARCHAR(10),
           parentgrpid                    VARCHAR(10),
           --deptid                         BIGINT,
           --grpdeptid                      VARCHAR(10),
           isgroup                        CHAR(1),
           atlevel                        INT,
           --firstlvlseq                    INT,
           grpcontentseq                  INT,
           rootgroupid                    VARCHAR(10),
           innercontentseq                INT,
           uid                            VARCHAR(500),
           patientvisitid                 BIGINT,
           actualgrpid                    BIGINT,
           --deptname                       VARCHAR(255),
           methodname                     VARCHAR(500),
           notes                          VARCHAR(max),
           referencerange                 VARCHAR(max),
           sampleid                       BIGINT,
           samplename                     VARCHAR(500),
           uomcode                        VARCHAR(255),
           comments                       VARCHAR(250),
           patternid                      BIGINT,
           patternname     VARCHAR(200),
           uomid                          INT,
           validationtext                 VARCHAR(max),
           isabnormal                     VARCHAR(50),
           invvalidationtext              VARCHAR(max),
           [groupcomment]                 [VARCHAR](255),
           [groupmedicalremarks]          [VARCHAR](255),
           resultvaluetype                NVARCHAR(200),
           decimalplaces                  VARCHAR(20),
           pkgid                          INT,
           packagename                    VARCHAR(255),
           rootgrpname                    VARCHAR(250),
           result                         VARCHAR(max),
           medicalremarks                 NVARCHAR(max),
           l2contentseq                   INT,
           parentgrpname                  VARCHAR(250),
           isnonreportable                CHAR(1),
           parentprintseparately          CHAR(1),
           ParentPageNumber               INT,
           childprintseparately           CHAR(1),
           childpagenumber                INT,
           isrejected                     CHAR(1),
           --referredtype                   VARCHAR(50),
           convreferencerange             NVARCHAR(max),
           convresult                     VARCHAR(50),
           iswithheld                     CHAR(1),
           newvalue                       NVARCHAR(20),
           convuomcode                    VARCHAR(50),
           subgroupinterpretation         NVARCHAR(1),
           printablerange                 VARCHAR(max),
           IsShowName                     BIT,
           ReportNameAlign                VARCHAR(50),
           IsBelowHeaderInReport          BIT,
           IsSampleName                   BIT,
           IsShowInterpretationOnlyParent BIT,
           OutputGroupingCode             VARCHAR(50),
           ReferredAccessionNo            BIGINT,
           ReportFormatId                 INT,
           MLGSequenceNo                  INT,
           MLGReportName                  VARCHAR(255),
           MLGPrintSeparately             CHAR(1),
           MLGIsShowName                  BIT,
           firstlvlseqMedical             INT,
           grpcontentseqMedical           INT,
           innercontentseqMedical         INT,
           l2contentseqMedical            INT,
           IsContentFollowRFSG            BIT,
           IsFollowRFSGForReflex          BIT,
           IsNonRepeatableInReport        BIT,
           IsContentFollowRFSGSeq         BIT,
           innerIsContentRFSG             BIT,
           firstlvlMLGSequenceNo          INT,
           grpcontentMLGSequenceNo        INT,
           innerMLGSequenceNo             INT,
           l2ContentMLGSequenceNo         INT,
           firstlvlMLGPrintSeparately     VARCHAR(2),
           grpContentMLGPrintSeparately   VARCHAR(2),
           innerMLGPrintSeparately        VARCHAR(2),
           l2ContentMLGPrintSeparately    VARCHAR(2),
           ReferredType                   VARCHAR(50)
        )
      /****************** Explode the Groups ordered to get the investigation to be performed along with the levels *********************************/
      ;

      WITH c1 AS (SELECT OI.id                           AS GrpID,
                         IGM.investigationid             AS InvID,
                         OI.id                           AS ParentGrpID,
                         IGM.parent,
                         OI.accessionnumber,
                         0                               AS [level],
                         IGM.sequenceno,
                         OI.[uid],
                         OI.visitid,
                         CONVERT(BIGINT, IOG.orggroupid) AS OrgGroupID,
                         --''                              AS DeptName,
                         ''                              AS MethodName,
          ''                              AS Interpretation,
                         ''                              AS ReferenceRange,
                         ''                              AS SampleID,
                         ''                              AS Reason,
                         IGM.printseparately             AS ChildPrintSeparately,
                         ''                              AS ConvReferenceRange,
                         ''                              AS PrintableRange,
                         OI.ReferredAccessionNo,
                         RFG.SequenceNo                  AS MLGSequenceNo,
                         RFG.ReportFormatName            AS MLGReportName,
                         RFG.PrintSeparately             AS MLGPrintSeparately,
                         CASE
                           WHEN isnull(RFG.ReportFormatId, 0) = 0 THEN 999999
                           ELSE RFG.ReportFormatId
                         END                             AS ReportFormatId,
                         CASE
                           WHEN IGM.Parent = 'N' THEN IOM.Reportsequence
                           ELSE IOG.ReportSequence
                         END                             AS ReportSequence,
                         IOG.IsContentFollowRFSG,
                         IOG.IsFollowRFSGForReflex,
                         CASE
                           WHEN IGM.Parent = 'N' THEN IOG.IsContentFollowRFSG
                           ELSE NULL
                         END                             AS IsContentFollowRFSGSeq,
                         CASE
                           WHEN IGM.Parent = 'N' THEN RFSG.SequenceNo
                           ELSE NULL
                         END                             AS grpcontentMLGSequenceNo,
                         CASE
                           WHEN IGM.Parent = 'N' THEN RFSG.PrintSeparately
                           ELSE NULL
                         END                             AS grpContentMLGPrintSeparately,
                         OI.ReferredType
                  FROM   orderedinvestigations OI WITH(nolock)
                         INNER JOIN invorggroup IOG WITH(nolock)
                                 ON IOG.attgroupid = OI.id
                                    AND OI.orgid = IOG.orgid
                         INNER JOIN invgroupmapmaster IGM WITH(nolock)
                                 ON IOG.orggroupid = IGM.groupid
                         INNER JOIN @tblResultSelectID TRS
                                 ON TRS.accessionno = OI.accessionnumber
                         INNER JOIN #ReportFormatGroupOrgMapping RFG
                                 --  ON IOG.ReportFormatId = RFG.ReportFormatId
                                 ON RFG.ReportFormatID = ISNULL(IOG.ReportFormatID, 999999)
                                    AND RFG.OrgID = @OrgID
                         LEFT JOIN InvestigationOrgMapping IOM WITH(NOLOCK)
                                ON IOM.InvestigationID = IGM.InvestigationID
                                   AND IOM.OrgID = @OrgID
                         LEFT JOIN #ReportFormatGroupOrgMapping RFSG
                                ON IOM.ReportFormatID = RFSG.ReportFormatID
                                   AND IOM.OrgID = RFSG.OrgID
                  WHERE  OI.type = 'GRP'
                         AND Isnull(oi.pkgid, 0) = 0
                  UNION ALL
                  SELECT CONVERT(BIGINT, IOG.attgroupid) AS GrpID,
                         IGM.investigationid             AS InvID,
                         OI.grpid                        AS ParentGrpID,
                         IGM.parent,
                         OI.accessionnumber,
                         [level] + 1,
                         CASE
                           WHEN OI.grpid IN(SELECT OI1.id
                                            FROM   orderedinvestigations OI1 WITH( nolock )
                                            WHERE  type = 'GRP') THEN OI.sequenceno
                           ELSE OI.sequenceno
                         --+ 1 -- + [level]   
                         END                             AS SequenceNo,
                         OI.[uid],
                         OI.visitid,
                         OI.invid                        AS OrgGroupID,
                         methodname,
                         interpretation,
                         referencerange,
                         sampleid,
                         --'',
                         reason,
                         IGM.printseparately             AS ChildPrintSeparately,
                         convreferencerange,
                         printablerange,
                         OI.ReferredAccessionNo,
                         OI.MLGSequenceNo,
                         OI.MLGReportName,
                         OI.MLGPrintSeparately,
                         OI.ReportFormatId,
                         IOG.ReportSequence,
                         OI.IsContentFollowRFSG,
                         OI.IsFollowRFSGForReflex,
                         IOG.IsContentFollowRFSG         AS IsContentFollowRFSGSeq,
                         RFG.SequenceNo                  AS grpcontentMLGSequenceNo,
                         RFG.PrintSeparately             AS grpContentMLGPrintSeparately,
                         OI.ReferredType
                  FROM   c1 OI
                         INNER JOIN invorggroup IOG WITH(nolock)
                                 ON IOG.orggroupid = OI.invid
                                    AND IOG.orgid = @OrgID
                         INNER JOIN invgroupmapmaster IGM WITH(nolock)
                                 ON OI.invid = IGM.groupid
                         INNER JOIN @tblResultSelectID TRS
                                 ON TRS.accessionno = OI.accessionnumber
                         INNER JOIN #ReportFormatGroupOrgMapping RFG
                                 -- ON IOG.ReportFormatId = RFG.ReportFormatId
                                 ON RFG.ReportFormatID = ISNULL(IOG.ReportFormatID, 999999)
                                    -- ON Isnull(IOG.ReportFormatId, OI.ReportFormatID) = RFG.ReportFormatId
                                    AND RFG.OrgID = @OrgID
                  WHERE  OI.parent = 'Y'
                         AND IGM.active <> 'N')
      INSERT INTO @tblTempGrp
                  (invid,grpid,accessionno,parentgrpid,isgroup,atlevel,grpcontentseq,[uid],patientvisitid,actualgrpid,
                   --deptname,
                   methodname,notes,referencerange,sampleid,samplename,uomcode,comments,pkgid,packagename,childprintseparately,convreferencerange,printablerange,  
       ReferredAccessionNo,MLGSequenceNo,MLGReportName,MLGPrintSeparately,ReportFormatId,grpcontentseqMedical,IsContentFollowRFSG,IsFollowRFSGForReflex,IsContentFollowRFSGSeq,grpcontentMLGSequenceNo,grpContentMLGPrintSeparately,ReferredType)  
      SELECT invid,  
             grpid,  
             accessionnumber,  
             parentgrpid,  
             'Y',  
             [level],  
             sequenceno,  
             uid,  
             visitid,  
             orggroupid,  
             --deptname,  
             methodname,  
             interpretation,  
             referencerange,  
             sampleid,  
             '',  
             '',  
             reason,  
             0,  
             '',  
             childprintseparately,  
             convreferencerange,  
             printablerange,  
             ReferredAccessionNo,  
             MLGSequenceNo,  
             MLGReportName,  
             MLGPrintSeparately,  
             ReportFormatId,  
             ReportSequence,  
             IsContentFollowRFSG,  
             IsFollowRFSGForReflex,  
             IsContentFollowRFSGSeq,  
             grpcontentMLGSequenceNo,  
             grpContentMLGPrintSeparately,  
             ReferredType  
      FROM   c1  
      WHERE  Isnull(parent, 'N') = 'N'  
      ORDER  BY parentgrpid  
  
      DECLARE @InvGroupMapMasterForOrderedPkg TABLE  
        (  
           groupid                      BIGINT,  
           investigationid              BIGINT,  
           parent                       CHAR(1),  
           sequenceno                   INT,  
           pkgseqno                     INT,  
           orderedid                    BIGINT,  
           uid                          VARCHAR(255),  
           orgid                        INT,  
           accessionnumber              BIGINT,  
           pkgid                        BIGINT,  
           pkgname                      VARCHAR(255),  
           childprintseparately         CHAR(1),  
           ReferredAccessionNo          BIGINT,  
           MLGSequenceNo                INT,  
           MLGReportName                VARCHAR(255),  
           MLGPrintSeparately           CHAR(1),  
           ReportFormatId               INT,  
           ReportSequence               INT,  
           IsContentFollowRFSG          BIT,  
           IsFollowRFSGForReflex        BIT,  
           IsContentFollowRFSGSeq       BIT,  
           grpcontentMLGSequenceNo      INT,  
           grpContentMLGPrintSeparately VARCHAR(2),  
           ReferredType                 VARCHAR(50)  
        )  
  
      INSERT INTO @InvGroupMapMasterForOrderedPkg  
      SELECT IOG.orggroupid,  
             IPM.id,  
             'N'                     AS Parent,  
             IPM.sequenceno,  
             IOG.sequenceno,  
             IPM.id,  
             OI.uid,  
             OI.orgid,  
             OI.accessionnumber,  
             OI.pkgid,  
             OI.pkgname,  
             --Case when IOG.IsshowName=1 then OI.pkgid else 0 End as pkgid ,  
             --Case when IOG.IsshowName=1 then OI.pkgname Else '' End as pkgname,  
             IPM.printseparately,  
             OI.ReferredAccessionNo,  
             ''                      AS MLGSequenceNo,  
             ''                      AS MLGReportName,  
             ''                      AS MLGPrintSeparately,  
             ''                      AS ReportFormatId,  
             IOM.ReportSequence,  
             NULL                    AS IsContentFollowRFSG,  
             IOM.IsFollowRFSGForReflex,  
             IOM.IsContentFollowRFSG AS IsContentFollowRFSGSeq,  
             RFG.SequenceNo          AS grpcontentMLGSequenceNo,  
             RFG.PrintSeparately     AS grpContentMLGPrintSeparately,  
             OI.ReferredType  
      FROM   orderedinvestigations OI WITH(nolock)  
             INNER JOIN invorggroup IOG WITH(nolock)  
                     ON IOG.attgroupid = OI.pkgid  
             INNER JOIN invpackagemapping IPM WITH(nolock)  
                     ON IPM.packageid = IOG.orggroupid  
                        AND IPM.id = OI.id  
                        AND IPM.type = OI.type  
             INNER JOIN InvestigationOrgMapping IOM WITH(NOLOCK)  
                     ON IPM.ID = IOM.InvestigationID  
                        AND IOM.OrgId = @OrgID  
             LEFT JOIN #ReportFormatGroupOrgMapping RFG WITH(NOLOCK)  
                    ON IOM.ReportFormatID = RFG.ReportFormatID  
                       AND IOM.OrgID = RFG.OrgID  
      WHERE  IOG.orgid = @OrgID  
             AND visitid = @pVisitID  
             AND IPM.type = 'INV'  
             AND oi.accessionnumber IN (SELECT accessionno  
                                        FROM   @tblResultSelectID) --and IOG.IsshowName<>0  
      UNION ALL  
      SELECT IOG.orggroupid,  
             IPM.id,  
             'Y'                      AS Parent,  
             IPM.sequenceno,  
             IOG.sequenceno,  
             IOG1.attgroupid,  
             OI.uid,  
             OI.orgid,  
             OI.accessionnumber,  
             OI.pkgid,  
             OI.pkgname,  
             --Case when IOG.IsshowName=1 then OI.pkgid else 0 End as pkgid,  
             --Case when IOG.IsshowName=1 then OI.pkgname Else '' End as pkgname,  
             IPM.printseparately,  
             OI.ReferredAccessionNo,  
             ''                       AS MLGSequenceNo,  
             ''                       AS MLGReportName,  
             ''                       AS MLGPrintSeparately,  
             ''                       AS ReportFormatId,  
             IOG1.ReportSequence,  
             NULL                     AS IsContentFollowRFSG,  
             IOG1.IsFollowRFSGForReflex,  
             IOG1.IsContentFollowRFSG AS IsContentFollowRFSGSeq,  
             RFG.SequenceNo           AS grpcontentMLGSequenceNo,  
             RFG.PrintSeparately      AS grpContentMLGPrintSeparately,  
             OI.ReferredType  
      FROM   orderedinvestigations OI WITH(nolock)  
             INNER JOIN invorggroup IOG WITH(nolock)  
                     ON IOG.attgroupid = OI.pkgid  
             INNER JOIN invpackagemapping IPM WITH(nolock)  
                     ON IPM.packageid = IOG.orggroupid  
             INNER JOIN invorggroup IOG1 WITH(nolock)  
                     ON IOG1.attgroupid = OI.id  
                        AND OI.type = 'GRP'  
                        AND IOG1.orggroupid = IPM.id  
                        AND IPM.type = OI.type  
                        AND IOG1.orgid = @OrgID  
             LEFT JOIN #ReportFormatGroupOrgMapping RFG WITH(NOLOCK)  
                    ON IOG1.ReportFormatID = RFG.ReportFormatID  
                       AND IOG1.OrgID = RFG.OrgID  
      WHERE  IOG.orgid = @OrgID  
             AND visitid = @pVisitID  
             AND IPM.type = 'GRP'  
             AND oi.accessionnumber IN (SELECT accessionno  
                                        FROM   @tblResultSelectID);  
  
      ----select 'b'  
      ----Delete IPK   
      ----Select  IPK.*  
      --Update IPK set PKgNAme=''  
      --from @InvGroupMapMasterForOrderedPkg IPK inner join Invorggroup IOG(nolocK)  
      --On IPK.PKGID=IOG.AttgroupID and IOG.ORgid=IPK.Orgid  
      --Inner Join InvGroupMaster IGM (NOlock) on IGM.GroupID=IOG.Attgroupid and IGM.Type='PKG'  
      --Where IOG.ISshowName=0  
      --select * from @InvGroupMapMasterForOrderedPkg  
      UPDATE PKG  
      SET    MLGSequenceNo = RFG.SequenceNo,MLGReportName = RFG.ReportFormatName,MLGPrintSeparately = RFG.PrintSeparately,ReportFormatId = RFG.ReportFormatId,IsContentFollowRFSG = IOG.IsContentFollowRFSG --,  
      --PkgName=Case When IOG.IsshowName=0 then '' else PKG.PkGNAme End   
      --IsFollowRFSGForReflex = IOG.IsFollowRFSGForReflex  
      FROM   @InvGroupMapMasterForOrderedPkg PKG  
             INNER JOIN InvOrgGroup IOG WITH(NOLOCK)  
                     ON pkg.pkgid = IOG.AttGroupID  
                        AND PKG.OrgID = IOG.OrgID  
             INNER JOIN #ReportFormatGroupOrgMapping RFG  
                     --ON IOG.ReportFormatId = RFG.ReportFormatId  
                     ON RFG.ReportFormatID = ISNULL(IOG.ReportFormatID, 999999)  
                        AND RFG.OrgId = @OrgID;  
  
  ;  
      WITH c2 AS (SELECT CASE  
                           WHEN IGM.parent = 'Y' THEN IGM.orderedid  
                           ELSE 0  
                         END                                                    AS GrpID,  
                         IGM.investigationid                                    AS InvID,  
                         IGM.pkgid                                              AS ParentGrpID,  
                         IGM.parent,  
                         IGM.accessionnumber,  
                         0                                                      AS [level],  
                         IGM.sequenceno,  
                         IGM.[uid],  
                         @pVisitID                                              AS VisitID,  
                         CASE  
                           WHEN IGM.parent = 'Y' THEN CONVERT(BIGINT, IGM.investigationid)  
                           ELSE 0  
                         END          AS OrgGroupID  
                         --,IDM.DeptName                                                                                                              
                         ,  
                         --''                               AS DeptName,  
                         ''                                                     AS MethodName,  
                         ''                                                     AS Interpretation,  
                         ''                                                     AS ReferenceRange,  
                         ''                                                     AS SampleID  
                         --,'' as UomCode                                                           
                         ,  
                         ''                                                     AS Reason,  
                         ''                                                     AS PrintableRange,  
                         IGM.pkgid                                              AS PKGID,  
                         IGM.pkgname,  
                         Cast(Isnull(IGM.childprintseparately, 'N') AS CHAR(1)) AS ChildPrintSeparately,  
                         ''                                                     AS ConvReferenceRange,  
                         IGM.ReferredAccessionNo,  
                         IGM.MLGSequenceNo,  
                         IGM.MLGReportName,  
                         IGM.MLGPrintSeparately,  
                         IGM.ReportFormatId,  
                         IGM.ReportSequence,  
                         IGM.IsContentFollowRFSG,  
                         IGM.IsFollowRFSGForReflex,  
                         IGM.IsContentFollowRFSGSeq,  
                         IGM.grpcontentMLGSequenceNo,  
                         IGM.grpContentMLGPrintSeparately,  
                         IGM.ReferredType  
                  FROM   @InvGroupMapMasterForOrderedPkg IGM  
                  UNION ALL  
                  SELECT CONVERT(BIGINT, IOG.attgroupid)                   AS GrpID,  
                         IGM.investigationid                               AS InvID,  
                         OI.grpid                                          AS ParentGrpID,  
                         CONVERT(CHAR(1), IGM.parent)                      AS Parent,  
                         OI.accessionnumber,  
                         [level] + 1,  
                         CASE  
                           WHEN OI.grpid IN(SELECT OI1.id  
                                            FROM   orderedinvestigations OI1 WITH( nolock )  
                                            WHERE  type = 'GRP') THEN OI.sequenceno  
                           ELSE OI.sequenceno  
                         --+ 1 -- + [level]                                                             
                         END                                               AS SequenceNo,  
                         OI.[uid],  
                         OI.visitid,  
                         OI.invid                                          AS OrgGroupID,  
                         methodname,  
                         interpretation,  
                         referencerange,  
                         sampleid,  
                         -- '',  
                         reason,  
                         printablerange,  
                         OI.pkgid,  
                         OI.pkgname,  
                         --Case when IOG.IsshowName=1 then OI.pkgname else '' End as pkgname ,  
                         Cast(Isnull(IGM.printseparately, 'N') AS CHAR(1)) AS ChildPrintSeparately,  
                         convreferencerange,  
                         OI.ReferredAccessionNo,  
                         OI.MLGSequenceNo,  
                         OI.MLGReportName,  
                         OI.MLGPrintSeparately,  
                         OI.ReportFormatId,  
                         OI.ReportSequence,  
            OI.IsContentFollowRFSG,  
                         OI.IsFollowRFSGForReflex,  
                         OI.IsContentFollowRFSGSeq,  
                         OI.grpcontentMLGSequenceNo,  
                         OI.grpContentMLGPrintSeparately,  
                         OI.ReferredType  
                  FROM   c2 OI  
                         INNER JOIN invorggroup IOG WITH(nolock)  
                                 ON IOG.orggroupid = OI.invid  
                                    AND IOG.orgid = @OrgID  
                         INNER JOIN invgroupmapmaster IGM WITH(nolock)  
                                 ON OI.invid = IGM.groupid  
                         INNER JOIN @tblResultSelectID tblUID  
                                 ON tblUID.accessionno = oi.accessionnumber  
                  WHERE  OI.parent = 'Y')  
      INSERT INTO @tblTempGrp  
                  (invid,grpid,accessionno,parentgrpid,isgroup,atlevel,grpcontentseq,[uid],patientvisitid,actualgrpid,  
                   --deptname,  
                   methodname,notes,referencerange,sampleid,samplename,uomcode,comments,pkgid,packagename,childprintseparately,convreferencerange,printablerange,  
       ReferredAccessionNo,MLGSequenceNo,MLGReportName,MLGPrintSeparately,ReportFormatId,grpcontentseqMedical,IsContentFollowRFSG,IsFollowRFSGForReflex,  
       IsContentFollowRFSGSeq,grpcontentMLGSequenceNo,grpContentMLGPrintSeparately,ReferredType)  
      SELECT invid,  
             grpid,  
             accessionnumber,  
             parentgrpid,  
             'Y',  
             [level],  
             sequenceno,  
             uid,  
             visitid,  
             orggroupid,  
             --deptname,  
             methodname,  
             interpretation,  
             referencerange,  
             sampleid,  
             '',  
             '',  
             reason,  
             pkgid,  
             pkgname,  
             childprintseparately,  
             convreferencerange,  
             printablerange,  
             ReferredAccessionNo,  
             MLGSequenceNo,  
             MLGReportName,  
             MLGPrintSeparately,  
             ReportFormatId,  
             ReportSequence,  
             IsContentFollowRFSG,  
             IsFollowRFSGForReflex,  
             IsContentFollowRFSGSeq,  
             grpcontentMLGSequenceNo,  
             grpContentMLGPrintSeparately,  
             ReferredType  
      FROM   c2  
      WHERE  Isnull(parent, 'N') = 'N'  
      ORDER  BY parentgrpid  
  
      --SYED  
  /****************** Explode the Groups ordered to get the investigation to be performed along with theie levels *********************************/  
      /********** Insert ordered investigations and exploded group contents into a temp table *******************************************************/  
      INSERT INTO @tblOrdInvExploded  
                  (invid,grpid,accessionno,parentgrpid,  
                   --deptid,  
                   --grpdeptid,  
                   isgroup,atlevel,  
                   --firstlvlseq,  
                   grpcontentseq,rootgroupid,innercontentseq,uid,patientvisitid,actualgrpid,  
                   --deptname,  
                   methodname,notes,referencerange,sampleid,samplename,uomcode,comments,patternid,patternname,uomid,validationtext,invvalidationtext,groupcomment,  
       groupmedicalremarks,resultvaluetype,decimalplaces,pkgid,packagename,medicalremarks,isnonreportable,  
       childprintseparately,parentprintseparately,  
                   -- referredtype,  
                   convreferencerange,printablerange,ReferredAccessionNo,MLGSequenceNo,MLGReportName,MLGPrintSeparately,ReportFormatId,firstlvlseqMedical,grpcontentseqMedical,  
       innerContentseqMedical,IsContentFollowRFSG,IsFollowRFSGForReflex,IsNonRepeatableInReport,IsContentFollowRFSGSeq,grpcontentMLGSequenceNo,  
       grpContentMLGPrintSeparately,ReferredType)  
      SELECT OI.id,  
             '0',  
             OI.accessionnumber,  
             '0',  
            --IOM.deptid,  
             --IOM.deptid,  
             'N',  
             0,  
             --IOM.sequenceno,  
             0,  
             '',  
             0,  
             OI.uid,  
             OI.visitid,  
             0,  
             --IDM.deptname,  
             piv.methodname,  
             PIV.interpretation,  
             PIV.referencerange,  
             PIV.sampleid,  
             '',  
             '',  
             reason,  
             0,  
             '',  
             IOM.uomid,  
             '',  
             '',  
             groupcomment,  
             groupmedicalremarks,  
             '',  
             0,  
             0,  
             '',  
             PIV.medicalremarks,  
             IOM.isnonreportable,  
             '',  
             IOM.printseparately,  
             --  OI.referredtype,  
             PIV.convreferencerange,  
             printablerange,  
             OI.ReferredAccessionNo,  
             CASE  
               WHEN isnull(RFG.SequenceNo, 0) = 0 THEN 999999  
               ELSE RFG.SequenceNo  
             END                  AS MLGSequenceNo,  
             RFG.ReportFormatName AS MLGReportName,  
             RFG.PrintSeparately  AS MLGPrintSeparately,  
             RFG.ReportFormatId,  
             IOM.ReportSequence,  
             NULL,  
             NULL,  
             IOM.IsContentFollowRFSG,  
             IOM.IsFollowRFSGForReflex,  
             IOM.IsNonRepeatableInReport,  
             NULL,  
             NULL,  
             NULL,  
             OI.ReferredType  
      FROM   orderedinvestigations OI WITH(nolock)  
             INNER JOIN investigationorgmapping IOM WITH(nolock)  
                     ON OI.id = IOM.investigationid  
                        AND OI.orgid = IOM.orgid  
             INNER JOIN invdeptmaster IDM WITH(nolock)  
                     ON IDM.deptid = IOM.deptid  
                        AND OI.orgid = IDM.orgid  
             INNER JOIN @tblPatientInvestigation PIV  
                     ON Piv.investigationid = IOM.investigationid  
                        AND piv.patientvisitid = OI.visitid  
                        AND PIV.uid = oi.uid  
             INNER JOIN @tblResultSelectID TRS  
                     ON TRS.accessionno = OI.accessionnumber  
             INNER JOIN #ReportFormatGroupOrgMapping RFG  
                     ON RFG.ReportFormatID = ISNULL(IOM.ReportFormatID, 999999)  
                        AND RFG.OrgID = @OrgID  
      WHERE  type NOT IN( 'GRP', 'PKG' )  
             AND Isnull(OI.pkgid, 0) = 0  
      UNION  
      SELECT invid,  
             grpid,  
             accessionno,  
             parentgrpid,  
             --'0',  
             --'0',  
             isgroup,  
             atlevel,  
             -- 0,  
             grpcontentseq,  
             '',  
             0,  
             uid,  
             patientvisitid,  
             actualgrpid,  
             --deptname,  
             methodname,  
             notes,  
             referencerange,  
             sampleid,  
             '',  
             '',  
             comments,  
             0,  
             '',  
             0,  
             '',  
             '',  
             '',  
             '',  
             '',  
             0,  
             pkgid,  
             packagename,  
             '',  
             'N',  
             childprintseparately,  
             '',  
             --'',  
             convreferencerange,  
             printablerange,  
             ReferredAccessionNo,  
             MLGSequenceNo,  
             MLGReportName,  
             MLGPrintSeparately,  
             ReportFormatId,  
             NULL,  
             grpcontentseqMedical,  
             NULL,  
             IsContentFollowRFSG,  
             IsFollowRFSGForReflex,  
             NULL,  
             IsContentFollowRFSGSeq,  
             grpcontentMLGSequenceNo,  
             grpContentMLGPrintSeparately,  
             ReferredType  
      FROM   @tblTempGrp  
  
      --select ReferredAccessionNo,*   
      UPDATE T  
      SET    ReferredAccessionNo = 0  
      FROM   @tblOrdInvExploded T  
             INNER JOIN Patientvisit PV(nolock)  
                     ON T.Patientvisitid = T.Patientvisitid  
      WHERE  Pv.Patientvisitid = @pVisitID  
             AND isnull(ReferVisitid, 0) <> 0  
  
      UPDATE t  
      SET    methodname = PIV.methodname,notes = PIV.interpretation,referencerange = PIV.referencerange,comments = reason,  
             --deptid = IM.deptid,  
             --deptname = IDM.deptname,  
             t.samplename = ISm.sampledesc,patternid = PM.patternid,patternname = IPM.patternname,  
             --uomid = IM.uomid,           
             --uomcode = IM.uomcode,           
             isabnormal = PIV.isabnormal,invvalidationtext = Isnull(IM.invvalidationtext, ''),groupcomment = PIV.groupcomment,groupmedicalremarks = PIV.groupmedicalremarks,  
    resultvaluetype = Isnull(IOA.resultvaluetype, 'AN'),decimalplaces = IOA.decimalplaces,medicalremarks = PIV.medicalremarks,isnonreportable = IM.isnonreportable,  
    t.patientvisitid = piv.patientvisitid,t.convreferencerange = PIV. convreferencerange,t.printablerange = PIV.printablerange  
      --,IsContentFollowRFSG =PIV.IsContentFollowRFSG  
      FROM   @tblOrdInvExploded T  
             INNER JOIN @tblPatientInvestigation PIV  
                     ON Piv.investigationid = t.invid  
                        AND piv.patientvisitid = t.patientvisitid  
                        AND PIV.uid = t.uid  
             INNER JOIN investigationorgmapping IM WITH(nolock)  
                     ON T.invid = IM.investigationid  
                        AND IM.orgid = @OrgID  
             LEFT JOIN invsamplemaster ISm WITH(nolock)  
                    ON ism.samplecode = PIV.sampleid  
                       AND ism.orgid = @OrgID  
                       AND ISm.orgid = PIV.orgid  
             INNER JOIN invdeptmaster IDM WITH(nolock)  
                     ON IDM.deptid = IM.deptid  
                        AND IM.orgid = IDM.orgid  
             INNER JOIN patternmapping PM WITH(nolock)  
                     ON PM.investigationid = t.invid  
             INNER JOIN investigationpattern IPM WITH(nolock)  
                     ON ipm.patternid = PM.patternid  
                        AND ipm.orgid = @OrgID  
             LEFT JOIN investigationorgattributes IOA WITH(nolock)  
                    ON IOA.orgid = @OrgID  
                       AND IOA.investigationid = IM.investigationid  
  
      UPDATE t  
      SET    uomid = INV.uomid,uomcode = INV.uomcode  
      FROM   @tblOrdInvExploded T  
             INNER JOIN @tblInvestigationValues INV  
                     ON INV.investigationid = T.invid  
                        AND T.patientvisitid = INV.patientvisitid  
      WHERE  INV.patientvisitid = @pVisitID  
             AND INV.orgid = @OrgID  
  
      UPDATE t  
      SET    t.groupid = t.packageid,t.groupname = Isnull(IOG.displaytext, IG.groupname)  
      FROM   @tblPatientInvestigation T  
             INNER JOIN invorggroup IOG (NOLOCK)  
                     ON IOG.orggroupid = T.packageid  
                        AND IOG.orgid = T.orgid  
             INNER JOIN invgroupmaster IG (NOLOCK)  
                     ON IG.groupid = IOG.attgroupid  
      WHERE  t.packageid > 0  
             AND ( t.groupid = 0  
                    OR t.groupid IS NULL )  
  
  /*********************** Update the departments for all the investigations ***********************/  
      /***************************************  Get the Root GroupID for all the Groups/Inner Groups **********************************************/  
      DECLARE @tblRootGrpID TABLE  
        (  
           accessionno VARCHAR(10),  
           parentgrpid VARCHAR(10)  
        )  
  
      INSERT INTO @tblRootGrpID  
      SELECT accessionno,  
             parentgrpid  
      FROM   @tblOrdInvExploded  
      --WHERE Atlevel=0                                                              
      GROUP  BY accessionno,  
                parentgrpid  
  
      UPDATE t  
      SET    t.parentgrpid = t.grpid  
      FROM   @tblOrdInvExploded T  
 WHERE  t.atlevel = 1  
  
      UPDATE t  
      SET    t.parentgrpname = Isnull(IOG.displaytext, IGM.groupname)  
      FROM   @tblOrdInvExploded T  
             INNER JOIN invgroupmaster IGM WITH(nolock)  
                     ON IGM.groupid = T.parentgrpid  
             INNER JOIN invorggroup IOG WITH(nolock)  
                     ON IOG.attgroupid = IGM.groupid  
                        AND IOG.orgid = @OrgID  
      WHERE  IOG.orgid = @OrgID  
  
      UPDATE t  
      SET    t.rootgroupid = T1.parentgrpid,t.parentprintseparately = Isnull(IOG.printseparately, 'N')  
      FROM   @tblOrdInvExploded T  
             INNER JOIN @tblRootGrpID T1  
                     ON T.accessionno = T1.accessionno  
             INNER JOIN orderedinvestigations OI WITH(nolock)  
                     ON OI.accessionnumber = T1.accessionno  
                        AND T1.parentgrpid = OI.id  
             INNER JOIN invorggroup IOG WITH(nolock)  
                     ON IOG.attgroupid = OI.id  
                        AND IOG.orgid = @OrgID  
      WHERE  OI.type IN( 'GRP', 'PKG' )  
             AND Isnull(OI.pkgid, 0) = 0  
  
      UPDATE t  
      SET    t.rootgrpname = T1.NAME  
      FROM   @tblOrdInvExploded T  
             INNER JOIN orderedinvestigations T1 WITH(nolock)  
                     ON T.accessionno = T1.accessionnumber  
                        AND T.rootgroupid = T1.id  
      WHERE  Isnull(T1.pkgid, 0) = 0  
  
      UPDATE t  
      SET    t.rootgroupid = OI.pkgid  
      FROM   @tblOrdInvExploded T  
             INNER JOIN @tblRootGrpID T1  
                     ON T.accessionno = T1.accessionno  
             INNER JOIN orderedinvestigations OI WITH(nolock)  
                     ON OI.accessionnumber = T1.accessionno  
      --AND T1.ParentGrpID=OI.ID                                                                                                                                                
      WHERE  Isnull(OI.pkgid, 0) <> 0 --- and T.IsshowName=1  
  
      UPDATE t  
      SET    t.rootgrpname = T1.pkgname  
      FROM   @tblOrdInvExploded T  
             INNER JOIN orderedinvestigations T1 WITH(nolock)  
                     ON T.accessionno = T1.accessionnumber  
                        AND T.rootgroupid = T1.pkgid  
      WHERE  Isnull(T1.pkgid, 0) <> 0 ---and T.IsshowName=1  
      --select 'a'  
      --select *   
      UPDATE T  
      SET    rootgrpname = ''  
      FROM   @tblOrdInvExploded T  
             INNER JOIN Invorggroup IOG(nolocK)  
                     ON T.rootgroupid = IOG.AttgroupID --and IOG.ORgid=T.Orgid  
             INNER JOIN InvGroupMaster IGM (NOlock)  
                     ON IGM.GroupID = IOG.Attgroupid  
                        AND IGM.Type = 'PKG'  
      WHERE  --IOG.ISshowName = 0 AND  
              IOG.ORgid = @OrgID  
  
      UPDATE t  
      SET    t.parentprintseparately = Isnull(IOG.printseparately, 'N')  
      FROM   @tblOrdInvExploded T  
             INNER JOIN @tblRootGrpID T1  
                     ON T.accessionno = T1.accessionno  
             INNER JOIN orderedinvestigations OI WITH(nolock)  
                     ON OI.accessionnumber = T1.accessionno  
             --AND T1.ParentGrpID=OI.ID      
             INNER JOIN invorggroup IOG WITH(nolock)  
                     ON IOG.attgroupid = OI.id  
                        AND IOG.orgid = @OrgID  
      WHERE  Isnull(OI.pkgid, 0) <> 0  
             AND OI.type = 'GRP'  
  
      UPDATE t  
      SET    t.parentprintseparately = Isnull(IOM.printseparately, 'N')  
      FROM   @tblOrdInvExploded T  
             INNER JOIN orderedinvestigations OI WITH(nolock)  
                     ON OI.accessionnumber = T.accessionno  
             --AND T1.ParentGrpID=OI.ID                         
             INNER JOIN investigationorgmapping IOM WITH(nolock)  
                     ON IOM.investigationid = OI.id  
                        AND IOM.orgid = @OrgID  
      WHERE  Isnull(OI.pkgid, 0) <> 0  
 AND OI.type = 'INV'  
  
      /* Order Investigation by seq */  
      UPDATE t  
      SET    --t.firstlvlseq = IOG.sequenceno,  
      t.firstlvlseqMedical = IOG.ReportSequence,t.firstlvlMLGSequenceNo = RFGM.SequenceNo,t.firstlvlMLGPrintSeparately = RFGM.PrintSeparately  
      FROM   @tblOrdInvExploded T  
             INNER JOIN investigationorgmapping IOG WITH (nolock)  
                     ON T.invid = IOG.investigationid  
                        AND IOG.orgid = @OrgID  
             LEFT JOIN #ReportFormatGroupOrgMapping RFGM WITH(NOLOCK)  
                    ON IOG.ReportFormatID = RFGM.ReportFormatID  
                       AND IOG.OrgID = RFGM.OrgID  
      WHERE  t.isgroup != 'Y'  
  
      /* Order Group by group Seq */  
      UPDATE t  
      SET    --t.firstlvlseq = IOG.Reportsequence,  
      t.firstlvlseqMedical = IOG.ReportSequence,t.firstlvlMLGSequenceNo = RFGM.SequenceNo,t.firstlvlMLGPrintSeparately = RFGM.Printseparately,validationtext = iog.validationtext  
      FROM   @tblOrdInvExploded T  
             INNER JOIN invorggroup IOG WITH (NOLOCK)  
                     ON T.rootgroupid = IOG.attgroupid  
                        AND IOG.orgid = @OrgID  
             LEFT JOIN ReportFormatGroupOrgMapping RFGM WITH(NOLOCK)  
                    ON IOG.ReportFormatID = RFGM.ReportFormatID  
                       AND IOG.OrgID = RFGM.OrgID  
  
      /* Order Inner Content Sequence */  
      UPDATE t  
      SET    innercontentseq = IGM.sequenceno,innercontentseqMedical = IOM.ReportSequence,innerMLGSequenceNo = RFGM.SequenceNo,innerMLGPrintSeparately = RFGM.PrintSeparately  
      FROM   @tblOrdInvExploded T  
             INNER JOIN invorggroup IOG WITH (nolock)  
                     ON IOG.attgroupid = t.grpid  
                        AND IOG.orgid = @OrgID  
             INNER JOIN invgroupmapmaster IGM WITH (nolock)  
                     ON IGM.groupid = IOG.orggroupid  
                        AND T.invid = IGM.investigationid  
             INNER JOIN InvestigationOrgMapping IOM WITH(NOLOCK)  
                     ON T.invid = IOM.InvestigationID  
                        AND IOM.OrgID = @OrgID  
             LEFT JOIN #ReportFormatGroupOrgMapping RFGM WITH(NOLOCK)  
                    ON IOM.ReportFormatID = RFGM.ReportFormatID  
                       AND IOM.OrgID = RFGM.OrgID  
      WHERE  t.atlevel IN( 0, 1 )  
  
      UPDATE t  
      SET    innercontentseq = IGM.sequenceno,innercontentseqMedical = IOG1.ReportSequence,innerIsContentRFSG = IOG1.IsContentFollowRFSG,
	  IsFollowRFSGForReflex = IOG1.IsFollowRFSGForReflex,innerMLGSequenceNo = RFGM.SequenceNo,innerMLGPrintSeparately = RFGM.PrintSeparately  
      FROM   @tblOrdInvExploded T  
             INNER JOIN invorggroup IOG WITH (nolock)  
                     ON IOG.attgroupid = t.parentgrpid  
                        AND IOG.orgid = @OrgID  
             INNER JOIN invgroupmapmaster IGM WITH (nolock)  
                     ON IGM.groupid = IOG.orggroupid  
                        AND IGM.investigationid = t.actualgrpid  
             INNER JOIN InvOrgGroup IOG1 WITH(NOLOCK)  
                     ON IGM.InvestigationID = IOG1.OrgGroupID  
                        AND IOG1.OrgID = @OrgID  
             LEFT JOIN #ReportFormatGroupOrgMapping RFGM WITH(NOLOCK)  
                    ON IOG1.ReportFormatID = RFGM.ReportFormatID  
                       AND IOG1.OrgID = RFGM.OrgID  
      WHERE  t.atlevel IN( 2 )  
  
      UPDATE t  
      SET    l2contentseq = IGM.sequenceno,l2contentseqMedical = IOM.ReportSequence,l2ContentMLGSequenceNo = RFGM.SequenceNo,l2ContentMLGPrintSeparately = RFGM.PrintSeparately,validationtext = iog.validationtext  
      FROM   @tblOrdInvExploded T  
             INNER JOIN invorggroup IOG WITH (nolock)  
                     ON IOG.orggroupid = t.actualgrpid  
                        AND IOG.orgid = @OrgID  
                        AND T.atlevel = 2  
             INNER JOIN invgroupmapmaster IGM WITH (nolock)  
                     ON IGM.groupid = T.actualgrpid  
          AND T.invid = IGM.investigationid  
                        AND T.atlevel = 2  
             INNER JOIN InvestigationOrgMapping IOM WITH(NOLOCK)  
                     ON IGM.InvestigationID = IOM.InvestigationID  
                        AND IOM.OrgID = @OrgID  
             LEFT JOIN #ReportFormatGroupOrgMapping RFGM WITH(NOLOCK)  
                    ON IOM.ReportFormatID = RFGM.ReportFormatID  
                       AND IOM.OrgID = RFGM.OrgID  
  
      UPDATE t  
      SET    t.result = Isnull(t1.value, '')  
      FROM   @tblOrdInvExploded t  
             INNER JOIN @tblInvestigationValues t1  
                     ON t.invid = t1.investigationid  
                        AND t.uid = t1.uid  
                        AND t.patientvisitid = t1.patientvisitid  
                        AND T.invid = t1.investigationid  
                        AND t1.orgid = @OrgID  
  
      UPDATE t1  
      SET    t1.result = t2.value,t1.newvalue = t2.newvalue,t1.convresult = t2.convvalue,t1.convuomcode = t2.convuomcode  
      --  + Case When t1.ReferredType='Recheck' Then ' (RC)' When t1.ReferredType='Retest' Then ' (RT)' Else '' End                   
      FROM   @tblOrdInvExploded t1  
             INNER JOIN @tblInvestigationValues t2  
                     ON t1.invid = t2.investigationid  
                        AND ( t1.actualgrpid = t2.groupid  
                               OR t1.grpid = t2.groupid )  
                        --AND t1.pkgid = t2.packageid  
                        AND t1.uid = t2.uid  
                        AND t2.status NOT IN( 'Reject', 'With Held' )  
  
      UPDATE t1  
      SET    t1.result = '-',t1.referencerange = '-',t1.uomcode = '',t1.isrejected = 'Y',t1.convresult = '-',t1.convreferencerange = '-',t1.printablerange = '-'  
      FROM   @tblOrdInvExploded t1  
             INNER JOIN @tblInvestigationValues t2  
                     ON t1.invid = t2.investigationid  
                        AND ( t1.actualgrpid = t2.groupid  
                               OR t1.grpid = t2.groupid )  
                        AND t1.pkgid = t2.packageid  
                        AND t1.uid = t2.uid  
                        AND t2.status IN( 'Reject' )  
  
      UPDATE t1  
      SET    t1.result = '-',t1.referencerange = '-',t1.uomcode = '',t1.iswithheld = 'Y',t1.convresult = '-',t1.convreferencerange = '-',t1.printablerange = '-'  
      FROM   @tblOrdInvExploded t1  
             INNER JOIN @tblInvestigationValues t2  
                     ON t1.invid = t2.investigationid  
                        AND ( t1.actualgrpid = t2.groupid  
                               OR t1.grpid = t2.groupid )  
                        AND t1.pkgid = t2.packageid  
                        AND t1.uid = t2.uid  
                        AND t2.status IN( 'With Held' )  
  
      UPDATE t  
      SET    t.childprintseparately = Isnull(IGM.printseparately, 'N')  
      FROM   @tblOrdInvExploded T  
             INNER JOIN invorggroup IOG WITH (nolock)  
                     ON IOG.attgroupid = T.rootgroupid  
                        AND IOG.orgid = @OrgID  
             INNER JOIN invgroupmapmaster IGM WITH (nolock)  
                     ON IGM.groupid = IOG.orggroupid  
                        AND IGM.parent = 'Y'  
                        AND IGM.investigationid = T.actualgrpid  
  
      UPDATE t  
      SET    t.childprintseparately = Isnull(IGM.printseparately, 'N')  
      FROM   @tblOrdInvExploded T  
             INNER JOIN invorggroup IOG WITH (nolock)  
                     ON IOG.attgroupid = T.rootgroupid  
                        AND IOG.orgid = @OrgID  
             INNER JOIN invgroupmapmaster IGM WITH (nolock)  
                     ON IGM.groupid = IOG.orggroupid  
                        AND IGM.parent = 'Y'  
             INNER JOIN invorggroup IOG1 WITH (nolock)  
                     ON IOG1.orggroupid = IGM.investigationid  
                        AND IOG1.orgid = @OrgID  
             INNER JOIN invgroupmapmaster IGM1 WITH (nolock)  
                     ON IGM1.groupid = IOG1.orggroupid  
                        AND IGM1.parent = 'Y'  
    AND IGM1.investigationid = T.actualgrpid  
  
      DECLARE @tblTempOrdInvExplodedReflexUpdation TABLE  
        (  
           rowid                   INT,  
           accessionno             VARCHAR(10),  
           actualgrpid             BIGINT,  
           grpid                   VARCHAR(10),  
           invid                   BIGINT,  
           parentgrpid             BIGINT,  
           rootgroupid             VARCHAR(10),  
           --deptname                VARCHAR(255),  
           valuesgrpid             BIGINT,  
           groupname               VARCHAR(255),  
           investigationvalueid    BIGINT,  
           NAME                    VARCHAR(300),  
           value                   VARCHAR(1),  
           sequenceno              INT,  
           methodname              VARCHAR(500),  
           notes                   VARCHAR(max),  
           referencerange          VARCHAR(max),  
           sampleid                BIGINT,  
           samplename              VARCHAR(500),  
           comments                VARCHAR(250),  
           units                   VARCHAR(100),  
           patternid               BIGINT,  
           patternname             VARCHAR(200),  
           --deptid                  BIGINT,  
           validationtext          VARCHAR(max),  
           isabnormal              VARCHAR(50),  
           invvalidationtext       VARCHAR(max),  
           [groupcomment]          [VARCHAR](255),  
           [groupmedicalremarks]   [VARCHAR](255),  
           resultvaluetype         NVARCHAR(200),  
           decimalplaces           VARCHAR(20),  
           pkgid                   INT,  
           packagename             VARCHAR(255),  
           rootgrpname             VARCHAR(250),  
           result                  VARCHAR(max),  
           medicalremarks          NVARCHAR(max),  
           parentgrpname           VARCHAR(250),  
           isnonreportable         CHAR(1),  
           childprintseparately    CHAR(1),  
           approvedby              BIGINT,  
           approvername            NVARCHAR(500),  
           approverqualification   NVARCHAR(500),  
           childpagenumber         INT,  
           parentprintseparately   CHAR(1),  
           ParentPageNumber        INT,  
           isgroup                 CHAR(1),  
           authorizedby            BIGINT,  
           authorizername          NVARCHAR(500),  
           authorizerqualification NVARCHAR(500),  
           patientvisiid           BIGINT,  
           isrejected              CHAR(1),  
           iswithheld              CHAR(1),  
           newvalue                NVARCHAR(20),  
           convreferencerange      VARCHAR(max),  
           convvalue               VARCHAR(50),  
           uid                     VARCHAR(255),  
           convuomcode             VARCHAR(50),  
           subgroupinterpretation  NVARCHAR(1),  
           printablerange          VARCHAR(max),  
           ReferredAccessionNo     BIGINT,  
           MLGSequenceNo           INT,  
           MLGReportName           VARCHAR(255),  
           MLGPrintSeparately      CHAR(1),  
           ReportFormatId          INT,  
           IsContentFollowRFSG     BIT,  
           IsFollowRFSGForReflex   BIT,  
           IsNonRepeatableInReport BIT,  
           ReferredType            VARCHAR(50)  
        )  
      DECLARE @tblTempOrdInvExploded TABLE  
        (  
           rowid                   INT,  
           accessionno             VARCHAR(10),  
           actualgrpid             BIGINT,  
           grpid                   VARCHAR(10),  
           invid                   BIGINT,  
           parentgrpid             BIGINT,  
           rootgroupid             VARCHAR(10),  
           --deptname                VARCHAR(255),  
           valuesgrpid             BIGINT,  
           groupname               VARCHAR(255),  
           investigationvalueid    BIGINT,  
           NAME                    VARCHAR(300),  
           value                   VARCHAR(1),  
       sequenceno              INT,  
           methodname              VARCHAR(500),  
           notes                   VARCHAR(max),  
           referencerange          VARCHAR(max),  
           sampleid                BIGINT,  
           samplename              VARCHAR(500),  
           comments                VARCHAR(250),  
           units                   VARCHAR(100),  
           patternid               BIGINT,  
           patternname             VARCHAR(200),  
           --deptid                  BIGINT,  
           validationtext          VARCHAR(max),  
           isabnormal              VARCHAR(50),  
           invvalidationtext       VARCHAR(max),  
           [groupcomment]          [VARCHAR](255),  
           [groupmedicalremarks]   [VARCHAR](255),  
           resultvaluetype         NVARCHAR(200),  
           decimalplaces           VARCHAR(20),  
           pkgid                   INT,  
           packagename             VARCHAR(255),  
           rootgrpname             VARCHAR(250),  
           result                  VARCHAR(max),  
           medicalremarks          NVARCHAR(max),  
           parentgrpname           VARCHAR(250),  
           isnonreportable         CHAR(1),  
           childprintseparately    CHAR(1),  
           approvedby              BIGINT,  
           approvername            NVARCHAR(500),  
           approverqualification   NVARCHAR(500),  
           childpagenumber         INT,  
           parentprintseparately   CHAR(1),  
           ParentPageNumber        INT,  
           isgroup                 CHAR(1),  
           authorizedby            BIGINT,  
           authorizername          NVARCHAR(500),  
           authorizerqualification NVARCHAR(500),  
           patientvisiid           BIGINT,  
           isrejected              CHAR(1),  
           iswithheld              CHAR(1),  
           newvalue                NVARCHAR(20),  
           convreferencerange      VARCHAR(max),  
           convvalue               VARCHAR(50),  
           uid                     VARCHAR(255),  
           convuomcode             VARCHAR(50),  
           subgroupinterpretation  NVARCHAR(1),  
           printablerange          VARCHAR(max),  
           ReferredAccessionNo     BIGINT,  
           MLGSequenceNo           INT,  
           MLGReportName           VARCHAR(255),  
           MLGPrintSeparately      CHAR(1),  
           ReportFormatId          INT,  
           IsContentFollowRFSG     BIT,  
           IsFollowRFSGForReflex   BIT,  
           IsNonRepeatableInReport BIT  
        )  
      DECLARE @tblTempOrdInvExplodedResult TABLE  
        (  
           temprowid                      BIGINT IDENTITY(1, 1),  
           rowid                          INT,  
           accessionno                    VARCHAR(10),  
           actualgrpid                    INT,  
           grpid                          VARCHAR(10),  
           invid                          BIGINT,  
           parentgrpid                    BIGINT,  
           rootgroupid                    VARCHAR(10),  
           --deptname                       VARCHAR(255),  
           valuesgrpid                    BIGINT,  
           groupname                      VARCHAR(255),  
           investigationvalueid           BIGINT,  
           NAME                           VARCHAR(500),  
           value                          VARCHAR(1),  
           sequenceno                     INT,  
           methodname                     VARCHAR(500),  
           notes                          VARCHAR(max),  
           referencerange                 VARCHAR(max),  
           sampleid                       BIGINT,  
           samplename                     VARCHAR(500),  
           technicalremarks               VARCHAR(255),  
           units                          VARCHAR(100),  
           patternid                      BIGINT,  
           patternname                    VARCHAR(200),  
           --deptid                         BIGINT,  
           validationtext                 VARCHAR(max),  
           isabnormal                     VARCHAR(50),  
           invvalidationtext              VARCHAR(max),  
           [medicalremarks]               [NVARCHAR](max),  
           resultvaluetype                NVARCHAR(200),  
           decimalplaces                  VARCHAR(20),  
           pkgid                          INT,  
           packagename                    VARCHAR(255),  
           rootgrpname                    VARCHAR(250),  
           result                         VARCHAR(max),  
           attgroupid                     BIGINT,  
           parentgrpname                  VARCHAR(250),  
           isnonreportable                CHAR(1),  
           childprintseparately           CHAR(1),  
           approvedby                     BIGINT,  
           approvername                   NVARCHAR(500),  
           approverqualification          NVARCHAR(500),  
           childpagenumber                INT,  
           parentprintseparately          CHAR(1),  
           ParentPageNumber               INT,  
           isgroup                        CHAR(1),  
           authorizedby                   BIGINT,  
           authorizername                 NVARCHAR(500),  
           authorizerqualification        NVARCHAR(500),  
           patientvisitid                 BIGINT,  
           isrejected                     CHAR(1),  
           iswithheld                     CHAR(1),  
           newvalue                       NVARCHAR(20),  
           convreferencerange             VARCHAR(max),  
           convvalue                      VARCHAR(50),  
           uid                            VARCHAR(255),  
           convuomcode                    VARCHAR(50),  
           codename                       VARCHAR(100),  
           subgroupinterpretation         NVARCHAR(1),  
           printablerange                 VARCHAR(max),  
           IsShowName                     BIT,  
           ReportNameAlign                VARCHAR(50),  
           IsBelowHeaderInReport          BIT,  
           IsSampleName                   BIT,  
           IsShowInterpretationOnlyParent BIT,  
           OutputGroupingCode             VARCHAR(50),  
           ReferredAccessionNo            BIGINT,  
           MLGSequenceNo                  INT,  
           MLGReportName                  VARCHAR(255),  
           MLGPrintSeparately             CHAR(1),  
           MLGPageNumber                  TINYINT,  
           MLGIsShowName                  BIT,  
           ReportFormatId                 INT,  
           IsContentFollowRFSG            BIT,  
           IsFollowRFSGForReflex          BIT  
        )  
      DECLARE @tblTempOrdInvExplodedResultOrderbyRowID TABLE  
        (  
           temorowid                      BIGINT IDENTITY(1, 1),  
           rowid                          INT,  
           accessionno                    VARCHAR(10),  
           actualgrpid                    INT,  
           grpid                          VARCHAR(10),  
           invid                          BIGINT,  
           parentgrpid                    BIGINT,  
           rootgroupid                    VARCHAR(10),  
           --deptname                       VARCHAR(255),  
           valuesgrpid                    BIGINT,  
           groupname                      VARCHAR(255),  
           investigationvalueid           BIGINT,  
           NAME                           VARCHAR(500),  
           value                          VARCHAR(1),  
           sequenceno                     INT,  
           methodname                     VARCHAR(500),  
           notes                          VARCHAR(max),  
           referencerange                 VARCHAR(max),  
           sampleid                       BIGINT,  
           samplename                     VARCHAR(500),  
           technicalremarks               VARCHAR(255),  
           units                          VARCHAR(100),  
        patternid                      BIGINT,  
 patternname                    VARCHAR(200),  
           --deptid                         BIGINT,  
           validationtext                 VARCHAR(max),  
           isabnormal                     VARCHAR(50),  
           invvalidationtext              VARCHAR(max),  
           [medicalremarks]               [NVARCHAR](max),  
           resultvaluetype                NVARCHAR(200),  
           decimalplaces                  VARCHAR(20),  
           pkgid                          INT,  
           packagename                    VARCHAR(255),  
           rootgrpname                    VARCHAR(250),  
           result                         VARCHAR(max),  
           attgroupid                     BIGINT,  
           parentgrpname                  VARCHAR(250),  
           isnonreportable                CHAR(1),  
           childprintseparately           CHAR(1),  
           approvedby                     BIGINT,  
           approvername                   NVARCHAR(500),  
           approverqualification          NVARCHAR(500),  
           childpagenumber                INT,  
           parentprintseparately          CHAR(1),  
           ParentPageNumber               INT,  
           isgroup                        CHAR(1),  
           authorizedby                   BIGINT,  
           authorizername                 NVARCHAR(500),  
           authorizerqualification        NVARCHAR(500),  
           patientvisiid                  BIGINT,  
           isrejected                     CHAR(1),  
           iswithheld                     CHAR(1),  
           retestrecheck                  NVARCHAR(20),  
           convreferencerange             VARCHAR(max),  
           convvalue                      VARCHAR(50),  
           uid                            VARCHAR(255),  
           convuomcode                    VARCHAR(50),  
           codename                       VARCHAR(100),  
           subgroupinterpretation         NVARCHAR(max),  
           printablerange                 VARCHAR(max),  
           IsShowName                     BIT,  
           ReportNameAlign                VARCHAR(50),  
           IsBelowHeaderInReport          BIT,  
           IsSampleName                   BIT,  
           IsShowInterpretationOnlyParent BIT,  
           OutputGroupingCode             VARCHAR(50),  
           ReferredAccessionNo            BIGINT,  
           MLGSequenceNo                  INT,  
           MLGReportName                  VARCHAR(255),  
           MLGPrintseparately             CHAR(1),  
           MLGPageNumber                  TINYINT,  
           MLGIsShowName                  BIT,  
           ReportFormatId                 INT,  
           IsFollowRFSGForReflex          BIT,  
           PkgPrintseparately             CHAR(1) DEFAULT 'N'  
        )  
      DECLARE @ReflexSequence TABLE  
        (  
           AccessionNo                BIGINT,  
           ReflexAccessionNo          BIGINT,  
           MLGSequenceNoReflex        INT,  
           firstlvlseqMedicalReflex   INT,  
           MLGPrintSeparatelyReflex   VARCHAR(2),  
           IsFollowRFSGForReflexAgain BIT,  
           ReflexSequence             INT,  
           rowSequence                BIGINT  
        );  
  
      WITH ReflexSequences AS (SELECT E.accessionno,  
                                      Cast(NULL AS BIGINT)                                                                                                                                                                                                     
                                                                                                                                                                                                                     AS ReferredAccessionNo,
                                      ROW_NUMBER()
                                        OVER(
                                          PARTITION BY E.accessionNo
                                      ORDER BY CASE WHEN E.innerIsContentRFSG=1 THEN E.l2ContentMLGSequenceNo WHEN E.IsContentFollowRFSGSeq=1 THEN E.innerMLGSequenceNo WHEN E.IsContentFollowRFSG=1   
            THEN E.grpcontentMLGSequenceNo ELSE E.MLGSequenceNo END, CASE WHEN E.innerIsContentRFSG=1 THEN E.l2contentseqMedical WHEN E.IsContentFollowRFSGSeq=1   
            THEN E.innercontentseqMedical WHEN E.IsContentFollowRFSG=1 THEN E.grpcontentseqMedical ELSE E.firstlvlseqMedical END) AS rowid,  
                                      CASE
                                        WHEN E.innerIsContentRFSG = 1 THEN E.l2ContentMLGSequenceNo
                                        WHEN E.IsContentFollowRFSGSeq = 1 THEN E.innerMLGSequenceNo
                                        WHEN E.IsContentFollowRFSG = 1 THEN E.grpcontentMLGSequenceNo
                                        ELSE E.MLGSequenceNo
                                      END                                                                                                                                                                                                                      
                                                                                                                                                                                                                     AS MLGSequenceNo,
                                      CASE
                                        WHEN E.innerIsContentRFSG = 1 THEN E.l2contentseqMedical
                                        WHEN E.IsContentFollowRFSGSeq = 1 THEN E.innercontentseqMedical
                                        WHEN E.IsContentFollowRFSG = 1 THEN E.grpcontentseqMedical
                                        ELSE E.firstlvlseqMedical
                                      END                                                                                                                                                                                                                      
                                                                                                                                                                                                                     AS firstlvlseqMedical,
                                      CASE
                                        WHEN E.innerIsContentRFSG = 1 THEN E.l2ContentMLGPrintSeparately
                                        WHEN E.IsContentFollowRFSGSeq = 1 THEN E.innerMLGPrintSeparately
                                        WHEN E.IsContentFollowRFSG = 1 THEN E.grpContentMLGPrintSeparately
                                        ELSE E.MLGPrintSeparately
                                      END                                                                                                                                                                                                                      
                                                                                                                                                                                                                     AS PrintSeparately,
                                      E.IsFollowRFSGForReflex,
                                      0                                                                                                                                                                                                                        
                                                                                                                                                                                                                     ReflexSequence,
                                      CAST(NULL AS BIGINT)                                                                                                                                                                       AS rowSequence
                               FROM   @tblOrdInvExploded E
                                      INNER JOIN @tblOrdInvExploded IVE
                                              ON E.accessionno = IVE.ReferredAccessionNo
                               WHERE  E.ReferredAccessionNo = 0
                               UNION ALL
                               SELECT IE.accessionno,
                                      IE.ReferredAccessionNo,
                                      E.rowid,
                                      E.MLGSequenceNo,
                                      E.firstlvlseqMedical,
                                      E.PrintSeparately,
                                      IE.IsFollowRFSGForReflex,
                                      ReflexSequence + 1 AS ReflexSequence,
                                      IE.rowSequence
                               FROM   ReflexSequences E
                                      INNER JOIN (SELECT DENSE_RANK()
                                                           OVER(
                                                             PARTITION BY ReferredaccessionNo
                                                             ORDER BY MLGSequenceNo, firstlvlseqMedical) AS rowSequence,
                                                         AccessionNo,
                                                         ReferredAccessionNo,
                                                         IsFollowRFSGForReflex
                                                  FROM   @tblOrdInvExploded
                                                  WHERE  ReferredAccessionNo > 0) IE
                                              ON E.accessionno = IE.ReferredAccessionNo),
           UpdateRowID AS (SELECT tbl.AccessionNo,
                                  tbl1.AccessionNo AS ReflexAccessionNo,
                                  0 AS IsFollowRFSGForReflex
                           FROM   @tblOrdInvExploded tbl
                                  INNER JOIN @tblOrdInvExploded tbl1
                                          ON tbl.AccessionNo = tbl1.ReferredAccessionNo
                                  INNER JOIN OrderedInvestigations OI WITH(NOLOCK)
                                          ON tbl.AccessionNo = OI.AccessionNumber
                                             AND Type = 'INV'
                                             AND OI.OrgID = @OrgID
                                  INNER JOIN InvValueRangeMaster IVRM WITH(NOLOCK)
                                          ON tbl.invid = IVRM.InvestigationID
                                             AND tbl1.invid = IVRM.ReflexInvestigationID
                                             AND IVRM.OrgID = @OrgID
                           WHERE  OI.Visitid = @pVisitID
                                  AND OI.OrgID = @OrgID)
      INSERT INTO @ReflexSequence
      SELECT DISTINCT rs.accessionno,
                      rs.ReferredAccessionNo,
                      rs.MLGSequenceNo                                          AS MLGSequenceNoReflex,
                      rs.firstlvlseqMedical                                     AS firstlvlseqMedicalReflex,
                      rs.Printseparately                                        AS MLGPrintSeparatelyReflex,
                      Isnull(U.IsFollowRFSGForReflex, rs.IsFollowRFSGForReflex) AS IsFollowRFSGForReflexAgain,
                      rs.ReflexSequence,
                      rs.rowSequence
      FROM   ReflexSequences rs
             INNER JOIN (SELECT accessionno,
                                ReferredAccessionNo,
                                Max(rowid) AS rowid
                         FROM   ReflexSequences
                         GROUP  BY accessionno,
                                   ReferredAccessionNo) AS ES
                     ON rs.accessionno = ES.accessionno
                        AND rs.ReferredAccessionNo = ES.ReferredAccessionNo
                        AND rs.rowid = ES.rowid
             LEFT JOIN UpdateRowID U
                    ON rs.accessionno = U.ReflexAccessionNo
                       AND U.accessionno = RS.ReferredAccessionNo
      WHERE  rs.ReflexSequence > 0
             AND Isnull(U.IsFollowRFSGForReflex, rs.IsFollowRFSGForReflex) = 0
      ORDER  BY firstlvlseqMedical,
                ReflexSequence;

      WITH InvestigationValuesResult AS (SELECT DISTINCT tbl.accessionno,
                                                         CASE
                                                           WHEN Isnull(PIV.packageid, 0) > 0 THEN PIV.groupid
                                                           ELSE tbl.actualgrpid
                                                         END         AS actualgrpid,
                                                         PIV.groupid,
                                                         tbl.invid,
                                                         tbl.parentgrpid,
                                                         tbl.rootgroupid,
                                                         PIV.groupid AS ValuesGRpID,
                                                         PIV.groupname,
                                                         0           AS investigationvalueid,
                                                         CASE
                                                           WHEN tbl.isrejected = 'Y' THEN '* ' + PIV.investigationname
                                                           WHEN tbl.iswithheld = 'Y' THEN '* ' + PIV.investigationname
                                                           ELSE PIV.investigationname
                                                         END         AS NAME,
                                                         ''          AS value,
                                                         0           AS sequenceno,
                                                         tbl.methodname,
                                                         tbl.notes,
                                                         tbl.referencerange,
                                                         tbl.sampleid,
                                                         tbl.samplename,
                                                         tbl.comments,
                                                         tbl.uomcode,
                                                         tbl.patternid,
                                                         tbl.patternname,
                                                         tbl.validationtext,
                                                         PIV.isabnormal,
                                                         tbl.invvalidationtext,
                                                         PIV.groupcomment,
                                                         PIV.groupmedicalremarks,
                                                         tbl.resultvaluetype,
                                                         tbl.decimalplaces,
                                                         tbl.pkgid,
                                                         tbl.packagename,
                                                         tbl.rootgrpname,
                                                         ---case when isnull(tbl.IsShowName,1)=0 then tbl.rootgrpname else '' end as rootgrpname ,
                                                         tbl.result,
                                                         tbl.medicalremarks,
                                                         tbl.parentgrpname,
                                                         PIV.isnonreportable,
                                                         tbl.childprintseparately,
                                                         PIV.approvedby,
                                                         tbl.parentprintseparately,
                                                         tbl.isgroup,
                                                         PIV.authorizedby,
                                                         tbl.patientvisitid,
                                                         tbl.isrejected,
                                                         tbl.iswithheld,
                                                         tbl.newvalue,
                                                         tbl.convreferencerange,
                                                         tbl.convresult,
                                                         PIV.uid,
                                                         tbl.convuomcode,
                                                         tbl.subgroupinterpretation,
                                                         tbl.printablerange,
                                                         tbl.ReferredAccessionNo,
                                                         CASE
                                                           WHEN isnull(tbl.MLGSequenceNo, 0) = 0 THEN 999999
                                                           ELSE tbl.MLGSequenceNo
                                                         END         AS MLGSequenceNo,
                                                         CASE
                                                           WHEN isnull(tbl.IsshowName, 0) = 1 THEN tbl.MLGReportName
                                                           ELSE ''
                                                         END         MLGReportName,
                                                         tbl.MLGPrintSeparately,
                                                         CASE
                                                           WHEN isnull(tbl.ReportFormatId, 0) = 0 THEN 999999
                                                           ELSE tbl.ReportFormatId
                                                         END         ReportFormatId,
                                                         tbl.IsFollowRFSGForReflex,
                                                         CASE
                                                           WHEN isnull(tbl.firstlvlseqMedical, 0) = 0 THEN 999999
                                                           ELSE tbl.firstlvlseqMedical
                                                         END         firstlvlseqMedical,
                                                         --tbl.firstlvlseqMedical,
                                                         tbl.IsContentFollowRFSG,
                                                         tbl.grpcontentseq,
                                                         tbl.grpcontentseqMedical,
                                                         tbl.IsContentFollowRFSGSeq,
                                                         tbl.innercontentseq,
                                                         tbl.innercontentseqMedical,
                                                         tbl.innerIsContentRFSG,
                                                         tbl.l2contentseq,
                                                         tbl.l2contentseqMedical,
                                                         rs.MLGSequenceNoReflex,
                                                         rs.firstlvlseqMedicalReflex,
                                                         rs.ReflexSequence,
                                                         rs.rowSequence,
                                                      tbl.l2ContentMLGSequenceNo,
                                                         tbl.innerMLGSequenceNo,
                                                         tbl.grpcontentMLGSequenceNo,
                                                         rs.MLGPrintSeparatelyReflex,
                                                         tbl.firstlvlMLGPrintSeparately,
                                                         tbl.grpContentMLGPrintSeparately,
                                                         tbl.innerMLGPrintSeparately,
                                                         tbl.l2ContentMLGPrintSeparately,
                                                         tbl.ReferredType
                                         FROM   @tblOrdInvExploded tbl
                                                INNER JOIN @tblPatientInvestigation PIV
                                                        ON PIV.investigationid = tbl.invid
                                                           AND ( PIV.groupid = tbl.actualgrpid
                                                                  OR PIV.groupid = tbl.grpid )
                                                           AND PIV.patientvisitid = tbl.patientvisitid
                                                           AND PIV.uid = tbl.uid
                                                INNER JOIN @tblInvestigationValues IV
                                                        ON IV.investigationid = PIV.investigationid
                                                           AND IV.groupid = PIV.groupid
                                                           AND IV.uid = PIV.uid
                                                           AND PIV.patientvisitid = IV.patientvisitid
                                                LEFT JOIN @tblOrdInvExploded tbl1
                                                       ON tbl.invid = tbl1.invid
                                                          AND tbl1.IsNonRepeatableInReport = 1
                                                LEFT JOIN @ReflexSequence rs
                                                       ON tbl.accessionno = rs.accessionno
                                                          AND tbl.ReferredAccessionNo = rs.ReflexAccessionNo
                                         WHERE  tbl1.IsNonRepeatableInReport IS NULL
                                                 OR tbl.IsNonRepeatableInReport IS NULL)
      --select * from @tblOrdInvExploded
      --return
      INSERT INTO @tblTempOrdInvExplodedReflexUpdation
                  (rowid,accessionno,actualgrpid,grpid,invid,parentgrpid,rootgroupid,valuesgrpid,groupname,investigationvalueid,NAME,value,sequenceno,methodname,notes,referencerange,sampleid,samplename,comments,units,patternid,patternname,validationtext,
  
isabnormal,invvalidationtext,groupcomment,groupmedicalremarks,resultvaluetype,decimalplaces,pkgid,packagename,rootgrpname,result,medicalremarks,parentgrpname,isnonreportable,  
childprintseparately,approvedby,parentprintseparately,isgroup,authorizedby,patientvisiid,isrejected,iswithheld,newvalue,convreferencerange,convvalue,uid,convuomcode,  
subgroupinterpretation,printablerange,ReferredAccessionNo,MLGSequenceNo,MLGReportName,MLGPrintSeparately,ReportFormatId,IsFollowRFSGForReflex,ReferredType)  
      SELECT Row_number()  
               OVER (  
                 ORDER BY CASE WHEN innerIsContentRFSG=1 THEN ISNULL(MLGSequenceNoReflex, l2ContentMLGSequenceNo) WHEN IsContentFollowRFSGSeq=1   
     THEN ISNULL(MLGSequenceNoReflex, innerMLGSequenceNo) WHEN IsContentFollowRFSG=1 THEN ISNULL(MLGSequenceNoReflex, grpcontentMLGSequenceNo)   
     ELSE Isnull(MLGSequenceNoReflex, MLGSequenceNo) END, CASE WHEN innerIsContentRFSG=1 THEN ISNULL(firstlvlseqMedicalReflex, l2contentseqMedical)   
     WHEN IsContentFollowRFSGSeq=1 THEN ISNULL(firstlvlseqMedicalReflex, innercontentseqMedical) WHEN IsContentFollowRFSG=1   
     THEN ISNULL(firstlvlseqMedicalReflex, grpcontentseqMedical) ELSE Isnull(firstlvlseqMedicalReflex, firstlvlseqMedical) END,   
     ReflexSequence, rowSequence, CASE WHEN innerIsContentRFSG=1 THEN l2contentseqMedical WHEN IsContentFollowRFSGSeq=1   
     THEN innercontentseqMedical WHEN IsContentFollowRFSG=1 THEN grpcontentseqMedical ELSE grpcontentseq END, CASE WHEN innerIsContentRFSG=1   
     THEN l2contentseqMedical WHEN IsContentFollowRFSGSeq=1 THEN  
               innercontentseqMedical  
               ELSE  
               innercontentseq END, CASE WHEN innerIsContentRFSG=1 THEN l2contentseqMedical ELSE l2contentseq END ) * 100 AS rowid,  
             accessionno,  
             actualgrpid,  
             groupid,  
             invid,  
             parentgrpid,  
             rootgroupid,  
             ValuesGRpID,  
             groupname,  
             investigationvalueid,  
             NAME,  
             value,  
             sequenceno,  
             methodname,  
             notes,  
             referencerange,  
             sampleid,  
             samplename,  
             comments,  
             uomcode,  
             patternid,  
             patternname,  
             validationtext,  
             isabnormal,  
             invvalidationtext,  
             groupcomment,  
             groupmedicalremarks,  
             resultvaluetype,  
             decimalplaces,  
             pkgid,  
             packagename,  
             rootgrpname,  
             result,  
             medicalremarks,  
             parentgrpname,  
             isnonreportable,  
             childprintseparately,  
             approvedby,  
             parentprintseparately,  
             isgroup,  
             authorizedby,  
             patientvisitid,  
             isrejected,  
             iswithheld,  
             newvalue,  
             convreferencerange,  
             convresult,  
             uid,  
             convuomcode,  
             subgroupinterpretation,  
             printablerange,  
             ReferredAccessionNo,  
             MLGSequenceNo,  
             MLGReportName,  
             CASE  
               WHEN innerIsContentRFSG = 1 THEN ISNULL(MLGPrintSeparatelyReflex, l2ContentMLGPrintSeparately)  
               WHEN IsContentFollowRFSGSeq = 1 THEN ISNULL(MLGPrintSeparatelyReflex, innerMLGPrintSeparately)  
               WHEN IsContentFollowRFSG = 1 THEN ISNULL(MLGPrintSeparatelyReflex, grpContentMLGPrintSeparately)  
               ELSE Isnull(MLGPrintSeparatelyReflex, MLGPrintSeparately)  
             END                                                                                                          AS MLGPrintSeparately,  
             ReportFormatId,  
             IsFollowRFSGForReflex,  
             ReferredType  
      FROM   InvestigationValuesResult  
      ORDER  BY rowid;  
  
      INSERT INTO @tblTempOrdInvExploded  
                  (rowid,accessionno,actualgrpid,grpid,invid,parentgrpid,rootgroupid,valuesgrpid,groupname,investigationvalueid,NAME,value,sequenceno,methodname,notes,  
      referencerange,sampleid,samplename,comments,units,patternid,patternname,validationtext,isabnormal,invvalidationtext,[groupcomment],[groupmedicalremarks],  
      resultvaluetype,decimalplaces,pkgid,packagename,rootgrpname,result,medicalremarks,parentgrpname,isnonreportable,childprintseparately,approvedby,  
      approvername,approverqualification,childpagenumber,parentprintseparately,ParentPageNumber,isgroup,authorizedby,authorizername,authorizerqualification,  
      patientvisiid,isrejected,iswithheld,newvalue,convreferencerange,convvalue,uid,convuomcode,subgroupinterpretation,printablerange,ReferredAccessionNo,  
      MLGSequenceNo,MLGReportName,MLGPrintSeparately,ReportFormatId,IsContentFollowRFSG,IsFollowRFSGForReflex,IsNonRepeatableInReport)  
      SELECT ROW_NUMBER()  
               OVER(  
                 ORDER BY temp .rowid ),  
             accessionno,  
             actualgrpid,  
             grpid,  
             invid,  
             parentgrpid,  
             rootgroupid,  
             valuesgrpid,  
        groupname,  
             investigationvalueid,  
             NAME,  
             value,  
             sequenceno,  
             methodname,  
             notes,  
             referencerange,  
             sampleid,  
             samplename,  
             comments,  
             units,  
             patternid,  
             patternname,  
             validationtext,  
             isabnormal,  
             invvalidationtext,  
             [groupcomment],  
             [groupmedicalremarks],  
             resultvaluetype,  
             decimalplaces,  
             pkgid,  
             packagename,  
             rootgrpname,  
             result,  
             medicalremarks,  
             parentgrpname,  
             isnonreportable,  
             childprintseparately,  
             approvedby,  
             approvername,  
             approverqualification,  
             childpagenumber,  
             parentprintseparately,  
             ParentPageNumber,  
             isgroup,  
             authorizedby,  
             authorizername,  
             authorizerqualification,  
             patientvisiid,  
             isrejected,  
             iswithheld,  
             newvalue,  
             convreferencerange,  
             convvalue,  
             uid,  
             convuomcode,  
             subgroupinterpretation,  
             printablerange,  
             ReferredAccessionNo,  
             MLGSequenceNo,  
             MLGReportName,  
             MLGPrintSeparately,  
             ReportFormatId,  
             IsContentFollowRFSG,  
             IsFollowRFSGForReflex,  
             IsNonRepeatableInReport  
      FROM   (SELECT rowid,  
                     accessionno,  
                     actualgrpid,  
                     grpid,  
                     invid,  
                     parentgrpid,  
                     rootgroupid,  
                     valuesgrpid,  
                     groupname,  
                     investigationvalueid,  
                     NAME,  
                     value,  
                     sequenceno,  
                     methodname,  
                     notes,  
                     referencerange,  
                     sampleid,  
                     samplename,  
                     comments,  
                     units,  
                     patternid,  
                     patternname,  
                     validationtext,  
                     isabnormal,  
                     invvalidationtext,  
                     [groupcomment],  
                     [groupmedicalremarks],  
                     resultvaluetype,  
                     decimalplaces,  
                     pkgid,  
                     packagename,  
                     rootgrpname,  
                     result,  
                     medicalremarks,  
                     parentgrpname,  
                     isnonreportable,  
                     childprintseparately,  
                     approvedby,  
                     approvername,  
                     approverqualification,  
                     childpagenumber,  
                     parentprintseparately,  
                     ParentPageNumber,  
                     isgroup,  
                     authorizedby,  
                     authorizername,  
                     authorizerqualification,  
                     patientvisiid,  
                     isrejected,  
                     iswithheld,  
                     newvalue,  
                     convreferencerange,  
                     convvalue,  
                     uid,  
                     convuomcode,  
                     subgroupinterpretation,  
                     printablerange,  
                     ReferredAccessionNo,  
                     MLGSequenceNo,  
                     MLGReportName,  
                     MLGPrintSeparately,  
                     ReportFormatId,  
                     IsContentFollowRFSG,  
  IsFollowRFSGForReflex,  
                     IsNonRepeatableInReport  
  FROM   @tblTempOrdInvExplodedReflexUpdation  
              WHERE  ( ISNULL(ReferredAccessionNo, 0) = 0  
                        OR ISNULL(IsFollowRFSGForReflex, 0) = 1  
                        OR ISNULL(ReferredType, '') <> 'REFLEX' )  
              UNION ALL  
              SELECT ( ROW_NUMBER() OVER(ORDER BY Temp_OI.rowid)  
                       + Temp_OI.rowid ),  
                     OI.accessionno,  
                     OI.actualgrpid,  
                     OI.grpid,  
                     OI.invid,  
                     OI.parentgrpid,  
                     OI.rootgroupid,  
                     OI.valuesgrpid,  
                     OI.groupname,  
                     OI.investigationvalueid,  
                     OI.NAME,  
                     OI.value,  
                     OI.sequenceno,  
                     OI.methodname,  
                     OI.notes,  
                     OI.referencerange,  
                     OI.sampleid,  
                     OI.samplename,  
                     OI.comments,  
                     OI.units,  
                     OI.patternid,  
                     OI.patternname,  
                     OI.validationtext,  
                     OI.isabnormal,  
                     OI.invvalidationtext,  
                     OI.[groupcomment],  
                     OI.[groupmedicalremarks],  
                     OI.resultvaluetype,  
                     OI.decimalplaces,  
                     OI.pkgid,  
                     OI.packagename,  
                     OI.rootgrpname,  
                     OI.result,  
                     OI.medicalremarks,  
                     OI.parentgrpname,  
                     OI.isnonreportable,  
                     OI.childprintseparately,  
                     OI.approvedby,  
                     OI.approvername,  
                     OI.approverqualification,  
                     OI.childpagenumber,  
                     OI.parentprintseparately,  
                     OI.ParentPageNumber,  
                     OI.isgroup,  
                     OI.authorizedby,  
                     OI.authorizername,  
                     OI.authorizerqualification,  
                     OI.patientvisiid,  
                     OI.isrejected,  
                     OI.iswithheld,  
                     OI.newvalue,  
                     OI.convreferencerange,  
                     OI.convvalue,  
                     OI.uid,  
                     OI.convuomcode,  
                     OI.subgroupinterpretation,  
                     OI.printablerange,  
                     OI.ReferredAccessionNo,  
                     OI.MLGSequenceNo,  
                     OI.MLGReportName,  
                     OI.MLGPrintSeparately,  
                     OI.ReportFormatId,  
                     OI.IsContentFollowRFSG,  
                     OI.IsFollowRFSGForReflex,  
                     OI.IsNonRepeatableInReport  
              FROM   @tblTempOrdInvExplodedReflexUpdation OI  
                     INNER JOIN (SELECT MAX(rowid)                     rowid,  
                                        ISNULL(ReferredAccessionNo, 0) ReferredAccessionNo,  
                                        accessionno  
                                 FROM   @tblTempOrdInvExplodedReflexUpdation  
                                 GROUP  BY ReferredAccessionNo,  
                                           accessionno) Temp_OI  
                             ON Temp_OI.accessionno = ISNULL(OI.ReferredAccessionNo, 0)  
              WHERE  ISNULL(OI.ReferredAccessionNo, 0) > 0  
                     AND ISNULL(IsFollowRFSGForReflex, 0) = 0) TEMP  
  
      DECLARE @RowID BIGINT  
  
      /* Start : Using While Instead Of rowidcursor Cursor */  
      SET @MaxRno =(SELECT Count(rowid)  
                    FROM   @tblTempOrdInvExploded)  
  
      WHILE ( @MinRno < = @MaxRno )  
        BEGIN  
            SELECT @RowID = rowid  
            FROM   (SELECT rowid,  
                           Row_number()  
                             OVER(  
                               ORDER BY rowid) AS ID  
                    FROM   @tblTempOrdInvExploded) t  
            WHERE  ID = @MinRno  
  
            INSERT INTO @tblTempOrdInvExplodedResult  
                        (rowid,MLGReportName,NAME,  
                         --deptid,  
                         rootgroupid,childprintseparately,approvedby,parentgrpid,parentprintseparately,isgroup,authorizedby,accessionno,pkgid,packagename,ReferredAccessionNo,MLGSequenceNo,MLGPrintSeparately,OutputGroupingCode,MLGIsShowName,ReportFormatId,
IsFollowRFSGForReflex)
            SELECT rowid,
                   MLGReportName,
                   CASE
                     WHEN '<B>'
                          + Upper(Ltrim(Rtrim(Isnull(MLGReportName, ''))))
                          + '</B>' = '<B></B>' THEN ''
                     ELSE '<B>'
                          + Upper(Ltrim(Rtrim(Isnull(MLGReportName, ''))))
                          + '</B>'
                   END,
                   --deptid,
                   Isnull(rootgroupid, invid),
                   childprintseparately,
                   approvedby,
                   parentgrpid,
                   parentprintseparately,
                   isgroup,
                   authorizedby,
                   accessionno,
                   pkgid,
                   packagename,
                   ReferredAccessionNo,
                   MLGSequenceNo,
                   MLGPrintSeparately,
                   IOG.OutputGroupingCode,
                   RFGM.IsShowName AS MLGIsShowName,
                   tbl.ReportFormatId,
                   TBL.IsFollowRFSGForReflex
            FROM   @tblTempOrdInvExploded tbl
                   LEFT JOIN #ReportFormatGroupOrgMapping RFGM
                          ON tbl.ReportFormatID = RFGM.ReportFormatID
                             AND RFGM.OrgID = @OrgID
                   LEFT JOIN InvOrgGroup IOG WITH(NOLOCK)
                          ON rootgroupid = IOG.AttGroupID
                             AND IOG.OrgID = @OrgID
                   LEFT JOIN InvOrgGroup IOG1 WITH(NOLOCK)
                          ON parentgrpid = IOG1.AttGroupID
                             AND IOG1.OrgID = @OrgID
            WHERE  rowid = @RowID
                   AND ( IOG.IsBelowHeaderInReport = 1
                         AND IOG1.IsBelowHeaderInReport = 1 )

            INSERT INTO @tblTempOrdInvExplodedResult
                        (rowid,rootgrpname,NAME,rootgroupid,technicalremarks,medicalremarks,MLGReportName,grpid,childprintseparately,approvedby,  
      parentgrpid,parentprintseparately,isgroup,authorizedby,accessionno,actualgrpid,pkgid,packagename,IsShowName,ReportNameAlign,  
      IsBelowHeaderInReport,IsSampleName,IsShowInterpretationOnlyParent,OutputGroupingCode,ReferredAccessionNo,MLGSequenceNo,  
      MLGPrintSeparately,ReportFormatId,IsFollowRFSGForReflex)  
            SELECT DISTINCT rowid,  
                            rootgrpname,  
                            CASE  
                              WHEN isnull(IOG.OutputGroupingCode, '') = 'Electro'  
                                    THEN '<B>'  
                                                                          + Upper(Ltrim(Rtrim(Isnull(MLGReportName, ''))))  
                                                                          + '</B><br><B>'  
                                                                          + Ltrim(Rtrim(Isnull(rootgrpname, '')))  
                                                                          + '</B>'  
                           --   WHEN IOG.IsBelowHeaderInReport = 0 THEN  
           WHEN 0 = 0 THEN  
                                --Case when '<B><U>'+ Upper(Ltrim(Rtrim(Isnull(MLGReportName, '')))) + '</U></B><br>'='<B><U></U></B><br>' then '' Else '<B><U>'+ Upper(Ltrim(Rtrim(Isnull(MLGReportName, '')))) + '</U></B><br>' End+  
               CASE  
                                  WHEN '<B>'  
                               + Ltrim(Rtrim(Isnull(rootgrpname, '')))  
                                       + '</B>' = '<B></B>' THEN ''  
                                  ELSE '<B>'  
                                       + Ltrim(Rtrim(Isnull(rootgrpname, '')))  
                                       + '</B>'  
                                END  
                              ELSE  
                                CASE  
                                  WHEN '<B>'  
                                       + Ltrim(Rtrim(Isnull(rootgrpname, '')))  
                                       + '</B>' = '<B></B>' THEN ''  
                                  ELSE '<B><U>'  
                                       + Ltrim(Rtrim(Isnull(rootgrpname, '')))  
                                       + '<U></B>'  
                                END  
                            END,  
                            rootgroupid,  
                            groupcomment,  
                            groupmedicalremarks,  
                            MLGReportName,  
                            grpid,  
                            childprintseparately,  
                            approvedby,  
                            parentgrpid,  
                            parentprintseparately,  
                            isgroup,  
                            authorizedby,  
                            accessionno,  
                            actualgrpid,  
                            pkgid,  
                            packagename,  
                            0,  
                            0 AS ReportNameAlign,  
                            0 AS IsBelowHeaderInReport,  
                            0 AS IsSampleName,  
                            0 AS IsShowInterpretationOnlyParent,  
                            IOG.OutputGroupingCode,  
                            ReferredAccessionNo,  
                            MLGSequenceNo,  
                            MLGPrintSeparately,  
                            T.ReportFormatId,  
                            T.IsFollowRFSGForReflex  
            FROM   @tblTempOrdInvExploded T  
                   LEFT JOIN InvOrgGroup IOG WITH(NOLOCK)  
                          ON rootgroupid = IOG.AttGroupID  
                             AND IOG.OrgID = @OrgID  
                   LEFT JOIN InvOrgGroup IOG1 WITH(NOLOCK)  
                          ON parentgrpid = IOG1.AttGroupID  
                             AND IOG1.OrgID = @OrgID  
            WHERE  rowid = @RowID  
                   AND Isnull(rootgrpname, 'NULL') != 'NULL'  
               --    AND IOG1.IsBelowHeaderInReport = 1  
  
            INSERT INTO @tblTempOrdInvExplodedResult  
                        (rowid,parentgrpname,NAME,parentgrpid,technicalremarks,medicalremarks,MLGReportName,grpid,rootgroupid,childprintseparately,approvedby,  
      parentprintseparately,isgroup,authorizedby,accessionno,pkgid,packagename,IsShowName,ReportNameAlign,IsBelowHeaderInReport,  
      IsSampleName,IsShowInterpretationOnlyParent,OutputGroupingCode,ReferredAccessionNo,MLGSequenceNo,MLGPrintSeparately,ReportFormatId,IsFollowRFSGForReflex)  
            SELECT rowid,  
                   parentgrpname,  
                   CASE  
                     WHEN ( Isnull(rootgrpname, '') <> parentgrpname )  
                          AND OutputGroupingCode = 'Electro'  
                        --  AND IOG.IsBelowHeaderInReport = 0   
        THEN CASE WHEN ('<B>'+ Upper(Ltrim(Rtrim(Isnull(MLGReportName, ''))))+ '</B><br><B>')='<B></B><br><B>' THEN '' ELSE '<B>'+ Upper(Ltrim(Rtrim(Isnull(MLGReportName, ''))))+ '</B><br><B>' END + CASE WHEN(Ltrim(Rtrim(Isnull(rootgrpname, ''))) + '</B><
  
br>')='</B><br>' THEN '' ELSE Ltrim(Rtrim(Isnull(rootgrpname, ''))) + '</B><br>' END + '<B>'  
                                                                 + Ltrim(Rtrim(Isnull(parentgrpname, '')))  
                                                                 + '</B>'  
                WHEN Isnull(rootgrpname, '') <> parentgrpname                         --   AND IOG.IsBelowHeaderInReport = 0   
        THEN CASE WHEN('<B>'+ Upper(Ltrim(Rtrim(Isnull(MLGReportName, '')))) + '</B><br>')='<B></B><br>' THEN '' ELSE '<B>'+ Upper(Ltrim(Rtrim(Isnull(MLGReportName, '')))) + '</B><br>' END + CASE WHEN('<B>'+ Ltrim(Rtrim(Isnull( rootgrpname, '')))+ '</B><b
  
r>')='<B></B><br>' THEN '' ELSE '<B>'+ Ltrim(Rtrim(Isnull(rootgrpname, '')))+ '</B><br>' END + CASE WHEN( '<B>' + Ltrim(Rtrim(Isnull( parentgrpname, '')))+ '</B>')='<B></B>' THEN '' ELSE '<B>' + Ltrim(Rtrim(Isnull( parentgrpname, '')))+ '</B>' END  
                     WHEN Isnull(rootgrpname, '') <> parentgrpname THEN '<B><I><U>'  
                                                                        + Ltrim(Rtrim(Isnull(parentgrpname, '')))  
                                                                        + '</U></I></B>'  
                     WHEN Isnull(rootgrpname, '') = parentgrpname  
                       --   AND IOG.IsBelowHeaderInReport = 0   
        THEN ( CASE  
                                                                     WHEN 'Center' = 'Center' THEN '<B>'  
                                                                                                          + Ltrim(Rtrim(Isnull(parentgrpname, '')))  
                                                                                                          + '</B>'  
                                                                     ELSE '<B><I><U>'  
                                                                          + Ltrim(Rtrim(Isnull(parentgrpname, '')))  
                                                                          + '</U></I></B>'  
                                                                   END )  
                     ELSE NULL  
                   END,  
                   parentgrpid,  
                   groupcomment,  
                   groupmedicalremarks,  
                   MLGReportName,  
                   grpid,  
                   rootgroupid,  
                   childprintseparately,  
                   approvedby,  
                   parentprintseparately,  
                   isgroup,  
                   authorizedby,  
                   accessionno,  
                   pkgid,  
                   packagename,  
                   0 AS IsShowName,  
                   'Center' AS ReportNameAlign,  
                   0 AS IsBelowHeaderInReport,  
                   0 AS IsSampleName,  
                   0 AS IsShowInterpretationOnlyParent,  
                   IOG.OutputGroupingCode,  
                   ReferredAccessionNo,  
                   MLGSequenceNo,  
                   MLGPrintSeparately,  
                   T.ReportFormatId,  
                   T.IsFollowRFSGForReflex  
            FROM   @tblTempOrdInvExploded T  
                   LEFT JOIN InvOrgGroup IOG WITH(NOLOCK)  
                          ON parentgrpid = IOG.AttGroupID  
                             AND IOG.OrgID = @OrgID  
            WHERE  rowid = @RowID  
                   AND Isnull(parentgrpname, 'NULL') != 'NULL'  
                   AND parentgrpname != ''  
  
            --        select 'a'  
            --select * from @tblTempOrdInvExplodedResult  
            --return  
            INSERT INTO @tblTempOrdInvExplodedResult  
                        (rowid,groupname,NAME,actualgrpid,technicalremarks,medicalremarks,MLGReportName,grpid,rootgroupid,childprintseparately,approvedby,parentgrpid,  
      parentprintseparately,isgroup,authorizedby,accessionno,pkgid,packagename,IsShowName,ReportNameAlign,IsBelowHeaderInReport,  
      IsSampleName,IsShowInterpretationOnlyParent,OutputGroupingCode,ReferredAccessionNo,MLGSequenceNo,MLGPrintSeparately,ReportFormatId,IsFollowRFSGForReflex)  
            SELECT rowid,  
                   groupname,  
                   CASE  
                     WHEN ( Isnull(rootgrpname, '') <> groupname  
                            AND Isnull(parentgrpname, '') <> groupname )  
                          AND OutputGroupingCode = 'Electro' THEN '<B>' + Ltrim(Rtrim(Isnull(groupname, '')))  
                                                                  + '</B>'  
                     WHEN Isnull(rootgrpname, '') <> groupname  
                          AND Isnull(parentgrpname, '') <> groupname THEN '<B><I><U>'  
                                                                          + Ltrim(Rtrim(Isnull(groupname, '')))  
                                                                          + '</U></I></B>'  
                     ELSE NULL  
                   END,  
                   actualgrpid,  
                   groupcomment,  
                   groupmedicalremarks,  
                   MLGReportName,  
                   grpid,  
                   rootgroupid,  
                   childprintseparately,  
                   approvedby,  
                   parentgrpid,  
                   parentprintseparately,  
                   isgroup,  
                   authorizedby,  
                   accessionno,  
                   pkgid,  
                   packagename,  
                   0 AS IsShowName,  
                   'Center' AS ReportNameAlign,  
                   0 AS IsBelowHeaderInReport,  
                   0 AS IsSampleName,  
                   0 AS IsShowInterpretationOnlyParent,  
                   IOG.OutputGroupingCode,  
                   ReferredAccessionNo,  
                   MLGSequenceNo,  
                   MLGPrintSeparately,  
                   T.ReportFormatId,  
                   T.IsFollowRFSGForReflex  
            FROM   @tblTempOrdInvExploded T  
                   LEFT JOIN InvOrgGroup IOG WITH(NOLOCK)  
                          ON grpid = IOG.OrgGroupID  
                             AND IOG.OrgID = @OrgID  
            WHERE  rowid = @RowID  
                   AND Isnull(groupname, 'NULL') != 'NULL'  
                   AND groupname != ''  
  
            INSERT INTO @tblTempOrdInvExplodedResult  
                        (rowid,accessionno,actualgrpid,grpid,invid,parentgrpid,rootgroupid,MLGReportName,valuesgrpid,groupname,investigationvalueid,NAME,value,sequenceno,sampleid,samplename,technicalremarks,units,methodname,notes,referencerange,patternid
,  
patternname,  
                         --deptid,  
                         validationtext,isabnormal,invvalidationtext,medicalremarks,resultvaluetype,decimalplaces,pkgid,packagename,rootgrpname,result,parentgrpname,isnonreportable,childprintseparately,approvedby,parentprintseparately,isgroup,authorizedby
,patientvisitid,isrejected,iswithheld,newvalue,convreferencerange,convvalue,uid,convuomcode,printablerange,ReferredAccessionNo,MLGSequenceNo,MLGPrintSeparately,ReportFormatId,IsFollowRFSGForReflex)
            SELECT rowid,
                   accessionno,
                   actualgrpid,
                   grpid,
                   invid,
                   parentgrpid,
                   rootgroupid,
                   MLGReportName,
                   valuesgrpid,
                   Isnull(groupname, ''),
                   investigationvalueid,
                   NAME,
                   value,
                   sequenceno,
                   sampleid,
                   samplename,
                   comments,
                   units,
                   methodname,
                   notes,
                   referencerange,
                   patternid,
                   patternname,
                   --deptid,
                   validationtext,
                   isabnormal,
                   invvalidationtext,
                   medicalremarks,
                   resultvaluetype,
                   decimalplaces,
                   pkgid,
                   packagename,
                   rootgrpname,
                   result,
                   parentgrpname,
                   isnonreportable,
                   childprintseparately,
                   approvedby,
               parentprintseparately,
                   isgroup,
                   authorizedby,
                   patientvisiid,
                   isrejected,
                   iswithheld,
                   newvalue,
                   convreferencerange,
                   convvalue,
                   uid,
                   convuomcode,
                   printablerange,
                   ReferredAccessionNo,
                   MLGSequenceNo,
                   MLGPrintSeparately,
                   ReportFormatId,
                   IsFollowRFSGForReflex
            FROM   @tblTempOrdInvExploded
            WHERE  rowid = @RowID
            ORDER  BY rowid

            SET @MinRno = @MinRno + 1
        END

      /* End : Using While Instead Of rowidcursor Cursor  */
      DELETE FROM tmp1
      FROM   @tblTempOrdInvExplodedResult tmp1
             LEFT JOIN (SELECT Min(temprowid) AS id,
                               invid,
                               accessionno
                        FROM   @tblTempOrdInvExplodedResult
                        WHERE  accessionno IS NOT NULL
                               AND invid IS NOT NULL
                        GROUP  BY invid,
                                  accessionno,
                                  parentgrpid) tmp2
                    ON tmp1.invid = tmp2.invid
                       AND tmp1.accessionno = tmp2.accessionno
                       AND tmp1.temprowid = tmp2.id
      WHERE  tmp2.id IS NULL
             AND tmp1.accessionno IS NOT NULL
             AND tmp1.invid IS NOT NULL

      INSERT INTO @tblTempOrdInvExplodedResultOrderbyRowID
                  (rowid,accessionno,actualgrpid,grpid,invid,parentgrpid,rootgroupid,valuesgrpid,groupname,investigationvalueid,NAME,value,sequenceno,methodname,  
      notes,referencerange,sampleid,samplename,technicalremarks,units,patternid,patternname,validationtext,isabnormal,invvalidationtext,[medicalremarks],  
      resultvaluetype,decimalplaces,pkgid,packagename,rootgrpname,result,attgroupid,parentgrpname,isnonreportable,childprintseparately,approvedby,approvername,  
      approverqualification,childpagenumber,parentprintseparately,ParentPageNumber,isgroup,authorizedby,authorizername,authorizerqualification,  
      patientvisiid,isrejected,iswithheld,retestrecheck,convreferencerange,convvalue,uid,convuomcode,codename,subgroupinterpretation,printablerange,  
      IsShowName,ReportNameAlign,IsBelowHeaderInReport,IsSampleName,IsShowInterpretationOnlyParent,OutputGroupingCode,ReferredAccessionNo,MLGSequenceNo,  
      MLGReportName,MLGPrintseparately,MLGPageNumber,MLGIsShowName,ReportFormatId,IsFollowRFSGForReflex)  
      SELECT rowid,  
             accessionno,  
             actualgrpid,  
             grpid,  
             invid,  
             parentgrpid,  
             rootgroupid,  
             --deptname,  
             valuesgrpid,  
             groupname,  
             investigationvalueid,  
             NAME,  
             value,  
             sequenceno,  
             methodname,  
             notes,  
             referencerange,  
             sampleid,  
             samplename,  
             technicalremarks,  
             units,  
             patternid,  
             patternname,  
             --deptid,  
             validationtext,  
             isabnormal,  
             invvalidationtext,  
             [medicalremarks],  
             resultvaluetype,  
             decimalplaces,  
             pkgid,  
             packagename,  
             rootgrpname,  
             result,  
             attgroupid,  
             parentgrpname,  
             isnonreportable,  
             childprintseparately,  
             approvedby,  
             approvername,  
             approverqualification,  
             childpagenumber,  
             parentprintseparately,  
             ParentPageNumber,  
             isgroup,  
             authorizedby,  
             authorizername,  
             authorizerqualification,  
 patientvisitid,  
             isrejected,  
             iswithheld,  
             newvalue,  
             convreferencerange,  
             convvalue,  
             uid,  
             convuomcode,  
             codename,  
             subgroupinterpretation,  
             printablerange,  
             IsShowName,  
             ReportNameAlign,  
             IsBelowHeaderInReport,  
             IsSampleName,  
             IsShowInterpretationOnlyParent,  
             OutputGroupingCode,  
             ReferredAccessionNo,  
             MLGSequenceNo,  
             MLGReportName,  
             MLGPrintSeparately,  
             MLGPageNumber,  
             MLGIsShowName,  
             ReportFormatId,  
             IsFollowRFSGForReflex  
      FROM   @tblTempOrdInvExplodedResult  
      ORDER  BY rowid,  
                CASE  
                  WHEN Isnull(ReferredAccessionNo, 0) = 0 THEN 0  
                  ELSE 1  
                END,  
                CASE  
                  WHEN invid IS NULL THEN 'a'  
                  ELSE 'b'  
                END  
  
      DECLARE @tblUnqMLGReportName TABLE  
        (  
           rowid         BIGINT,  
           MLGReportName VARCHAR(255),  
           AccessionNo   BIGINT,  
           MLGIsShowName BIT  
        )  
  
      INSERT INTO @tblUnqMLGReportName  
                  (rowid,MLGReportName,AccessionNo,MLGIsShowName)  
      SELECT Min(rowid),  
             MLGReportName,  
             ( CASE  
                 WHEN t.PkgID = 0 THEN t.AccessionNo  
                 ELSE t.PkgID  
               END ) AS PkgAccessionNo,  
             MLGIsShowName  
      FROM   @tblTempOrdInvExplodedResultOrderbyRowID t  
      WHERE  rowid = (SELECT Min(rowid)  
                      FROM   @tblTempOrdInvExplodedResultOrderbyRowID t1  
                      WHERE  t.MLGReportName = t1.MLGReportName  
                             AND ( CASE  
                                     WHEN t.PkgID = 0 THEN t.AccessionNo  
                                     ELSE t.PkgID  
                                   END ) = ( CASE  
                                               WHEN t1.PkgID = 0 THEN t1.AccessionNo  
                                               ELSE t1.PkgID  
                                             END ))  
             AND MLGIsShowName IS NOT NULL  
      GROUP  BY MLGReportName,  
                ( CASE  
                    WHEN t.PkgID = 0 THEN t.AccessionNo  
                    ELSE t.PkgID  
                  END ),  
                MLGIsShowName  
  
      DELETE FROM @tblTempOrdInvExplodedResultOrderbyRowID  
      WHERE  MLGReportName IN (SELECT MLGReportName  
                               FROM   @tblUnqMLGReportName)  
             AND rowid NOT IN (SELECT rowid  
                               FROM   @tblUnqMLGReportName)  
             AND ( grpid IS NULL  
                   AND invid IS NULL )  
  
      DECLARE @tblRootGrp TABLE  
        (  
           rowid       BIGINT,  
           rootgrpname VARCHAR(250)  
        )  
  
      INSERT INTO @tblRootGrp  
      SELECT Min(rowid),  
             rootgrpname  
      FROM   @tblTempOrdInvExplodedResultOrderbyRowID t  
      WHERE  rowid = (SELECT Min(rowid)  
                      FROM   @tblTempOrdInvExplodedResultOrderbyRowID t1  
                      WHERE  t.rootgrpname = t1.rootgrpname)  
      GROUP  BY rootgrpname  
  
      DELETE FROM @tblTempOrdInvExplodedResultOrderbyRowID  
      WHERE  rootgrpname IN (SELECT rootgrpname  
                             FROM   @tblRootGrp)  
             AND rowid NOT IN (SELECT rowid  
                               FROM   @tblRootGrp)  
             AND ( grpid IS NULL  
                    OR invid IS NULL )  
  
      DECLARE @tblParentGrp TABLE  
        (  
           rowid         BIGINT,  
           parentgrpname VARCHAR(250)  
        )  
  
      INSERT INTO @tblParentGrp  
      SELECT Min(rowid),  
             parentgrpname  
      FROM   @tblTempOrdInvExplodedResultOrderbyRowID t  
      WHERE  rowid = (SELECT Min(rowid)  
              FROM   @tblTempOrdInvExplodedResultOrderbyRowID t1  
                      WHERE  t.parentgrpname = t1.parentgrpname  
                             AND t.rootgrpname = t1.rootgrpname)  
      GROUP  BY parentgrpname,  
                rootgrpname  
  
      DELETE FROM @tblTempOrdInvExplodedResultOrderbyRowID  
      WHERE  parentgrpname IN (SELECT parentgrpname  
                               FROM   @tblParentGrp)  
             AND rowid NOT IN (SELECT rowid  
                               FROM   @tblParentGrp)  
             AND ( grpid IS NULL  
                    OR invid IS NULL )  
  
      DECLARE @tblUnqGrp TABLE  
        (  
           rowid         BIGINT,  
           parentgrpname VARCHAR(250),  
           grpname       VARCHAR(250)  
        )  
  
      INSERT INTO @tblUnqGrp  
      SELECT Min(rowid),  
             parentgrpname,  
             groupname  
      FROM   @tblTempOrdInvExplodedResultOrderbyRowID t  
      WHERE  rowid = (SELECT Min(rowid)  
                      FROM   @tblTempOrdInvExplodedResultOrderbyRowID t1  
                      WHERE  t.groupname = t1.groupname  
                             AND t.parentgrpname = t1.parentgrpname  
                             AND t.rootgrpname = t1.rootgrpname)  
      --t.GroupName=t1.GroupName AND t.ParentGrpName=t1.ParentGrpName)                  
      GROUP  BY parentgrpname,  
                groupname,  
                rootgrpname  
  
      DELETE FROM @tblTempOrdInvExplodedResultOrderbyRowID  
      WHERE  groupname IN (SELECT groupname  
                           FROM   @tblUnqGrp)  
             AND rowid NOT IN (SELECT rowid  
                               FROM   @tblUnqGrp)  
             AND ( grpid IS NULL  
                    OR invid IS NULL )  
  
      DELETE FROM @tblTempOrdInvExplodedResultOrderbyRowID  
      WHERE  Isnull(NAME, 'NULL') = 'NULL'  
  
      DELETE FROM @tblTempOrdInvExplodedResultOrderbyRowID  
      WHERE  NAME = ''  
  
      /***CODE Added For Show Method Name And Sample Name in Group Level***/  
      IF EXISTS(SELECT COM.configkeyid  
                FROM   configorgmaster COM (NOLOCK)  
                       INNER JOIN configkeymaster CKM (NOLOCK)  
                               ON CKM.configkeyid = COM.configkeyid  
                WHERE  CKM.configkey = 'GroupTestSeperator'  
                       AND COM.orgid = @OrgID)  
        BEGIN  
            DECLARE @SampleCountTable AS TABLE  
              (  
                 countvalue INT  
              )  
            DECLARE @MethodCountTable AS TABLE  
              (  
                 countvalue INT  
              )  
            DECLARE @SampleName NVARCHAR(500)  
            DECLARE @MethodName NVARCHAR(500)  
            DECLARE @Scount INT  
            DECLARE @Mcount INT  
  
            UPDATE tt1  
            SET    tt1.attgroupid = IOG.attgroupid  
            FROM   @tblTempOrdInvExplodedResultOrderbyRowID TT1  
                   INNER JOIN invorggroup IOG WITH(nolock)  
                           ON IOG.orggroupid = TT1.actualgrpid  
            WHERE  orgid = @OrgID  
  
            UPDATE @tblTempOrdInvExplodedResultOrderbyRowID  
            SET    methodname = Isnull(methodname, ''),samplename = Isnull(samplename, '')  
  
            DECLARE @GrpID BIGINT  
  
            /* Start : Using While Instead Of rowidcursor Cursor */  
            SET @MinRno = 1  
            SET @MaxRno = (SELECT Count(DISTINCT grpid)  
                           FROM   @tblTempOrdInvExplodedResultOrderbyRowID  
                           WHERE  Isnull(grpid, '0') <> '0')  
  
            WHILE ( @MinRno < = @MaxRno )  
              BEGIN  
                  SELECT @GrpID = grpid  
                  FROM   (SELECT grpid,  
                                 Row_number()  
                                   OVER(  
                                     ORDER BY grpid) AS ID  
                          FROM   @tblTempOrdInvExplodedResultOrderbyRowID  
                          WHERE  Isnull(grpid, '0') <> '0'  
    GROUP  BY grpid) t  
    WHERE  ID = @MinRno  
  
                  INSERT INTO @SampleCountTable  
                  SELECT Count(DISTINCT( samplename ))  
                  FROM   @tblTempOrdInvExplodedResultOrderbyRowID  
                  WHERE  grpid = @GrpID  
                         AND Isnull(samplename, '') <> ''  
                  GROUP  BY samplename  
  
                  INSERT INTO @MethodCountTable  
                  SELECT Count(DISTINCT( methodname ))  
                  FROM   @tblTempOrdInvExplodedResultOrderbyRowID  
                  WHERE  grpid = @GrpID  
                         AND ( Isnull(invid, '') <> ''  
                                OR Isnull(methodname, '') <> '' )  
                  GROUP  BY methodname  
  
                  IF ( (SELECT Count(1)  
                        FROM   @SampleCountTable) = 1  
                       AND (SELECT Count(1)  
                            FROM   @MethodCountTable) = 1 )  
                    BEGIN  
                        SELECT DISTINCT @SampleName = samplename,  
                                        @MethodName = methodname  
                        FROM   @tblTempOrdInvExplodedResultOrderbyRowID  
                        WHERE  grpid = @GrpID  
                               AND Isnull(invid, '') <> ''  
  
                        IF EXISTS(SELECT groupid  
                                  FROM   invgroupmapmaster (NOLOCK)  
                                  WHERE  groupid = @GrpID  
                                         AND parent = 'Y')  
                          BEGIN  
                              UPDATE t  
                              SET    t.samplename = '',t.methodname = ''  
                              FROM   @tblTempOrdInvExplodedResultOrderbyRowID T  
                              WHERE  t.grpid = @GrpID  
                                     AND Isnull(invid, '') <> ''  
                                     AND t.parentgrpid <> t.attgroupid  
  
                              UPDATE t  
                              SET    t.samplename = '',t.methodname = ''  
                              FROM   @tblTempOrdInvExplodedResultOrderbyRowID T  
                              WHERE  t.grpid = @GrpID  
                                     AND Isnull(invid, '') <> ''  
                          END  
                        ELSE  
                          BEGIN  
                              UPDATE t  
                              SET    t.samplename = '',t.methodname = ''  
                              FROM   @tblTempOrdInvExplodedResultOrderbyRowID T  
                              WHERE  t.grpid = @GrpID  
                                     AND Isnull(invid, '') <> ''  
                          END  
  
                        --Update test Unique Sample name to Group Smaple Name      
                        SELECT @Scount = Count(grpid)  
                        FROM   @tblTempOrdInvExplodedResultOrderbyRowID  
                        WHERE  grpid = @GrpID  
                               AND Isnull(invid, '') = ''  
  
                        SELECT @Mcount = Count(grpid)  
                        FROM   @tblTempOrdInvExplodedResultOrderbyRowID  
                        WHERE  grpid = @GrpID  
                               AND Isnull(invid, '') = ''  
  
                        UPDATE t  
                        SET    t.samplename = @SampleName  
                        FROM   (SELECT grpid,  
                                       samplename,  
                                       Row_number()  
                                         OVER (  
                                           partition BY grpid  
                                           ORDER BY grpid DESC) AS RN  
                                FROM   @tblTempOrdInvExplodedResultOrderbyRowID  
                                WHERE  grpid = @GrpID  
                                       AND Isnull(invid, '') = '') AS t  
                        WHERE  rn = @Scount  
  
                        UPDATE t  
                  SET    t.methodname = @MethodName  
                        FROM   (SELECT grpid,  
                                       methodname,  
                                       Row_number()  
                                         OVER (  
                                           partition BY grpid  
                                           ORDER BY grpid DESC) AS RN  
                                FROM   @tblTempOrdInvExplodedResultOrderbyRowID  
                                WHERE  grpid = @GrpID  
                                       AND Isnull(invid, '') = '') AS t  
                        WHERE  rn = @Mcount  
                    END  
                  ELSE IF ( (SELECT Count(1)  
                        FROM   @SampleCountTable) = 1  
                       AND (SELECT Count(1)  
                            FROM   @MethodCountTable) > 1 )  
                    BEGIN  
                        SELECT @SampleName = samplename  
                        FROM   @tblTempOrdInvExplodedResultOrderbyRowID  
                        WHERE  grpid = @GrpID  
                               AND Isnull(invid, '') <> ''  
                        GROUP  BY samplename  
  
                        IF EXISTS(SELECT groupid  
                                  FROM   invgroupmapmaster (NOLOCK)  
                                  WHERE  groupid = @GrpID  
                                         AND parent = 'Y')  
                          BEGIN  
                              UPDATE t  
                              SET    t.samplename = ''  
                              FROM   @tblTempOrdInvExplodedResultOrderbyRowID T  
                              WHERE  t.grpid = @GrpID  
                                     AND Isnull(invid, '') <> ''  
                                     AND t.parentgrpid <> t.attgroupid  
  
                              UPDATE t  
                              SET    t.samplename = ''  
                              FROM   @tblTempOrdInvExplodedResultOrderbyRowID T  
                              WHERE  t.grpid = @GrpID  
                                     AND Isnull(invid, '') <> ''  
                          END  
                        ELSE  
                          BEGIN  
                              UPDATE t  
                              SET    t.samplename = ''  
                              FROM   @tblTempOrdInvExplodedResultOrderbyRowID T  
                              WHERE  t.grpid = @GrpID  
                                     AND Isnull(invid, '') <> ''  
                          END  
  
                        SELECT @Scount = Count(grpid)  
                        FROM   @tblTempOrdInvExplodedResultOrderbyRowID  
                        WHERE  grpid = @GrpID  
                               AND Isnull(invid, '') = ''  
  
                        UPDATE t  
                        SET    t.samplename = @SampleName  
                        FROM   (SELECT grpid,  
                                       samplename,  
                                       Row_number()  
                                         OVER (  
                                           partition BY grpid  
                                           ORDER BY grpid DESC) AS RN  
                                FROM   @tblTempOrdInvExplodedResultOrderbyRowID  
                                WHERE  grpid = @GrpID  
                                       AND Isnull(invid, '') = '') AS t  
                        WHERE  rn = @Scount  
                    END  
                  ELSE IF ( (SELECT Count(1)  
                        FROM   @SampleCountTable) > 1  
                       AND (SELECT Count(1)  
                            FROM   @MethodCountTable) = 1 )  
                    BEGIN  
                        SELECT @MethodName = methodname  
                        FROM   @tblTempOrdInvExplodedResultOrderbyRowID  
                        WHERE  grpid = @GrpID  
                               AND Isnull(invid, '') <> ''  
                        GROUP  BY methodname  
  
                        IF EXISTS(SELECT groupid  
                                  FROM   invgroupmapmaster (NOLOCK)  
                                  WHERE  groupid = @GrpID  
                                         AND parent = 'Y')  
                          BEGIN  
                              UPDATE t  
                              SET    t.methodname = ''  
                              FROM   @tblTempOrdInvExplodedResultOrderbyRowID T  
                              WHERE  t.grpid = @GrpID  
                                     AND Isnull(invid, '') <> ''  
                                     AND t.parentgrpid <> t.attgroupid  
                          END  
                        ELSE  
                          BEGIN  
                              UPDATE t  
                              SET    t.methodname = ''  
                              FROM   @tblTempOrdInvExplodedResultOrderbyRowID T  
                              WHERE  t.grpid = @GrpID  
                                     AND Isnull(invid, '') <> ''  
                          END  
                    END  
  
                  --UPDATE T SET T.Name='  ~'+T.Name FROM @tblTempOrdInvExplodedResultOrderbyRowID T where T.GrpID= @GrpID and ISNULL(InvID,'')<>'' AND T.RootGroupID<>T.AttGroupID                                           
                  DELETE @SampleCountTable  
  
                  DELETE @MethodCountTable  
  
                  SET @MinRno = @MinRno + 1  
              END  
        /* End : Using While Instead Of rowidcursor Cursor */  
        END  
  
      UPDATE @tblTempOrdInvExplodedResultOrderbyRowID  
      SET    rootgroupid = invid,actualgrpid = invid  
      WHERE  isgroup = 'N'  
  
      /* End : Using While Instead Of deptdetailcursor Cursor */  
      DECLARE @TBLTEMPORDINVEXPLODEDRESULTORDERBYROWID_TEMP TABLE  
        (  
           temorowid                      BIGINT,  
           rowid                          INT,  
           accessionno                    VARCHAR(10),  
           actualgrpid                    INT,  
           grpid                          VARCHAR(10),  
           invid                          BIGINT,  
           parentgrpid                    BIGINT,  
           rootgroupid                    VARCHAR(10),  
           --deptname                       VARCHAR(255),  
           valuesgrpid                    BIGINT,  
           groupname                      VARCHAR(255),  
           investigationvalueid           BIGINT,  
           NAME                           VARCHAR(500),  
           value                          VARCHAR(1),  
           sequenceno                     INT,  
           methodname                     VARCHAR(500),  
           notes                          VARCHAR(max),  
           referencerange                 VARCHAR(max),  
           sampleid                       BIGINT,  
           samplename                     VARCHAR(500),  
           technicalremarks               VARCHAR(255),  
           units                          VARCHAR(100),  
           patternid                      BIGINT,  
           patternname                    VARCHAR(200),  
           --deptid                         BIGINT,  
           validationtext                 VARCHAR(max),  
           isabnormal                     VARCHAR(50),  
           invvalidationtext              VARCHAR(max),  
           [medicalremarks]               [NVARCHAR](max),  
           resultvaluetype                NVARCHAR(200),  
           decimalplaces                  VARCHAR(20),  
           pkgid                          INT,  
           packagename                    VARCHAR(255),  
           rootgrpname                    VARCHAR(250),  
           result                         VARCHAR(max),  
           attgroupid                     BIGINT,  
           parentgrpname                  VARCHAR(250),  
           isnonreportable                CHAR(1),  
           childprintseparately           CHAR(1),  
           approvedby           BIGINT,  
           approvername        NVARCHAR(500),  
           approverqualification          NVARCHAR(500),  
           childpagenumber                INT,  
           parentprintseparately          CHAR(1),  
           ParentPageNumber               INT,  
           isgroup                        CHAR(1),  
           authorizedby                   BIGINT,  
           authorizername                 NVARCHAR(500),  
           authorizerqualification        NVARCHAR(500),  
           patientvisiid                  BIGINT,  
           isrejected                     CHAR(1),  
           iswithheld                     CHAR(1),  
           retestrecheck                  NVARCHAR(20),  
           convreferencerange             VARCHAR(max),  
           convvalue                      VARCHAR(50),  
           uid                            VARCHAR(255),  
           convuomcode                    VARCHAR(50),  
           codename                       VARCHAR(100),  
           subgroupinterpretation         NVARCHAR(max),  
           printablerange                 VARCHAR(max),  
           IsShowName                     BIT,  
           ReportNameAlign                VARCHAR(50),  
           IsBelowHeaderInReport          BIT,  
           IsSampleName                   BIT,  
           IsShowInterpretationOnlyParent BIT,  
           OutputGroupingCode             VARCHAR(50),  
           ReferredAccessionNo            BIGINT,  
           MLGSequenceNo                  INT,  
           MLGReportName                  VARCHAR(255),  
           MLGPrintSeparately             CHAR(1),  
           MLGPageNumber                  INT,  
           MLGIsShowName                  BIT,  
           ReportFormatId                 INT,  
           IsFollowRFSGForReflex          BIT  
        );  
  
      INSERT INTO @TBLTEMPORDINVEXPLODEDRESULTORDERBYROWID_TEMP  
                  (temorowid,rowid,accessionno,actualgrpid,grpid,invid,parentgrpid,rootgroupid,valuesgrpid,groupname,investigationvalueid,NAME,value,sequenceno,  
      methodname,notes,referencerange,sampleid,samplename,technicalremarks,units,patternid,patternname,validationtext,isabnormal,  
      invvalidationtext,[medicalremarks],resultvaluetype,decimalplaces,pkgid,packagename,rootgrpname,result,attgroupid,parentgrpname,  
      isnonreportable,childprintseparately,approvedby,approvername,approverqualification,childpagenumber,  
parentprintseparately,ParentPageNumber,isgroup,authorizedby,authorizername,authorizerqualification,patientvisiid,isrejected,iswithheld,  
retestrecheck,convreferencerange,convvalue,uid,convuomcode,codename,subgroupinterpretation,printablerange,IsShowName,ReportNameAlign,  
IsBelowHeaderInReport,IsSampleName,IsShowInterpretationOnlyParent,OutputGroupingCode,ReferredAccessionNo,MLGSequenceNo,MLGReportName,MLGPrintseparately,  
MLGPageNumber,MLGIsShowName,ReportFormatId,IsFollowRFSGForReflex)  
      SELECT temorowid,  
             rowid,  
             accessionno,  
             actualgrpid,  
             grpid,  
             invid,  
             parentgrpid,  
             rootgroupid,  
             valuesgrpid,  
             groupname,  
             investigationvalueid,  
             NAME,  
             value,  
             sequenceno,  
             methodname,  
             notes,  
             referencerange,  
             sampleid,  
             samplename,  
             technicalremarks,  
             units,  
             patternid,  
             patternname,  
             validationtext,  
             isabnormal,  
             invvalidationtext,  
             [medicalremarks],  
             resultvaluetype,  
             decimalplaces,  
             pkgid,  
             packagename,  
             rootgrpname,  
             result,  
             attgroupid,  
             parentgrpname,  
             isnonreportable,  
             childprintseparately,  
             approvedby,  
             approvername,  
             approverqualification,  
             childpagenumber,  
        parentprintseparately,  
             ParentPageNumber,  
             isgroup,  
             authorizedby,  
             authorizername,  
             authorizerqualification,  
             patientvisiid,  
             isrejected,  
             iswithheld,  
             retestrecheck,  
             convreferencerange,  
             convvalue,  
             uid,  
             convuomcode,  
             codename,  
             subgroupinterpretation,  
             printablerange,  
             IsShowName,  
             ReportNameAlign,  
             IsBelowHeaderInReport,  
             IsSampleName,  
             IsShowInterpretationOnlyParent,  
             OutputGroupingCode,  
             ReferredAccessionNo,  
             MLGSequenceNo,  
             MLGReportName,  
             MLGPrintseparately,  
             MLGPageNumber,  
             MLGIsShowName,  
             ReportFormatId,  
             IsFollowRFSGForReflex  
      FROM   @tblTempOrdInvExplodedResultOrderbyRowID  
      WHERE  Isnull(pkgid, 0) <> 0  
  
      UPDATE @tblTempOrdInvExplodedResultOrderbyRowID  
      SET    rootgroupid = parentgrpid  
      WHERE  Isnull(pkgid, 0) <> 0  
  
      UPDATE @tblTempOrdInvExplodedResultOrderbyRowID  
      SET    rootgroupid = Isnull(invid, parentgrpid)  
      WHERE  Isnull(pkgid, 0) <> 0  
             AND grpid = 0  
  
      --select * from @tblTempOrdInvExplodedResultOrderbyRowID                                                                          
      DECLARE @tblRootID TABLE  
        (  
           rootid                BIGINT,  
           sequenceno            INT,  
           parentprintseparately CHAR(1),  
           pkgid                 BIGINT,  
           PkgPrintseparately    CHAR(1)  
        )  
  
      UPDATE @tblTempOrdInvExplodedResultOrderbyRowID  
      SET    pkgid = 0  
      WHERE  pkgid IS NULL  
              OR pkgid = ''  
  
      UPDATE temp  
      SET    temp.PkgPrintseparately = ISNULL(IOG.PrintSeparately, 'N')  
      FROM   @tblTempOrdInvExplodedResultOrderbyRowID temp  
             INNER JOIN InvOrgGroup IOG WITH(NOLOCK)  
                     ON IOG.AttGroupID = temp.PkgID  
                        AND IOG.OrGID = @OrgID  
  
      INSERT INTO @tblRootID  
      SELECT DISTINCT T.rootgroupid,  
                      Max(T.rowid)                 AS SequenceNo,  
                      Max(T.parentprintseparately) AS ParentPrintSeparately,  
                      pkgid,  
                      MAX(T.PkgPrintseparately)    AS PkgPrintseparately  
      FROM   @tblTempOrdInvExplodedResultOrderbyRowID T  
             INNER JOIN investigationorgmapping IOM WITH (nolock)  
                     ON IOM.investigationid = T.invid  
                        AND IOM.orgid = @OrgID  
      WHERE  T.isgroup = 'N'  
      GROUP  BY T.rootgroupid,  
                T.pkgid  
      ORDER  BY sequenceno  
  
      INSERT INTO @tblRootID  
      SELECT DISTINCT T.rootgroupid,  
                      Max(T.rowid)                 AS SequenceNo,  
                      Max(T.parentprintseparately) AS ParentPrintSeparately,  
                      pkgid,  
                      MAX(T.PkgPrintseparately)    AS PkgPrintseparately  
      FROM   @tblTempOrdInvExplodedResultOrderbyRowID T  
             INNER JOIN invorggroup IOG WITH (nolock)  
                     ON IOG.attgroupid = T.rootgroupid  
                        AND IOG.orgid = @OrgID  
      WHERE  T.isgroup != 'N'  
      GROUP  BY T.rootgroupid,  
                pkgid  
      ORDER  BY sequenceno  
  
      INSERT INTO @tblRootID  
      SELECT DISTINCT T.rootgroupid,  
                      Max(T.rowid)                 AS SequenceNo,  
                      Max(T.parentprintseparately) AS ParentPrintSeparately,  
                      pkgid,  
                      MAX(T.PkgPrintseparately)    AS PkgPrintseparately  
      FROM   @tblTempOrdInvExplodedResultOrderbyRowID T  
             INNER JOIN investigationorgmapping IOM WITH (nolock)  
                     ON IOM.investigationid = T.rootgroupid  
  AND IOM.orgid = @OrgID  
      WHERE  T.grpid = 0  
             AND Isnull(T.pkgid, 0) <> 0  
      GROUP  BY T.rootgroupid,  
                pkgid  
      ORDER  BY sequenceno  
      /* Update MLGPage Number based on MLGPrintSeparately */  
      ;  
  
      WITH MLGPageNumber AS (SELECT temorowid,  
                                    ReportFormatId,  
                                    MLGPrintSeparately,  
                                    Lag(MLGPrintSeparately, 1)  
                                      OVER(  
                                        --PARTITION BY ReportFormatID  
                                        ORDER BY temorowid) AS bMLGPrintSeparately  
                             FROM   @tblTempOrdInvExplodedResultOrderbyRowID),  
           MLGPageNumber2 AS (SELECT temorowid,  
                                     CASE  
                                       WHEN MLGPrintSeparately = 'Y'  
                                            AND Isnull(bMLGPrintSeparately, 'F') = 'F' THEN 1  
                                       WHEN MLGPrintSeparately = 'N'  
                                            AND Isnull(bMLGPrintSeparately, 'F') = 'F' THEN 1  
                                       WHEN MLGPrintSeparately = 'Y'  
                                            AND bMLGPrintSeparately = 'Y' THEN 0  
                                       WHEN MLGPrintSeparately = 'N'  
                                            AND bMLGPrintSeparately = 'N' THEN 0  
                                       WHEN MLGPrintSeparately = 'N'  
                                            AND bMLGPrintSeparately = 'Y' THEN 0  
                                       WHEN MLGPrintSeparately = 'Y'  
                                            AND bMLGPrintSeparately = 'N' THEN 1  
                                     END AS Pagenum  
                              FROM   MLGPageNumber)  
      UPDATE P  
      SET    P.MLGPageNumber = P1.MLGPageNumber  
      FROM   @tblTempOrdInvExplodedResultOrderbyRowID P  
             INNER JOIN (SELECT temorowid,  
                                Sum(Pagenum)  
                                  OVER(  
                                    ORDER BY temorowid) AS MLGPageNumber  
                         FROM   MLGPageNumber2) P1  
                     ON P.temorowid = P1.temorowid  
  
      DECLARE @tblParentID TABLE  
        (  
           parentid   BIGINT,  
           sequenceno INT  
        )  
      DECLARE @tblGroupChildList TABLE  
        (  
           childprintseparately CHAR(1),  
           sequenceno           INT  
        )  
      DECLARE @ParentID BIGINT  
      DECLARE @ChildID INT  
      DECLARE @ChildPrintSeparately CHAR(1)  
      DECLARE @ParentPrintSeparately NVARCHAR(10)  
      DECLARE @ParentPageNumber INT  
      DECLARE @ChildPageNumber INT  
      DECLARE @PkgPrintseparately CHAR(1)  
      DECLARE @PriviousPkgID BIGINT=0  
  
      SET @ParentPageNumber = 1  
      SET @ChildPageNumber = 1  
  
      DECLARE @RootID BIGINT  
      DECLARE @PKGID BIGINT  
  
      UPDATE t  
      SET    t.rootgroupid = T1.rootgroupid  
      FROM   @tblTempOrdInvExplodedResultOrderbyRowID T  
             INNER JOIN @tblTempOrdInvExplodedResultOrderbyRowID T1  
                     ON T1.rowid = T.rowid  
  
      --SELECT   * FROM @tblRootID  
      --SELECT MLGPrintSeparately,ParentPageNumber,parentprintseparately,pkgid,PkgPrintseparately, * FROM @tblTempOrdInvExplodedResultOrderbyRowID   
      --syed  
      /* Start : Using While Instead Of invdetailcursor Cursor */  
      SET @MinRno = 1  
      SET @MaxRno = (SELECT Count(rootid)  
                     FROM   @tblRootID)  
  
      WHILE ( @MinRno <= @MaxRno )  
        BEGIN  
            SELECT @RootID = rootid,  
                   @PKGID = pkgid  
            FROM   (SELECT rootid,  
                           pkgid,  
                           Row_number()  
                             OVER(  
                               ORDER BY sequenceno) AS ID  
    FROM   @tblRootID) t  
            WHERE  ID = @MinRno  
  
            SELECT @ParentPrintSeparately = parentprintseparately,  
                   @PkgPrintseparately = PkgPrintseparately  
            FROM   @tblRootID  
            WHERE  rootid = @RootID  
                   AND pkgid = @PKGID  
  
            --   SELECT @MinRno as MinRno,@ParentPrintSeparately as ParentPrintSeparately ,@PkgPrintseparately as PkgPrintseparately  ,@RootID AS RootID,@PKGID as PKGID ,@PriviousPkgID AS PriviousPkgID, @ParentPageNumber AS  ParentPageNumber  
            IF( @PriviousPkgID <> @PKGID  
                AND @PkgPrintseparately = 'Y'  
                AND @ParentPrintSeparately <> 'Y' )  
              BEGIN  
                  SET @ParentPageNumber = @ParentPageNumber + 1  
              END  
  
            SET @PriviousPkgID=@PKGID  
  
            IF( @ParentPrintSeparately = 'Y' )  
              BEGIN  
                  SET @ParentPageNumber = @ParentPageNumber + 1  
  
                  UPDATE @tblTempOrdInvExplodedResultOrderbyRowID  
                  SET    ParentPageNumber = @ParentPageNumber  
                  WHERE  rootgroupid = @RootID  
                         AND pkgid = @PKGID  
  
                  SET @ParentPageNumber = @ParentPageNumber + 1  
              END  
            ELSE  
              BEGIN  
                  UPDATE @tblTempOrdInvExplodedResultOrderbyRowID  
                  SET    ParentPageNumber = @ParentPageNumber  
                  WHERE  rootgroupid = @RootID  
                         AND pkgid = @PKGID  
              END  
  
            INSERT INTO @tblParentID  
            SELECT DISTINCT parentgrpid,  
                            Max(rowid) AS SequenceNo  
            FROM   @tblTempOrdInvExplodedResultOrderbyRowID  
            WHERE  rootgroupid = @RootID  
                   AND pkgid = @PKGID  
            GROUP  BY parentgrpid  
            ORDER  BY sequenceno  
  
            /* Start : Using While Instead Of grpdetailcursor Cursor */  
            SET @MinRno1 = 1  
            SET @MaxRno1 = (SELECT Count(parentid)  
                            FROM   @tblParentID)  
  
            WHILE ( @MinRno1 < = @MaxRno1 )  
              BEGIN  
                  SELECT @ParentID = parentid  
                  FROM   (SELECT parentid,  
                                 Row_number()  
                                   OVER(  
                                     ORDER BY sequenceno) AS ID  
                          FROM   @tblParentID) t  
                  WHERE  ID = @MinRno1  
  
                  INSERT INTO @tblGroupChildList  
                              (childprintseparately,sequenceno)  
                  SELECT childprintseparately,  
                         rowid  
                  FROM   @tblTempOrdInvExplodedResultOrderbyRowID  
                  WHERE  rootgroupid = @RootID  
                         AND pkgid = @PKGID  
                         AND parentgrpid = @ParentID  
  
                  /* Start : Using While Instead Of grpchilddetailcursor Cursor */  
                  SET @MinRNo2 = 1  
                  SET @MaxRNo2 = (SELECT Count(sequenceno)  
                                  FROM   @tblGroupChildList)  
  
                  WHILE ( @MinRNo2 < = @MaxRNo2 )  
                    BEGIN  
                        SELECT @ChildID = sequenceno  
                        FROM   (SELECT sequenceno,  
                                       Row_number()  
                                         OVER(  
                                           ORDER BY sequenceno) AS ID  
                                FROM   @tblGroupChildList) t  
                        WHERE  ID = @MinRNo2  
  
                        SELECT @ChildPrintSeparately = childprintseparately  
                        FROM   @tblGroupChildList  
                        WHERE  sequenceno = @ChildID  
  
                        IF( @ChildPrintSeparately = 'Y' )  
                          BEGIN  
                              SET @ChildPageNumber = @ChildPageNumber + 1  
  
                     UPDATE @tblTempOrdInvExplodedResultOrderbyRowID  
                              SET    childpagenumber = @ChildPageNumber  
                              WHERE  rootgroupid = @RootID  
                                     AND parentgrpid = @ParentID  
                                     AND rowid = @ChildID  
                                     AND pkgid = @PKGID  
  
                              SET @ChildPageNumber = @ChildPageNumber + 1  
                          END  
                        ELSE  
                          BEGIN  
                              UPDATE @tblTempOrdInvExplodedResultOrderbyRowID  
                              SET    childpagenumber = @ChildPageNumber  
                              WHERE  rootgroupid = @RootID  
                                     AND parentgrpid = @ParentID  
                                     AND rowid = @ChildID  
                                     AND pkgid = @PKGID  
                          END  
  
                        SET @MinRNo2 = @MinRNo2 + 1  
                    END  
  
                  DELETE FROM @tblGroupChildList  
  
                  /* End : Using While Instead Of grpchilddetailcursor Cursor */  
                  SET @MinRno1 = @MinRno1 + 1  
              END  
  
            /* End : Using While Instead Of grpdetailcursor Cursor */  
            SET @MinRno = @MinRno + 1  
        END  
  
      -- SELECT ParentPageNumber,parentprintseparately, * FROM @tblTempOrdInvExplodedResultOrderbyRowID   
      --RETURN  
  /* End : Using While Instead Of invdetailcursor Cursor */  
      ----------                              
      UPDATE t  
      SET    t.rootgroupid = t1.rootgroupid  
      FROM   @tblTempOrdInvExplodedResultOrderbyRowID t  
             INNER JOIN @TBLTEMPORDINVEXPLODEDRESULTORDERBYROWID_TEMP t1  
                     ON t.temorowid = t1.temorowid  
                        AND t.pkgid = t1.pkgid  
      WHERE  Isnull(t.pkgid, 0) <> 0  
  
      UPDATE t  
      SET    t.rootgroupid = t1.rootgroupid  
      FROM   @tblTempOrdInvExplodedResultOrderbyRowID t  
             INNER JOIN @TBLTEMPORDINVEXPLODEDRESULTORDERBYROWID_TEMP t1  
                     ON t.temorowid = t1.temorowid  
                        AND t.pkgid = t1.pkgid  
      WHERE  Isnull(t.pkgid, 0) <> 0  
             AND t.grpid = 0  
  
      UPDATE t  
      SET    t.approvername = Isnull(S.titlename, '') + ' ' + U.NAME,t.approverqualification = U.qualification  
      FROM   @tblTempOrdInvExplodedResultOrderbyRowID T  
             INNER JOIN login L WITH (nolock)  
                     ON L.loginid = T.approvedby  
             INNER JOIN users U WITH (nolock)  
                     ON U.loginid = L.loginid  
                        AND U.orgid = @OrgID  
             LEFT JOIN salutation S WITH (nolock)  
                    ON S.titleid = U.titlecode  
  
      UPDATE t  
      SET    t.authorizername = Isnull(S.titlename, '') + ' ' + U.NAME,t.authorizerqualification = U.qualification  
      FROM   @tblTempOrdInvExplodedResultOrderbyRowID T  
             INNER JOIN login L WITH (nolock)  
                     ON L.loginid = T.authorizedby  
             INNER JOIN users U WITH (nolock)  
                     ON U.loginid = L.loginid  
                        AND U.OrgID = @OrgID  
             LEFT JOIN salutation S WITH (nolock)  
                    ON S.titleid = U.titlecode  
  
      UPDATE t  
      SET    packagename = OI.pkgname  
      FROM   @tblTempOrdInvExplodedResultOrderbyRowID T  
             INNER JOIN orderedinvestigations OI WITH (nolock)  
                     ON OI.accessionnumber = T.accessionno  
      WHERE  OI.orgid = @OrgID  
             AND OI.visitid = @pVisitID  
             AND Isnull(OI.pkgname, '') <> '';  
  
      /***Code End***/  
      DECLARE @ClientId BIGINT  
      DECLARE @ClientTempTable TABLE  
        (  
           blockfrom DATETIME,  
           blockto   DATETIME,  
           status    CHAR(10)  
        )  
  
      SELECT @ClientId = VCM.clientid  
      FROM   patient P  
             INNER JOIN patientvisit PV (NOLOCK)  
                   ON P.patientid = PV.patientid  
             INNER JOIN visitclientmapping VCM WITH(nolock)  
                     ON VCM.visitid = pv.patientvisitid  
      WHERE  VCM.visitid = @pVisitID  
             AND VCM.orgid = @OrgID  
             AND Vcm.IsActive IS NULL  
  
      --select @ClientId                                
      INSERT INTO @ClientTempTable  
      SELECT cm.blockfrom,  
             cm.blockto,  
             CM.status  
      FROM   clientmaster CM WITH(nolock)  
      WHERE  CM.clientid = @ClientId  
             AND cm.orgid = @OrgID  
             AND CM.status = 'S'  
  
      DECLARE @Cstatus CHAR(10)  
  
      SELECT @Cstatus = status  
      FROM   @ClientTempTable  
  
      IF( Isnull(@Cstatus, '') = '' )  
        SET @Cstatus='XX'  
  
      DECLARE @tempResult TABLE  
        (  
           rowid                          INT,  
           NAME                           VARCHAR(500),  
           result                         VARCHAR(max),  
           units                          VARCHAR(100),  
           description                    VARCHAR(255),  
           referencerange                 VARCHAR(max),  
           investigationid                BIGINT,  
           methodname                     VARCHAR(500),  
           notes                          VARCHAR(max),  
           samplename                     VARCHAR(500),  
           isabnormal                     VARCHAR(50),  
           medicalremarks                 VARCHAR(max),  
           refrangesuffixtest             VARCHAR(1),  
           --deptid                         BIGINT,  
           grpid                          BIGINT,  
           isnonreportable                CHAR(1),  
           approvedby                     BIGINT,  
           approvername                   NVARCHAR(500),  
           approverqualification          NVARCHAR(500),  
           rootgroupid                    BIGINT,  
           parentgrpid                    BIGINT,  
           MLGPrintSeparately             CHAR(1),  
           MLGPageNumber                  TINYINT,  
           parentprintseparately          CHAR(1),  
           ParentPageNumber               INT,  
           childprintseparately           CHAR(1),  
           childpagenumber                INT,  
           authorizedby                   BIGINT,  
           authorizername                 NVARCHAR(500),  
           authorizerqualification        NVARCHAR(500),  
           patientvisiid                  BIGINT,  
           packagename                    VARCHAR(255),  
           applicationurl                 NVARCHAR(max),  
           isrejected                     CHAR(1),  
           iswithheld                     CHAR(1),  
           recheckretest                  NVARCHAR(20),  
           convreferencerange             NVARCHAR(max),  
           convvalue                      VARCHAR(50),  
           convuomcode                    VARCHAR(50),  
           codename                       VARCHAR(100),  
           subgroupinterpretation         VARCHAR(max),  
           printablerange                 VARCHAR(max),  
           IsShowName                     BIT,  
           ReportNameAlign                VARCHAR(50),  
           IsBelowHeaderInReport          BIT,  
           IsSampleName                   BIT,  
           IsShowInterpretationOnlyParent BIT,  
           OutputGroupingCode             VARCHAR(50),  
           OutputInvestigationCode        VARCHAR(50),  
           accessionno                    BIGINT,  
           ReferredAccessionno            BIGINT  
        )  
      --select @Cstatus                                                                                                 
      DECLARE @ApplicationURL VARCHAR(max)  
  
      SELECT @ApplicationURL = COM.configvalue  
      FROM   configorgmaster COM (NOLOCK)  
             INNER JOIN configkeymaster CKM WITH(nolock)  
                     ON CKM.configkeyid = COM.configkeyid  
      WHERE  CKM.configkey = 'ApplicationURL'  
            AND COM.orgid = @OrgID  
  
      SET @ApplicationURL=Isnull(@ApplicationURL, '')  
                          + '/Images/Signature/'  
  
      UPDATE t  
      SET    t.codename = CM.codename  
      FROM   @tblTempOrdInvExplodedResultOrderbyRowID t  
             INNER JOIN codemapper CMP WITH(nolock)  
                     ON CMP.identifyingid = t.grpid  
                        AND CMP.identifyingtype = 'GRP'  
             INNER JOIN codemaster CM WITH(nolock)  
                     ON Cm.codemasterid = CMP.codemasterid  
      WHERE  CM.codeschemeid = 1  
  
      UPDATE t  
      SET    t.subgroupinterpretation = ISNULL(VGID.interpretation, '')  
      FROM   @tblTempOrdInvExplodedResultOrderbyRowID T  
             INNER JOIN VisitGrpInterpretationDetails VGID WITH(nolock)  
                    ON T.patientvisiid = VGID.VisitId  
                       AND VGID.orggroupid = T.grpid  
                       AND VGID.IdentityType = 'GRP'  
      WHERE  VGID.orgid = @OrgID  
             AND Isnull(invid, '') <> ''  
             AND Isnull(patientvisiid, '') <> ''  
             AND Isnull(isnonreportable, 'N') <> 'Y'  
  
      DECLARE @tblSubGroupInterpretation AS TABLE  
        (  
           sno                 BIGINT IDENTITY (1, 1),  
           rootgroupid         BIGINT,  
           accessionno         BIGINT,  
           rowid               INT,  
           groupid             BIGINT,  
           groupinterpretation VARCHAR(max)  
        )  
  
      INSERT INTO @tblSubGroupInterpretation  
      SELECT rootgroupid,  
             accessionno,  
             Max(rowid),  
             grpid,  
             subgroupinterpretation  
      FROM   @tblTempOrdInvExplodedResultOrderbyRowID  
      GROUP  BY rootgroupid,  
                accessionno,  
                grpid,  
                subgroupinterpretation  
      HAVING ( subgroupinterpretation <> '' )  
  
      UPDATE t  
      SET    subgroupinterpretation = ''  
      FROM   @tblTempOrdInvExplodedResultOrderbyRowID T  
      WHERE  t.rowid NOT IN (SELECT rowid  
                             FROM   @tblSubGroupInterpretation)  
  
      UPDATE T  
      SET    T.patientvisiid = T1.patientvisiid  
      FROM   @tblTempOrdInvExplodedResultOrderbyRowID T  
             INNER JOIN @tblTempOrdInvExplodedResultOrderbyRowID T1  
                     ON T.rowid = T1.rowid  
      WHERE  isnull(T.patientvisiid, 0) = 0  
             AND T1.patientvisiid > 0  
  
      DECLARE @tblgroupgraph AS TABLE  
        (  
           sno                BIGINT IDENTITY (1, 1),  
           patientvisitid     BIGINT,  
           rootgroupid        BIGINT,  
           parentgrpid        BIGINT,  
           rowid              INT,  
           OutputGroupingCode VARCHAR(50)  
        )  
      DECLARE @tblgraph AS TABLE  
        (  
           sno            BIGINT IDENTITY (1, 1),  
           patientvisitid BIGINT,  
           rootgroupid    BIGINT,  
           parentgrpid    BIGINT,  
           rowid          INT  
        )  
  
      INSERT INTO @tblgroupgraph  
      SELECT patientvisiid,  
             rootgroupid,  
             parentgrpid,  
             Max(rowid),  
             OutputGroupingCode  
      FROM   @tblTempOrdInvExplodedResultOrderbyRowID  
      GROUP  BY patientvisiid,  
                rootgroupid,  
                parentgrpid,  
                OutputGroupingCode  
      HAVING ( OutputGroupingCode = 'GRAPH' )  
  
      INSERT INTO @tblgraph  
      SELECT T.patientvisiid,  
             T.rootgroupid,  
             T.parentgrpid,  
             Max(T.rowid)  
      FROM   @tblTempOrdInvExplodedResultOrderbyRowID T  
             INNER JOIN @tblgroupgraph G  
                     ON G.patientvisitid = T.patientvisiid  
                        AND G.rootgroupid = T.rootgroupid  
                        AND G.parentgrpid = T.parentgrpid  
      GROUP  BY T.patientvisiid,  
                T.rootgroupid,  
                T.parentgrpid  
  
      UPDATE t  
      SET    OutputGroupingCode = ''  
      FROM   @tblTempOrdInvExplodedResultOrderbyRowID T  
             INNER JOIN @tblgroupgraph G  
                     ON G.rowid = T.rowid  
      WHERE  T.OutputGroupingCode = 'GRAPH'  
  
      UPDATE t  
      SET    OutputGroupingCode = 'GRAPH'  
      FROM   @tblTempOrdInvExplodedResultOrderbyRowID T  
             INNER JOIN @tblgraph G  
                     ON G.rowid = T.rowid  
  
      UPDATE @tblTempOrdInvExplodedResultOrderbyRowID  
      SET    retestrecheck = ''  
  
      UPDATE t  
      SET    samplename = ''  
      FROM   @tblTempOrdInvExplodedResultOrderbyRowID T  
             INNER JOIN investigationorgmapping IOM WITH(nolock)  
                     ON IOM.investigationid = T.invid  
      WHERE  IOM.orgid = @OrgID  
             AND IOM.outputinvestigationcode IN( 'WithOutSample' )  
  
      UPDATE t  
      SET    samplename = ''  
      FROM   @tblTempOrdInvExplodedResultOrderbyRowID T  
             INNER JOIN invorggroup IOG WITH(nolock)  
                     ON IOG.orggroupid = T.grpid  
      WHERE  IOG.orgid = @OrgID  
             AND IOG.outputgroupingcode IN( 'WithOutSample' )  
  
      DELETE T  
      FROM   @tblTempOrdInvExplodedResultOrderbyRowID T  
             INNER JOIN invorggroup IOG WITH(nolock)  
                     ON IOG.attGroupid = T.rootGroupid  
             INNER JOIN InvGroupMaster IGM (NOLOCK)  
                     ON IGM.GroupID = IOG.AttGroupID  
             INNER JOIN CodeMapper CMP (NOLOCK)  
                     ON CMP.IdentifyingID = IOG.OrgGroupID  
             INNER JOIN CodeMaster CM (NOLOCK)  
                     ON CM.CodeMasterID = CMP.CodeMasterID  
                        AND CM.CodeType = 'PKG'  
                        AND CM.CodeSchemeID = 1  
      WHERE  IOG.orgid = @OrgID  
             AND IOG.outputgroupingcode IN( 'SPKG' )  
             AND T.NAME LIKE '%<B>%'  
             AND T.packagename <> '' --and  T.groupname IS NULL  
             AND T.rootgrpname <> ''  
  
      UPDATE t  
      SET    t.patternid = 0  
      FROM   @tblTempOrdInvExplodedResultOrderbyRowID T  
             INNER JOIN investigationorgmapping IOM WITH(nolock)  
                     ON IOM.investigationid = T.invid  
      WHERE  IOM.orgid = @OrgID  
             AND IOM.outputinvestigationcode IN( 'NoPattern' )  
  
      UPDATE t  
      SET    t.patternid = 0  
      FROM   @tblTempOrdInvExplodedResultOrderbyRowID T  
             INNER JOIN investigationorgattributes IOM WITH(nolock)  
                     ON IOM.investigationid = T.invid  
      WHERE  Isnull(IOM.resultvaluetype, '') = 'NTS'  
             AND IOM.orgid = @OrgID  
  
      UPDATE t  
      SET    result = dbo.[Udf_titlecase](result)  
      FROM   @tblTempOrdInvExplodedResultOrderbyRowID T  
             INNER JOIN invorggroup IOG WITH(nolock)  
                     ON IOG.attgroupid = T.parentgrpid  
      WHERE  IOG.orgid = @OrgID  
             AND IOG.outputgroupingcode IN( 'TitleCase' )  
             AND result IS NOT NULL  
  
      UPDATE t  
      SET    result = dbo.[Udf_titlecase](result)  
      FROM   @tblTempOrdInvExplodedResultOrderbyRowID T  
             INNER JOIN invorggroup IOG WITH(nolock)  
                     ON IOG.attgroupid = T.rootgroupid  
      WHERE  IOG.orgid = @OrgID  
             AND IOG.outputgroupingcode IN( 'TitleCase' )  
             AND result IS NOT NULL  
  
      DECLARE @SymbolRow AS TABLE  
        (  
           SymbolRowId     BIGINT,  
           InvestigationId INT  
        )  
  
      --select 'a'  
      --select * from @tblTempOrdInvExplodedResultOrderbyRowID  
      --return  
      INSERT INTO @SymbolRow  
      SELECT rowid,  
             1  
      FROM   @tblTempOrdInvExplodedResultOrderbyRowID  
      WHERE  result LIKE '%##%'  
  
      DECLARE @IsUnitsVisible TABLE  
        (  
           unitsId       BIGINT,  
           IsUnitsColumn BIT  
        )  
      DECLARE @IsReferenceRange TABLE  
        (  
           referenceRangeId BIGINT,  
           IsReferenceRange BIT  
        );  
  
      WITH unitsValue AS (SELECT Cast(accessionno AS BIGINT) AS unitsId,  
                            Max(num)                    AS maxNum  
                          FROM   (SELECT Cast(accessionno AS BIGINT)      AS accessionno,  
                                         Isnull(units, '')                AS units,  
                                         Dense_rank()  
                                           OVER(  
                                             partition BY Cast(accessionno AS BIGINT)  
                                             ORDER BY Isnull(units, '') ) AS num  
                                  FROM   @tblTempOrdInvExplodedResultOrderbyRowID) a  
                          GROUP  BY Cast(accessionno AS BIGINT))  
      INSERT INTO @IsUnitsVisible  
      SELECT DISTINCT unitsValue.unitsId,  
                      0 AS IsValuesColumn  
      FROM   @tblTempOrdInvExplodedResultOrderbyRowID t  
             INNER JOIN unitsValue  
                     ON Cast(t.accessionno AS BIGINT) = unitsValue.unitsId  
      WHERE  maxNum = 1  
             AND Isnull(t.units, '') = '';  
  
      WITH referenceValue AS (SELECT Cast(accessionno AS BIGINT) AS ReferenceRangeId,  
                                     Max(num)                    AS maxNum  
                              FROM   (SELECT Cast(accessionno AS BIGINT)               AS accessionno,  
                                             Isnull(ReferenceRange, '')                AS ReferenceRange,  
                                             Dense_rank()  
                                               OVER(  
                                                 partition BY Cast(accessionno AS BIGINT)  
                                                 ORDER BY Isnull(ReferenceRange, '') ) AS num  
                                      FROM   @tblTempOrdInvExplodedResultOrderbyRowID) a  
                              GROUP  BY Cast(accessionno AS BIGINT))  
      INSERT INTO @IsReferenceRange  
      SELECT DISTINCT referenceValue.ReferenceRangeId,  
                      0 AS IsValuesColumn  
      FROM   @tblTempOrdInvExplodedResultOrderbyRowID t  
             INNER JOIN referenceValue  
                     ON Cast(t.accessionno AS BIGINT) = referenceValue.ReferenceRangeId  
      WHERE  maxNum = 1  
             AND Isnull(t.ReferenceRange, '') = ''  
  
      UPDATE t  
      SET    T.convreferencerange = '',convvalue = '',convuomcode = ''  
      FROM   @tblTempOrdInvExplodedResultOrderbyRowID t  
             INNER JOIN investigationorgmapping(nolock) IOM  
                     ON t.invid = iom.investigationid  
      WHERE  Isnull(IOM.OutputInvestigationCode, '') = 'NoConventional'  
     
     
   /** BEGIN |  NA | MALATHI | 20171223 | Blinding of Reference Range  **/  
    IF EXISTS(SELECT 1 FROM clientmaster cm WITH(nolock)   
       WHERE clientid = @ClientId --AND isreferencerangeblinding = 1  
        )  
                BEGIN   
      
    UPDATE TMP SET TMP.referencerange='',printablerange=''  
    FROM @tblTempOrdInvExplodedResultOrderbyRowID TMP  
         INNER JOIN clienttestreferencerangeblinding ctr WITH(nolock) ON TMP.invid = CTR.InvID   
            AND ctr.clientid =@ClientId    
            AND Ctr.OrgID=@OrgID  
            AND ctr.IsActive =1   
         INNER JOIN InvestigationOrgMapping IOM WITH(NOLOCK) ON TMP.invid = IOM.InvestigationID  
            AND IOM.OrgID = ctr.OrgID  
            AND IOM.IsReferenceRangeBlinding = 1  
  
    END  
   /**  END |  NA | MALATHI | 20171223 | Blinding of Reference Range  **/  
     
  
      IF ( @Cstatus <> 'S' )  
        BEGIN  
            DELETE FROM @tblTempOrdInvExplodedResultOrderbyRowID  
            WHERE  rowid IN(SELECT SymbolRowId  
                            FROM   @SymbolRow)  
  
            UPDATE @tblTempOrdInvExplodedResultOrderbyRowID  
            SET    result = ''  
            WHERE  result LIKE '%#%'  
  
            SELECT r.Rowid,  
                   Name,  
                   Isnull(result, '')                  AS Result,  
                   CASE  
                  WHEN Isnull(units, 'null') = 'null' THEN ''  
                     ELSE units  
                   END                                 AS Units,  
                   Isnull(technicalremarks, '')        AS Description,  
                   CASE  
                     WHEN Ltrim(Rtrim(Isnull(printablerange, ''))) <> '' THEN printablerange  
                     ELSE Isnull(r.referencerange, '')  
                   END                                 AS ReferenceRange,  
                   invid                               AS InvestigationID,  
                   Isnull(methodname, '')              AS MethodName,  
                   Isnull(notes, '')                   AS Notes,  
                   Isnull(samplename, '')              AS SampleName,  
                   Isnull(isabnormal,'') isabnormal,  
                   Isnull(medicalremarks, '')          AS MedicalRemarks,  
                   ''                                  AS RefRangeSuffixtest,  
                   --r.deptid,  
                   grpid,  
                   r.isnonreportable,  
                   Isnull(approvedby, 0)               AS ApprovedBy,  
                   Isnull(approvername, '')            AS ApproverName,  
                   Isnull(approverqualification, '')   AS ApproverQualification,  
                   rootgroupid,  
                   parentgrpid,  
                   MLGPrintSeparately,  
                   MLGPageNumber,  
                   parentprintseparately,  
                   ParentPageNumber,  
                   childprintseparately,  
                   childpagenumber,  
                   Isnull(authorizedby, 0)             AS AuthorizedBy,  
                   Isnull(authorizername, '')          AS AuthorizerName,  
                   Isnull(authorizerqualification, '') AS AuthorizerQualification,  
                   patientvisiid,  
                   Isnull(packagename, '')             AS PackageName,  
                   @ApplicationURL                     AS ApplicationURL,  
                   Isnull(isrejected, 'N')             AS IsRejected,  
                   Isnull(iswithheld, 'N')             AS Iswithheld,  
                   retestrecheck,  
                   Isnull(convreferencerange, '')      AS ConvReferenceRange,  
                   Isnull(convvalue, '')               AS ConvValue,  
                   Isnull(convuomcode, '')             AS ConvUOMCode,  
                   codename,  
                   subgroupinterpretation,  
                   patternID,  
                   IsShowName,  
                   ReportNameAlign,  
                    Isnull(IsBelowHeaderInReport,0)  IsBelowHeaderInReport,  
                   IsSampleName,  
                   IsShowInterpretationOnlyParent,  
                   OutputGroupingCode,  
                   IOM.OutputInvestigationCode,  
                   r.AccessionNo,  
                   r.ReferredAccessionNo,  
                   r.MLGSequenceNo,  
                   temoRowid,  
                   Isnull(u.IsUnitsColumn, 1)          AS IsUnitsColumn,  
                   Isnull(rr.IsReferenceRange, 1)      AS IsReferenceRange  
            INTO   #tempResultFirst  
            FROM   @tblTempOrdInvExplodedResultOrderbyRowID r  
                   LEFT JOIN InvestigationOrgMapping IOM WITH(NOLOCK)  
                          ON invid = IOM.InvestigationID  
                             AND OrgID = @OrgID  
                   LEFT JOIN @IsUnitsVisible u  
                          ON accessionno = unitsId  
                   LEFT JOIN @IsReferenceRange rr  
                          ON accessionno = ReferenceRangeId  
            WHERE  Isnull(r.isnonreportable, 'N') <> 'Y'  
                   AND Isnull(IsShowName, 1) = 1  
                   AND Isnull(MLGIsShowName, 1) = 1  
                   AND NAME NOT IN( '<B>Routine Examination of Pleural Fluid</B>' )  
            ORDER  BY r.rowid,  
                      temorowid,  
                      CASE  
                        WHEN invid IS NULL THEN 'a'  
                        ELSE 'b'  
                   END;  
  
            UPDATE TT  
            SET    IsUnitsColumn = 1,IsReferenceRange = 1  
            FROM   #tempResultFirst TT  
                   INNER JOIN (SELECT min(Rowid)RowID,  
                                      ParentPageNumber  
                               FROM   #tempResultFirst  
                               WHERE  IsUnitsColumn = 1  
                                      AND IsReferenceRange = 1  
                               GROUP  BY ParentPageNumber)PageGroup  
                           ON PageGroup.ParentPageNumber = TT.ParentPageNumber --and IsUnitsColumn=0 AND IsReferenceRange=1   
            ;  
  
            WITH CTE AS (SELECT *,  
                                Lag(IsUnitsColumn, 1)  
                                  OVER(  
                                    PARTITION BY MLGPageNumber, ParentPageNumber, ChildPageNumber  
                                    ORDER BY rowid, CASE WHEN InvestigationID IS NULL THEN 'a' ELSE 'b' END, CASE WHEN Isnull(ReferredAccessionNo, 0) = 0 THEN 0 ELSE 1 END) AS bIsUnitsColumn,  
                                Lag(IsReferenceRange, 1)  
                                  OVER(  
                                    PARTITION BY MLGPageNumber, ParentPageNumber, ChildPageNumber  
                                    ORDER BY rowid, CASE WHEN InvestigationID IS NULL THEN 'a' ELSE 'b' END, CASE WHEN Isnull(ReferredAccessionNo, 0) = 0 THEN 0 ELSE 1 END) AS bIsReferenceRange  
                         FROM   #tempResultFirst)  
            SELECT Rowid,  
                   Name,  
                   Result,  
                   Isnull( InvestigationID,'') InvestigationID,  
                  Units,  
                   ReferenceRange,  
                   Isnull( InvestigationID,0) InvestigationID,  
                   MethodName,  
                 Notes,  
                   SampleName,  
                    Isnull(IsAbnormal,'') IsAbnormal,  
                   MedicalRemarks,  
                    
                   GrpID,  
                  
                   ApprovedBy,  
                   ApproverName,  
                   ApproverQualification,  
                  
                   patientvisiid,  
                    
                  Isnull(IsBelowHeaderInReport,0)    IsBelowHeaderInReport,  
                    
                   AccessionNo,  
                   
                   CASE  
                     WHEN bIsUnitsColumn IS NULL  
                          AND bIsReferenceRange IS NULL  
                          AND IsBelowHeaderInReport = 1 THEN 0  
                     WHEN IsUnitsColumn = 1  
                          AND IsReferenceRange = 1  
                          AND bIsUnitsColumn = 1  
                          AND bIsReferenceRange = 1  
                          AND IsBelowHeaderInReport = 1 THEN 0  
                     WHEN IsUnitsColumn = 0  
                          AND IsReferenceRange = 0  
                          AND bIsUnitsColumn = 0  
                          AND bIsReferenceRange = 0  
                          AND IsBelowHeaderInReport = 1 THEN 0  
                     WHEN IsUnitsColumn = 0  
                          AND IsReferenceRange = 0  
                          AND bIsUnitsColumn = 0  
                          AND bIsReferenceRange = 0 THEN 0  
                     WHEN IsUnitsColumn = 1  
                          AND IsReferenceRange = 1  
                          AND bIsUnitsColumn = 1  
                          AND bIsReferenceRange = 1 THEN 0  
                     WHEN IsUnitsColumn = 0  
                          AND IsReferenceRange = 1  
                          AND bIsUnitsColumn = 0  
                          AND bIsReferenceRange = 1 THEN 0  
                     WHEN IsUnitsColumn = 1  
                          AND IsReferenceRange = 0  
                          AND bIsUnitsColumn = 1  
                          AND bIsReferenceRange = 0 THEN 0  
                     ELSE 1  
                   END AS ForHeaderRow  
            FROM   CTE  
            ORDER  BY rowid,  
                      CASE  
                        WHEN InvestigationID IS NULL THEN 'a'  
                        ELSE 'b'  
                      END,  
                      CASE  
                        WHEN Isnull(ReferredAccessionNo, 0) = 0 THEN 0  
                        ELSE 1  
                      END  
        END  
      ELSE  
        BEGIN  
            INSERT INTO @tempResult  
            SELECT r.Rowid,  
                   Name,  
                   Isnull(result, '')                  AS Result,  
                   CASE  
                     WHEN Isnull(units, 'null') = 'null' THEN ''  
                     ELSE units  
                   END                                 AS Units,  
                   Isnull(technicalremarks, '')        AS Description,  
                   CASE  
                     WHEN Ltrim(Rtrim(Isnull(printablerange, ''))) <> '' THEN printablerange  
                     ELSE Isnull(r.referencerange, '')  
                   END                                 AS ReferenceRange,  
                    Isnull(invid  ,0)                             AS InvestigationID,  
                   Isnull(methodname, '')              AS MethodName,  
                   Isnull(notes, '')                   AS Notes,  
                   Isnull(samplename, '')              AS SampleName,  
                   isabnormal,  
                   Isnull(medicalremarks, '')          AS MedicalRemarks,  
                   ''                                  AS RefRangeSuffixtest,  
                   --r.deptid,  
                   grpid,  
                   r.isnonreportable,  
                   Isnull(approvedby, 0)               AS ApprovedBy,  
                   Isnull(approvername, '')            AS ApproverName,  
                   Isnull(approverqualification, '')   AS ApproverQualification,  
                   rootgroupid,  
                   parentgrpid,  
                   MLGPrintSeparately,  
                   MLGPageNumber,  
                   parentprintseparately,  
                   ParentPageNumber,  
                   childprintseparately,  
                   childpagenumber,  
                   Isnull(authorizedby, 0)             AS AuthorizedBy,  
                   Isnull(authorizername, '')          AS AuthorizerName,  
                   Isnull(authorizerqualification, '') AS AuthorizerQualification,  
                   patientvisiid,  
                   Isnull(packagename, '')             AS PackageName,  
                   @ApplicationURL                     AS ApplicationURL,  
                   Isnull(isrejected, 'N')             IsRejected,  
                   Isnull(iswithheld, 'N')             Iswithheld,  
                   retestrecheck,  
                   Isnull(convreferencerange, '')      AS ConvReferenceRange,  
                   Isnull(convvalue, '')               AS ConvValue,  
                   Isnull(convuomcode, '')             AS ConvUOMCode,  
                   codename,  
                   subgroupinterpretation,  
                   printablerange,  
                   IsShowName,  
                   ReportNameAlign,  
                   IsBelowHeaderInReport,  
                   IsSampleName,  
                   IsShowInterpretationOnlyParent,  
                   OutputGroupingCode,  
                   IOM.OutputInvestigationCode,  
                   r.AccessionNo,  
                   r.ReferredAccessionNo  
            FROM   @tblTempOrdInvExplodedResultOrderbyRowID r  
                   LEFT JOIN InvestigationOrgMapping IOM WITH(NOLOCK)  
                          ON invid = IOM.InvestigationID  
                             AND OrgID = @OrgID  
            WHERE  isabnormal = 'P'  
                   AND Isnull(r.isnonreportable, 'N') <> 'Y'  
                   AND Isnull(IsShowName, 1) = 1  
                   AND Isnull(MLGIsShowName, 1) = 1  
                   AND NAME NOT IN( '<B>Routine Examination of Pleural Fluid</B>' )  
            --Order by RowID                                                                                 
            UNION ALL  
            SELECT tbl.Rowid,  
                   tbl.Name                            AS NAME,  
                   Isnull(result, '')                  AS Result,  
                   CASE  
                     WHEN Isnull(units, 'null') = 'null' THEN ''  
                     ELSE units  
                   END                                 AS Units,  
                   Isnull(technicalremarks, '')        AS Description,  
                   CASE  
                     WHEN Ltrim(Rtrim(Isnull(tbl.printablerange, ''))) <> '' THEN tbl.printablerange  
                     ELSE Isnull(tbl.referencerange, '')  
                   END                                 AS ReferenceRange,  
                   invid                               AS InvestigationID,  
                   Isnull(methodname, '')              AS MethodName,  
                   Isnull(notes, '')                   AS Notes,  
                   Isnull(samplename, '')              AS SampleName,  
                   isabnormal,  
                   Isnull(medicalremarks, '')          AS MedicalRemarks,  
                   ''                                  AS RefRangeSuffixtest,  
                   --tbl.deptid                          AS DeptID,  
                   grpid,  
                   tbl.isnonreportable,  
                   Isnull(approvedby, 0)               AS ApprovedBy,  
                   Isnull(approvername, '')            AS ApproverName,  
                   Isnull(approverqualification, '')   AS ApproverQualification,  
                   rootgroupid,  
                   parentgrpid,  
                   MLGPrintSeparately,  
                   MLGPageNumber,  
                   parentprintseparately,  
                   ParentPageNumber,  
                   childprintseparately,  
                   childpagenumber,  
                   Isnull(authorizedby, 0)             AS AuthorizedBy,  
                   Isnull(authorizername, '')          AS AuthorizerName,  
                   Isnull(authorizerqualification, '') AS AuthorizerQualification,  
                   patientvisiid,  
                   Isnull(packagename, '')             AS PackageName,  
                   @ApplicationURL                     AS ApplicationURL,  
                   Isnull(isrejected, 'N')             IsRejected,  
                   Isnull(iswithheld, 'N')             Iswithheld,  
                   retestrecheck,  
                   Isnull(convreferencerange, '')      AS ConvReferenceRange,  
                   Isnull(convvalue, '')               AS ConvValue,  
                   Isnull(convuomcode, '')             AS ConvUOMCode,  
                   codename,  
                   subgroupinterpretation,  
                   printablerange,  
                   IsShowName,  
                   ReportNameAlign,  
                   IsBelowHeaderInReport,  
                   IsSampleName,  
                   IsShowInterpretationOnlyParent,  
                   OutputGroupingCode,  
                   IOM.OutputInvestigationCode,  
                   tbl.AccessionNo,  
                   tbl.ReferredAccessionNo  
            FROM   @tblTempOrdInvExplodedResultOrderbyRowID tbl  
                   INNER JOIN finalbill FB (NOLOCK)  
                           ON tbl.patientvisiid = FB.visitid  
                   INNER JOIN billingdetails BD (NOLOCK)  
                           ON BD.finalbillid = FB.finalbillid  
                   LEFT JOIN investigationorgmapping IOM (NOLOCK)  
                          ON IOM.investigationid = tbl.invid  
                             AND IOM.orgid = @OrgID  
            WHERE  BD.isstat = 'Y'  
                   AND Isnull(tbl.isnonreportable, 'N') <> 'Y'  
                   AND Isnull(IsShowName, 1) = 1  
                   AND Isnull(MLGIsShowName, 1) = 1  
                   AND tbl.NAME NOT IN( '<B>Routine Examination of Pleural Fluid</B>' )  
  
  DELETE FROM @tempResult  
            WHERE  rowid IN(SELECT SymbolRowId  
                            FROM   @SymbolRow)  
  
            --                
            UPDATE @tempResult  
            SET    result = ''  
            WHERE  result LIKE '%#%'  
  
            --Order by RowID  
            SELECT DISTINCT Rowid,  
                            Name,  
                            result,  
                            units,  
                            description,  
                            referencerange,  
                           ISNULL(investigationid,0) investigationid,  
                            methodname,  
                            notes,  
                            samplename,  
                            IsAbnormal,  
                            medicalremarks,  
                            refrangesuffixtest,  
                            --deptid,  
                            GrpID,  
                            isnonreportable,  
                            approvedby,  
                            approvername,  
                            approverqualification,  
                            rootgroupid,  
                            parentgrpid,  
                            MLGPrintSeparately,  
                            MLGPageNumber,  
                            parentprintseparately,  
                            ParentPageNumber,  
                            childprintseparately,  
                            childpagenumber,  
                            authorizedby,  
                            authorizername,  
                            authorizerqualification,  
                            patientvisiid,  
                            packagename,  
                            applicationurl,  
                            isrejected,  
                            iswithheld,  
                            recheckretest,  
                            convreferencerange,  
                            convvalue,  
                            convuomcode,  
                            codename,  
                            SubGroupInterpretation,  
                            printablerange,  
                            IsShowName,  
                            ReportNameAlign,  
                            IsBelowHeaderInReport IsBelowHeaderInReport,  
                            IsSampleName,  
                            IsShowInterpretationOnlyParent,  
                            OutputGroupingCode,  
                            OutputInvestigationCode,  
                            AccessionNo,  
                            ReferredAccessionNo,  
                            Isnull(u.IsUnitsColumn, 1)    AS IsUnitsColumn,  
                            Isnull(r.IsReferenceRange, 1) AS IsReferenceRange--,  
            --Row_number()  
            --              OVER(  
            --                PARTITION BY ParentPageNumber  
            --                ORDER BY rowid)           FirstHeaderRow  
            INTO   #tempResultSecond  
            FROM   @tempResult t  
                   LEFT JOIN @IsUnitsVisible u  
                          ON accessionno = unitsId  
                   LEFT JOIN @IsReferenceRange r  
                          ON accessionno = ReferenceRangeId  
            --Order by RowID                                                                                              
            ;  
  
            WITH CTE AS (SELECT Rowid,  
                                Name,  
                                result,  
                                units,  
                                description,  
                                referencerange,  
                                investigationid,  
                                methodname,  
                                notes,  
                                samplename,  
                                IsAbnormal,  
                                medicalremarks,  
                                refrangesuffixtest,  
                                --deptid,  
                                GrpID,  
                                isnonreportable,  
                                approvedby,  
                                approvername,  
                                approverqualification,  
                                rootgroupid,  
                                parentgrpid,  
                                MLGPrintSeparately,  
                                MLGPageNumber,  
                                parentprintseparately,  
                                ParentPageNumber,  
                                childprintseparately,  
                                childpagenumber,  
                                authorizedby,  
                                authorizername,  
                                authorizerqualification,  
                                patientvisiid,  
                                packagename,  
                                applicationurl,  
                                isrejected,  
                                iswithheld,  
                                RecheckRetest,  
                                convreferencerange,  
                                convvalue,  
                                convuomcode,  
                                codename,  
                                SubGroupInterpretation,  
                                printablerange,  
                                IsShowName,  
                                ReportNameAlign,  
                                IsBelowHeaderInReport,  
                                IsSampleName,  
                                IsShowInterpretationOnlyParent,  
                                OutputGroupingCode,  
                                OutputInvestigationCode,  
                                AccessionNo,  
                                ReferredAccessionNo,  
                                IsUnitsColumn,  
                                IsReferenceRange,  
                                Lag(IsUnitsColumn, 1)  
                                  OVER(  
                                    PARTITION BY MLGPageNumber, ParentPageNumber, ChildPageNumber  
                                    ORDER BY rowid, CASE WHEN InvestigationID IS NULL THEN 'a' ELSE 'b' END, CASE WHEN Isnull(ReferredAccessionNo, 0) = 0 THEN 0 ELSE 1 END) AS bIsUnitsColumn,  
                                Lag(IsReferenceRange, 1)  
                                  OVER(  
                                    PARTITION BY MLGPageNumber, ParentPageNumber, ChildPageNumber  
                                    ORDER BY rowid, CASE WHEN InvestigationID IS NULL THEN 'a' ELSE 'b' END, CASE WHEN Isnull(ReferredAccessionNo, 0) = 0 THEN 0 ELSE 1 END) AS bIsReferenceRange  
                         FROM   #tempResultSecond)  
            SELECT Rowid,  
                   ISNUll(Name,'') AS Name,  
                 Isnull(result, '')                  AS Result,  
                  Isnull(units, '')   units,  
                   description,  
                   referencerange,  
                   Isnull(investigationid, 0)   investigationid ,  
                   Isnull(methodname,'') methodname,  
                   notes,  
                   samplename,  
                   IsAbnormal,  
                   medicalremarks,  
                   refrangesuffixtest,  
                   GrpID,  
                   isnonreportable,  
                   approvedby,  
                   approvername,  
                   approverqualification,  
                   rootgroupid,  
                   parentgrpid,  
                   MLGPrintSeparately,  
                   MLGPageNumber,  
                   parentprintseparately,  
                   ParentPageNumber,  
                   childprintseparately,  
                   childpagenumber,  
                   authorizedby,  
                   authorizername,  
                   authorizerqualification,  
                   patientvisiid,  
                 packagename,  
                   applicationurl,  
                   isrejected,  
                   iswithheld,  
                   recheckretest,  
                   convreferencerange,  
                   convvalue,  
                   convuomcode,  
                   codename,  
                   SubGroupInterpretation,  
                   printablerange AS patternID,  
                   IsShowName,  
                   ReportNameAlign,  
                IsBelowHeaderInReport  IsBelowHeaderInReport,  
                   IsSampleName,  
                   IsShowInterpretationOnlyParent,  
                   OutputGroupingCode,  
                   OutputInvestigationCode,  
                   AccessionNo,  
                   ReferredAccessionno,  
                   IsUnitsColumn,  
                   IsReferenceRange,  
                   CASE  
                     WHEN bIsUnitsColumn IS NULL  
                          AND bIsReferenceRange IS NULL  
                          AND IsBelowHeaderInReport = 1 THEN 0  
                     WHEN IsUnitsColumn = 1  
                          AND IsReferenceRange = 1  
                          AND bIsUnitsColumn = 1  
                          AND bIsReferenceRange = 1  
                          AND IsBelowHeaderInReport = 1 THEN 0  
                     WHEN IsUnitsColumn = 0  
                          AND IsReferenceRange = 0  
                          AND bIsUnitsColumn = 0  
                          AND bIsReferenceRange = 0  
                          AND IsBelowHeaderInReport = 1 THEN 0  
                     WHEN IsUnitsColumn = 0  
                          AND IsReferenceRange = 0  
                          AND bIsUnitsColumn = 0  
                          AND bIsReferenceRange = 0 THEN 0  
                     WHEN IsUnitsColumn = 1  
                          AND IsReferenceRange = 1  
                          AND bIsUnitsColumn = 1  
                          AND bIsReferenceRange = 1 THEN 0  
                     WHEN IsUnitsColumn = 0  
                          AND IsReferenceRange = 1  
                          AND bIsUnitsColumn = 0  
                          AND bIsReferenceRange = 1 THEN 0  
                     WHEN IsUnitsColumn = 1  
                          AND IsReferenceRange = 0  
                          AND bIsUnitsColumn = 1  
                          AND bIsReferenceRange = 0 THEN 0  
                     ELSE 1  
                   END            AS ForHeaderRow  
            FROM   CTE  
            ORDER  BY RowID,  
                      CASE  
                        WHEN InvestigationID IS NULL THEN 'a'  
                        ELSE 'b'  
                      END,  
                      CASE  
                        WHEN Isnull(ReferredAccessionNo, 0) = 0 THEN 0  
                        ELSE 1  
                      END  
        END  
  
      DROP TABLE #ReportFormatGroupOrgMapping  
  
      SET NOCOUNT OFF  
  END  
  
  