SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[pGetDeptBatchWiseInvestigationResultsCaptureFormat_APP] @pVisitIDs [nvarchar] (max)                                                              
,@OrgID [INT]                                                              
,@BarcodeNumber [nvarchar] (50)                                                              
,@RoleID [BIGINT]                                                              
,@pDeptID [BIGINT]                                                              
,@pTestID [BIGINT]                                                              
,@pTestType [nvarchar] (25)                                                              
,@LoginDetail [dbo].[LOGINDETAIL] READONLY                                                              
,@IsTrustedDetails [nvarchar] (3)                                                              
,@WorkListID [BIGINT]                                                              
,@DeviceID BIGINT                                                              
,@pIsAbnormal nchar(1)                                                              
,@pHeaderID BIGINT                                                              
,@pProtocalID BIGINT                                                              
,@pActionName NVARCHAR(50)                                                              
,@pIsMaster NCHAR(1)                                                              
,@pRecordCount INT                                                              
,@pvisittype varchar(50)                                                          
,@pLocation varchar(100)                                                  
,@pQcCheck varchar(50)                                             
,@pPatientId varchar(100)    
,@ColleLocationID  Nvarchar(100)     
,@pFDate datetime    
,@pTDate datetime                                      
,@Status NVARCHAR(100)                                  
,@ContextInfo [UDT_CONTEXT] READONLY                                                              
--With recompile                                                                                                                                                    
AS                                                              
BEGIN                                                              
SET NOCOUNT ON                                                              
DECLARE @SearchStartDate DATETIME                                                              
DECLARE @SearchEndDate DATETIME                                                              
SELECT @SearchStartDate = dbo.Fn_getserverdate(@ContextInfo) - 30                                                              
SELECT @SearchEndDate = dbo.Fn_getserverdate(@ContextInfo)                                                              
DECLARE @OrgAddressID BIGINT       
IF @Status='-1'    
  SET @Status=NULL    
    
         
    
if(@pVisitIDs='0' and @BarcodeNumber<>'')    
select  @pVisitIDs=PV.Visitnumber from Patientvisit PV     
inner join Patientinvsample PIS on PIS.Patientvisitid=PV.Patientvisitid and PIS.Orgid=PV.Orgid    
where PIS.barcodenumber= @BarcodeNumber and PIS.Orgid=@Orgid    
    
                                                
IF ((IsNull((SELECT AdditionalInfo  FROM   @ContextInfo), '')) != '')    
BEGIN    
SELECT  @OrgAddressID=AdditionalInfo  FROM   @ContextInfo    
END    
ELSE    
BEGIN    
    
SELECT @OrgAddressID = OrgAddressID    
FROM @ContextInfo    
END                                                            
Declare @CLocation varchar(50)         
    
IF ((IsNull((SELECT AdditionalInfo  FROM   @ContextInfo), '')) != '')    
BEGIN    
SELECT  @CLocation=AdditionalInfo  FROM   @ContextInfo    
END    
ELSE    
BEGIN    
Select @CLocation= Locationid from @ContextInfo       
END     
IF (@ColleLocationID='-1' OR @ColleLocationID='0')    
BEGIN    
 SET @ColleLocationID=NULL    
END    
                                                     
         
Create table #temppatientvisitid    
(    
Patientvisitid bigint,    
Status nvarchar(200),    
InvestigationId bigint,    
statustype  nvarchar(200)    
)    
    
Create Table #FinalList(    
RowID int identity(1,1) not null,    
valueseq  TINYINT,    
PatientID bigint,    
PatientVisitID bigint,    
AccessionNumber bigint,    
InvestigationID bigint,    
InvestigationName [nvarchar](250),    
GroupID int,    
GroupName [nvarchar](250),    
PackageID int,    
PackageName [nvarchar](250),    
DeptID int,    
DeptName [nvarchar](250),        
UOMID INT,    
UOMCode NVARCHAR(255),    
ReferenceRange [nvarchar](max) ,    
PatternID BIGINT,    
PatternName NVARCHAR(200),    
GroupComment [nvarchar](255),    
ValidationText NVARCHAR(MAX),    
IsAbnormal NVARCHAR(50),    
InvValidationText NVARCHAR(MAX),    
GroupMedicalRemarks [nvarchar](255),    
ResultValueType NVARCHAR(200),    
DecimalPlaces NVARCHAR(20),    
UID [nvarchar](255),    
Name NVARCHAR(255),    
PatientNumber NVARCHAR(30),    
Age NVARCHAR(20),    
Sex NVARCHAR(10),    
AutoApproveLoginID BIGINT,    
RefSuffixText NCHAR(1),    
Sno BIGINT,    
VisitNumber NVARCHAR(256),    
LabNo NVARCHAR(30),    
TestStatus NVARCHAR(5),    
PrintableRange NVARCHAR(MAX),    
IsNonEditable bit,    
DeptSeq int,    
FirstLvlSeq int,    
GrpContentSeq INT,    
InnerContentSeq INT,    
L2ContentSeq INT,    
ClientID BIGINT,    
Status NVARCHAR(100),    
IsAutoAuthorize  NVARCHAR(1),    
IsAutoValidate NVARCHAR(1),    
IsAllowNull NVARCHAR(1),    
CONV_UOMID INT,    
CONV_UOMCode NVARCHAR(50),    
CONV_Factor DECIMAL(18, 9),    
CONVFactorDecimalPt INT,    
ConvReferenceRange NVARCHAR(max),    
ErrorDescription NVARCHAR(255),    
ErrorCode NVARCHAR(5),    
Reason [nvarchar](250),    
CollectedDateTime Datetime    
)    
                                                  
CREATE TABLE #tblPatientInvestigation (                                                              
[PatientInvID] [BIGINT] PRIMARY KEY                                                              
,[PatientVisitID] [BIGINT]                                                              
,[InvestigationID] [BIGINT]                                                              
,[InvestigationName] [nvarchar](250)              
,[CreatedBy] [BIGINT]                                                              
,[CreatedAt] [DATETIME]                                                              
,[ModifiedBy] [BIGINT]                                                              
,[ModifiedAt] [DATETIME]                                                              
,[InvestigationMethodID] [BIGINT]                                                              
,[InvestigationSampleContainerID] [INT]                                                              
,[SampleID] [INT]                                                              
,[InvestigationSiteID] [INT]                                                     
,[IsCompleted] [nchar](1)                                
,[CollectedDateTime] [DATETIME]                                                              
,[Status] [nvarchar](100)                                                              
,[ComplaintId] [INT]                                                    
,[GroupID] [INT]                                                              
,[GroupName] [nvarchar](250)                                                              
,[Reason] [nvarchar](250)                                         
,[ReportStatus] [nvarchar](255)                                                              
,[ReferenceRange] [nvarchar](max)                                                              
,[MethodName] [nvarchar](255)                              
,[IPInvSampleCollectionMasterID] [BIGINT]                                                              
,[OrgID] [INT]                                           
,[WorklistDeletedStatus] [nvarchar](50)                              
,[PerformingPhysicainName] [nvarchar](500)                                                              
,[KitID] [BIGINT]                                                              
,[KitName] [nvarchar](255)                                                           
,[InstrumentID] [BIGINT]                                        
,[InstrumentName] [nvarchar](255)                                                  
,[Interpretation] [nvarchar](max)                                                              
,[PrincipleID] [BIGINT]                                                              
,[PrincipleName] [nvarchar](255)                                                              
,[QCData] [nvarchar](max)                                                              
,[PackageID] [INT]                                                     
,[PackageName] [nvarchar](255)                                                              
,[ApprovedBy] [BIGINT]                                                              
,[OrderedAt] [DATETIME]                                                              
,[UID] [nvarchar](255)                                                              
,[GroupComment] [nvarchar](255)                                                              
,[ApprovedAt] [DATETIME]                                                             
,[AccessionNumber] [BIGINT]                                                              
,UOMCode NVARCHAR(255)                                                              
,UOMID INT                                                              
,IsAbnormal NVARCHAR(50)                                                             
,[GroupMedicalRemarks] [nvarchar](255)                                                              
,LabNo NVARCHAR(30)                                                              
,IsAbnormalResult NCHAR(1)                                                              
,TestStatus NVARCHAR(5)                                                              
,BarcodeNumber NVARCHAR(250)                                                              
,PrintableRange NVARCHAR(max)                                                              
,Valueseq TINYINT                                   
,Flag BIT                                
,IsAutoAuthorize NVARCHAR(1)                                                              
,IsAutoValidate NVARCHAR(1)                                                              
,IsAllowNull NVARCHAR(1)                                                              
,CONV_UOMID INT                                  
,CONV_UOMCode NVARCHAR(50)                                                              
,CONV_Factor DECIMAL(18, 9)                             
,CONVFactorDecimalPt INT                                                              
,ConvReferenceRange NVARCHAR(max)                                                              
,ErrorDescription NVARCHAR(255)                                                              
,ErrorCode NVARCHAR(5)                                                              
)                                   
CREATE TABLE #tblDependentInvestigation (                                                              
[PatientInvID] [BIGINT]                               
,[PatientVisitID] [BIGINT]                                                             
,[InvestigationID] [BIGINT]                                                              
,[InvestigationName] [nvarchar](250)                                                              
,[CreatedBy] [BIGINT]                                                              
,[CreatedAt] [DATETIME]                                                              
,[ModifiedBy] [BIGINT]                                                              
,[ModifiedAt] [DATETIME]                                                              
,[InvestigationMethodID] [BIGINT]                                                              
,[InvestigationSampleContainerID] [INT]                                                              
,[SampleID] [INT]                                                              
,[InvestigationSiteID] [INT]                                                              
,[IsCompleted] [nchar](1)                                               
,[CollectedDateTime] [DATETIME]                                                              
,[Status] [nvarchar](100)                                                              
,[ComplaintId] [INT]                                       
,[GroupID] [INT]                                                              
,[GroupName] [nvarchar](250)                                                              
,[Reason] [nvarchar](250)                                           
,[ReportStatus] [nvarchar](255)                                                              
,[ReferenceRange] [nvarchar](max)                                                              
,[MethodName] [nvarchar](255)                           
,[IPInvSampleCollectionMasterID] [BIGINT]                                                              
,[OrgID] [INT]                                                              
,[WorklistDeletedStatus] [nvarchar](50)                                                              
,[PerformingPhysicainName] [nvarchar](500)                                                           
,[KitID] [BIGINT]                                                              
,[KitName] [nvarchar](255)                                                              
,[InstrumentID] [BIGINT]                                                              
,[InstrumentName] [nvarchar](255)                                          
,[Interpretation] [nvarchar](max)                                                              
,[PrincipleID] [BIGINT]                                                              
,[PrincipleName] [nvarchar](255)                                                              
,[QCData] [nvarchar](max)                                                              
,[PackageID] [INT]                                                              
,[PackageName] [nvarchar](255)                     
,[ApprovedBy] [BIGINT]                   
,[OrderedAt] [DATETIME]                                                              
,[UID] [nvarchar](255)                                                              
,[GroupComment] [nvarchar](255)                                     
,[ApprovedAt] [DATETIME]                                                              
,[AccessionNumber] [BIGINT]                                                              
,UOMCode NVARCHAR(255)                                 
,UOMID INT                                                              
,IsAbnormal NVARCHAR(50)                                                         
,[GroupMedicalRemarks] [nvarchar](255)                                                              
,LabNo NVARCHAR(30)                                                     
,IsAbnormalResult NCHAR(1)                                                              
,TestStatus NVARCHAR(5)                                                              
,BarcodeNumber NVARCHAR(250)                              
,PrintableRange NVARCHAR(max)                                                              
,Valueseq TINYINT                                                              
,Flag BIT                                                              
,DepInvID [BIGINT]                                                              
,IsAutoAuthorize NVARCHAR(1)                                                              
,IsAutoValidate NVARCHAR(1)                                                              
,IsAllowNull NVARCHAR(1)                                            
,CONV_UOMID INT               
,CONV_UOMCode NVARCHAR(50)                                                              
,CONV_Factor DECIMAL(18, 9)                                                              
,CONVFactorDecimalPt INT                                                              
,ConvReferenceRange NVARCHAR(max)                        
)                                                              
DECLARE @tblAffectedVisits TABLE (                       
VisitID BIGINT       
,PatientID BIGINT                                                              
,OrgID BIGINT      
,VisitNumber NVARCHAR(256)                                                              
)                               
DECLARE @tblQcCheck table                         
(                        
InvestigationId bigint,                        
QcStatus varchar(10)                        
)                                                       
DECLARE @tblAffectedPatients TABLE (                                                              
PatientID BIGINT                                            
,VisitID BIGINT                                                              
,PatientName NVARCHAR(255)                                                              
,PatientNumber NVARCHAR(30)                                                              
,Age NVARCHAR(20)                                                              
,Sex NVARCHAR(10)                                                              
,OrgID BIGINT                                                           
,VisitNumber NVARCHAR(256)                                                              
)      
declare @Finaltable table    
(    
valueseq tinyint                                                             
,PatientID BIGINT                                                              
,PatientVisitID BIGINT                                                              
,AccessionNumber BIGINT                                                              
,InvestigationID BIGINT                                                              
,InvestigationName [nvarchar](Max)                                                              
,GroupID [INT]                                 
,GroupName [nvarchar](250)                                      
,[PackageID] [INT]                               
,[PackageName] [nvarchar](255)                                                              
,DeptID INT                                                              
,DeptName [nvarchar](250)                                                             
,UOMID INT                ,UOMCode NVARCHAR(255)                                                              
,ReferenceRange [nvarchar](max)                                                              
,PatternID BIGINT                 
,PatternName NVARCHAR(200)                                    
,GroupComment [nvarchar](255)                                               
,Validationtext NVARCHAR(MAX)                                         
,IsAbnormal NVARCHAR(50)                                                              
,InvValidationText NVARCHAR(MAX)                                                         
,GroupMedicalRemarks [nvarchar](255)                                                              
,ResultValueType NVARCHAR(200)                                                       
,DecimalPlaces NVARCHAR(20)                                                              
,[UID] [nvarchar](255)                                           
,Name NVARCHAR(255)                                                              
,PatientNumber NVARCHAR(30)                                                              
,Age NVARCHAR(20)                                                              
,Sex NVARCHAR(20)                                                              
,AutoApproveLoginID BIGINT                                                              
,RefSuffixText NCHAR(1)                                                              
,Sno BIGINT                                                              
,VisitNumber NVARCHAR(256)                                                              
,LabNo NVARCHAR(30)        
,TestStatus  NVARCHAR(5)                                                             
,PrintableRange  NVARCHAR(MAX)                                                                  
,IsNonEditable  bit               
,DeptSeq  int                                                            
,FirstLvlSeq  int                                                    
,GrpContentSeq INT                                                  
,InnerContentSeq INT                                                              
,L2ContentSeq INT                                                              
,ClientID BIGINT                                     
,[Status] NVARCHAR(100)                                                              
,IsAutoAuthorize NVARCHAR(1)                                                              
,IsAutoValidate NVARCHAR(1)                                                              
,IsAllowNull NVARCHAR(1)                                                              
,CONV_UOMID INT                                                        
,CONV_UOMCode NVARCHAR(50)                                                              
,CONV_Factor DECIMAL(18, 9)                                                              
,CONVFactorDecimalPt INT                                                              
,ConvReferenceRange NVARCHAR(max)                                                              
,ErrorDescription NVARCHAR(255)                                                              
,ErrorCode NVARCHAR(5)                                                              
,[Reason] [nvarchar](250)    
,QCData varchar(5)    
,DeviceActualValue   NVARCHAR(255)                                                                  
)                                                                                  
CREATE TABLE #OrderedPatientInv (                                   
[PatientVisitID] [BIGINT]                                                     
,[InvestigationID] [BIGINT]                                          
,[InvestigationName] [nvarchar](250)                                         
,[InvestigationMethodID] [BIGINT]                                                              
,[InvestigationSampleContainerID] [INT]                                                              
,[SampleID] [INT]                                                              
,[GroupID] BIGINT                                                              
,[GroupName] [nvarchar](250)                                                         
,[Reason] [nvarchar](250)                     
,[ReferenceRange] [nvarchar](max)                                                              
,[MethodName] [nvarchar](255)                                                         
,[OrgID] [INT]                                                              
,[WorklistDeletedStatus] [nvarchar](50)                                                              
,[PerformingPhysicainName] [nvarchar](500)                                                              
,[KitID] [BIGINT]                                                              
,[KitName] [nvarchar](255)                                                              
,[InstrumentID] [BIGINT]               
,[InstrumentName] [nvarchar](255)                                                              
,[Interpretation] [nvarchar](max)                                                              
,[PrincipleID] [BIGINT]                                                              
,[PrincipleName] [nvarchar](255)            
,[QCData] [nvarchar](max)                                                              
,[PackageID] [INT]          
,[PackageName] [nvarchar](255)                                                              
,[ApprovedBy] [BIGINT]                                                              
,[PatientInvID] [BIGINT]                                    
,[UID] [nvarchar](255)                                                              
,[GroupComment] [nvarchar](255)                                                              
,[ApprovedAt] [DATETIME]                                                              
,[AccessionNumber] [BIGINT]                                                              
,[RefAccessionNumber] [BIGINT]                        
,[GroupMedicalRemarks] [nvarchar](255)                                         
,PrintableRange NVARCHAR(max)                                                              
)                                         
CREATE TABLE #tblPatientInvestigation_Mirror (                                                              
PatientVisitID BIGINT                                                              
,InvestigationID BIGINT                                                             
,InvestigationName NVARCHAR(250)                                                              
,CreatedBy BIGINT                                                              
,CreatedAt DATETIME                                                              
,ModifiedBy BIGINT                                                              
,ModifiedAt DATETIME                                           
,InvestigationMethodID BIGINT                                                              
,InvestigationSampleContainerID INT                                                              
,SampleID INT                                                              
,InvestigationSiteID INT                                                              
,IsCompleted NCHAR(1)                                                              
,CollectedDateTime DATETIME                                                              
,Status NVARCHAR(100)                                                              
,ComplaintId INT                                                 
,GroupID INT                                                             
,GroupName NVARCHAR(250)                                                      
,Reason NVARCHAR(250)                           
,ReportStatus NVARCHAR(255)                                
,ReferenceRange NVARCHAR(MAx)                                                              
,MethodName NVARCHAR(255)                                                              
,IPInvSampleCollectionMasterID BIGINT                                                   
,OrgID INT                                                              
,WorklistDeletedStatus NVARCHAR(50)                                                          
,PerformingPhysicainName NVARCHAR(500)                                          
,KitID BIGINT                                                              
,KitName NVARCHAR(255)                                                              
,InstrumentID BIGINT                                                              
,InstrumentName NVARCHAR(255)                                               
,Interpretation NVARCHAR(MAx)                                                              
,PrincipleID BIGINT                                                              
,PrincipleName NVARCHAR(255)                                                              
,QCData NVARCHAR(Max)                                                              
,PackageID INT                                                              
,PackageName NVARCHAR(255)                                                              
,ApprovedBy BIGINT                                                              
,PatientInvID BIGINT PRIMARY KEY                                      ,OrderedAt DATETIME                               
,UID NVARCHAR(255)                                                              
,GroupComment NVARCHAR(255)                                              
,ApprovedAt DATETIME                                                              
,AccessionNumber BIGINT                                                              
,IsAbnormal NVARCHAR(50)                                                              
,InvStatusReasonID INT                                                              
,Test NVARCHAR(15)                                                              
,ValidatedBy BIGINT                    
,ValidatedAt DATETIME                                                              
,RemarksID BIGINT              
,MedicalRemarks NVARCHAR(MAX)                                                              
,GroupMedicalRemarks NVARCHAR(255)                                                              
,RefSuffixText NVARCHAR(100)                                                              
,Migrated_Patient_Number NVARCHAR(510)                       
,Migrated_Request_Number NVARCHAR(510)                                                              
,Migrated_Visit_Number NVARCHAR(510)                                             
,Migrated_TestCode NVARCHAR(12)                                                              
,Migrated_TestType NVARCHAR(8)                                                              
,WorkListID BIGINT                                                              
,AuthorizedBy BIGINT                                                              
,DeviceID NVARCHAR(50)                                        
,WorklistType NVARCHAR(100)                                                             
,WorklistTypeID BIGINT                                                              
,PickedBy BIGINT                                                              
,statustype NVARCHAR(100)                                                              
,ConvReferenceRange NVARCHAR(Max)                                                              
,RefAccessionNo BIGINT        
,ManualAbnormal NVARCHAR(1)                                                              
,IsAutoAuthorize NVARCHAR(1)                       
,IsSentBarcode NCHAR(1)      
,PrintableRange NVARCHAR(Max)       
,WorklistCreatedby NVARCHAR(250)                                                              
,WorklistCreatedat DATETIME                                                 
,IsAutoValidate NVARCHAR(1)                                                              
,IsAllowNull NVARCHAR(1)                                      
)                                            
DECLARE @tblResultSelectUID TABLE (UID NVARCHAR(255))                                                              
DECLARE @pTempDetp AS TABLE (DeptID INT)                                                              
DECLARE @pTempDetpForTrustedOrg AS TABLE (DeptID BIGINT)                                                              
CREATE TABLE #PInvestigationList (ID BIGINT PRIMARY KEY)                                                              
DECLARE @tblAccessionNos TABLE (AccessionNo BIGINT)                                                              
DECLARE @TempInvestigationStatus TABLE (Status NVARCHAR(100))                                                              
DECLARE @TempDeptInvStatus TABLE (Status NVARCHAR(100))                                                              
DECLARE @sDelimiter NVARCHAR(2)                                                              
DECLARE @tblVisitID TABLE (VisitID BIGINT)                                                              
DECLARE @workListType NVARCHAR(100)                                                              
DECLARE @invID BIGINT                                                              
DECLARE @groupID INT                                                              
DECLARE @packageID INT                                                              
DECLARE @protocalID INT                                                              
CREATE TABLE #tblBatchVisits (VisitID BIGINT PRIMARY KEY)                                                              
DECLARE @tblPatternID TABLE (PatternID INT PRIMARY KEY)                                                              
DECLARE @SearchConfig NVARCHAR(10)                                                              
SELECT @SearchConfig = Isnull(ConfigValue, 0)                                                              
FROM   ConfigKeyMaster CKM (NOLOCK)                                                              
INNER JOIN ConfigOrgMaster COM (NOLOCK)                                                              
ON COM.ConfigKeyID = CKM.ConfigKeyID                                 
WHERE  COM.OrgID = @OrgID                                                              
AND CKM.ConfigKey = 'ExternalVisitSearch'                                                              
INSERT INTO @tblPatternID                                                              
SELECT 1                                                              
UNION ALL                                                              
SELECT 2                                                              
UNION ALL                                                            
SELECT 3                                                   
UNION ALL                                                              
SELECT 46                                                              
UNION ALL                                                              
--SELECT 45                                                              
--UNION ALL                                                              
SELECT 49                                           
SET @sDelimiter = ','      
    
if(@pPatientId='')    
set @pPatientId =null    
Create table #ResultFlagtable       
(    
isabnormal Char(1)    
)    
                                                          
IF @pIsAbnormal in ( '0' ,'3')                            
BEGIN      
insert into #ResultFlagtable    
select '' union select 'N' union select 'L'union Select 'A'                                                          
END        
IF @pIsAbnormal = '1'                                                           
BEGIN      
insert into #ResultFlagtable    
select '' union select 'N'                                                         
END        
        
IF @pIsAbnormal = '2'                                               
BEGIN      
insert into #ResultFlagtable    
select 'L'union Select 'A'                                                          
END        
        
 Create table #QCChecktable       
(    
QCvalue int    
)    
                                                          
IF @pQcCheck = '-1'                                                              
BEGIN      
insert into #QCChecktable    
select 0 union select 1                                                          
END        
IF @pQcCheck = '1'                                                              
BEGIN      
insert into #QCChecktable    
select 1                                                   
END        
IF @pQcCheck = '0'                                                              
BEGIN      
insert into #QCChecktable    
select 0                                                        
END        
                                                          
IF @DeviceID = 0                                  
BEGIN                                                              
SET @DeviceID = NULL                                                              
END                                                              
IF @WorkListID = 0                                                              
BEGIN         
SET @WorkListID = NULL                                                      
END                 IF @pTestType = 'INV'                                                              
BEGIN                                                              
SET @invID = @pTestID                                                              
SET @groupID = NULL                                                              
SET @packageID = NULL                                                              
END                                                              
ELSE IF @pTestType = 'GRP'                      
BEGIN                                                              
SET @invID = NULL                                                              
SET @groupID = CONVERT(INT, @pTestID)                                                              
SET @packageID = NULL                                                              
END      
ELSE IF @pTestType = 'PKG'                                                              
BEGIN                                 
SET @invID = NULL              
SET @groupID = NULL                                                              
SET @packageID = CONVERT(INT, @pTestID)                                               
END                                                              
ELSE                                                              
BEGIN                                                              
SET @pTestType = NULL                                                              
SET @invID = NULL                                                              
SET @groupID = NULL                                                              
SET @packageID = NULL                                                              
END                           
IF @pDeptID = 0                                                              
BEGIN                                                              
SET @pDeptID = NULL                                                              
END                                                              
IF @pHeaderID = 0                                         
BEGIN                  
SET @pHeaderID = NULL                                                              
END                                                              
IF @pProtocalID = 0                                                    
BEGIN                                          
                                            
SET @protocalID = NULL                    
END                                                              
/* Visit Type */                                                            
                                   
                                                          
                                                          
 --     IF( @pvisittype in(-1) )                                                            
                                                            
 --       BEGIN                                                            
                     
 ---- set @pvisittype='0,-1'                                                  
                                                          
 --      set    @pvisittype='0'                                                   
                                                          
 --  --@where = @where + ' AND Pv.LabVisitType  ='                                                            
                                                            
 --                 --       + CONVERT(nvarchar, @pvisittype)                                                            
                                                            
 --   END                                                            
--IF @pvisittype = 0                                             
--BEGIN                                                              
--SET @pvisittype = NULL                                                              
--END                                                       
--if(@pQcCheck in(-1))           
--begin                                            
--set @pQcCheck='0,1'                                            
--end                                                   
ELSE                                                              
BEGIN                                                              
SET @protocalID = CONVERT(INT, @pProtocalID)                                                              
END                                                              
DECLARE @EnterResultTaskActionID INT                                                              
SELECT @EnterResultTaskActionID = TaskActionID                                                             
FROM TaskActions                                                             
WHERE ActionName = @pActionName                                                              
INSERT INTO @TempInvestigationStatus (Status)                                                              
SELECT *                                                
FROM dbo.Fn_getmappedstatus(@EnterResultTaskActionID, 'InvestigationStatus', @OrgID)                                                              
DELETE              
FROM @TempInvestigationStatus                                                              
WHERE Status = 'With-hold Completion'          
    
DELETE              
FROM @TempInvestigationStatus                                                              
WHERE Status = 'Approve'                                                        
/*Added By Arivalagan.K For BetWeen Condition to getting the visits details*/                                                              
DECLARE @VisitNumber1 NVARCHAR(20)                                                              
DECLARE @VisitNumber2 NVARCHAR(20)      
if(@pVisitIDs !='0' )    
Begin    
                                        
 SET @VisitNumber1 = (                                                              
 SELECT TOP 1 *                                                      
 FROM dbo.Fnsplit(@pVisitIDs, @sDelimiter)                                        
 )                 
 SET @VisitNumber2 = (                                                              
 SELECT *                                 
 FROM dbo.Fnsplit(@pVisitIDs, @sDelimiter)                                                              
 WHERE item NOT IN (@VisitNumber1)         
 )       
End      
    
if(@pVisitIDs='0')    
set @VisitNumber1 =null                                               
IF( Isnull(@VisitNumber1, '') <> '' )                                                              
BEGIN                                                              
IF( @SearchConfig = 'Y' )                                               
BEGIN                        
SELECT @VisitNumber1 = VisitNumber                                                              
FROM   PatientVisit WITH (NOLOCK)                
WHERE  ExternalVisitID = @VisitNumber1                                                              
END                                                              
END                                                              
IF( Isnull(@VisitNumber2, '') <> '' )                                                              
BEGIN                                                              
IF( @SearchConfig = 'Y' )                                                              
BEGIN                                               
SELECT @VisitNumber2 = VisitNumber                                                              
FROM   PatientVisit WITH (NOLOCK)                                                              
WHERE  ExternalVisitID = @VisitNumber2                                                              
END                                                              
END                                           
/*End By Arivalagan.K For BetWeen Condition to getting the visits details*/                                                       
IF (                                                           
@DeviceID IS NOT NULL                                                              
AND @pIsMaster <> 'Y'                                                         
)                                                              
BEGIN                                       
DELETE                                                              
FROM @TempInvestigationStatus                                                              
WHERE Status = 'SampleReceived'                                              
END                                                              
IF (@DeviceID IS NULL)                                                             
BEGIN                                                              
IF (                                                              
(                                                              
@pVisitIDs <> '0,0'                                                              
AND @pVisitIDs <> '0'     
)                             
OR @BarcodeNumber <> ''                                   
)                                                              
BEGIN               
IF (@BarcodeNumber <> '')                                                              
BEGIN                                                              
IF (                                                              
(                                               
@pVisitIDs <> '0,0'                                                              
AND @pVisitIDs <> '0'                                                              
)                                                              
AND @BarcodeNumber <> ''                                                              
)                                                              
BEGIN                                                              
/*Modified By Arivalagan.K For BetWeen Condition to getting the visits details*/                                       
if(@VisitNumber1 is not null AND @VisitNumber2 is not null)                                                              
BEGIN        
INSERT INTO @tblVisitID                                                              
SELECT DISTINCT PatientVisitID                  
FROM PatientVisit PV WITH (NOLOCK)                                                              
--  CROSS APPLY dbo.Fnsplit(@pVisitIDs, @sDelimiter) tmp                           
--WHERE  pv.VisitNumber = tmp.item                                                                    
WHERE pv.VisitNumber BETWEEN @VisitNumber1 AND @VisitNumber2   and PV.CreatedAt between @pFDate and @pTDate                                                                
END                 
ELSE                                                              
BEGIN                                                               
INSERT INTO @tblVisitID                                                              
SELECT DISTINCT PatientVisitID                                                              
FROM   PatientVisit PV WITH(NOLOCK)                                                           
--  CROSS APPLY dbo.Fnsplit(@pVisitIDs, @sDelimiter) tmp                                                                    
--WHERE  pv.VisitNumber = tmp.item                                                                    
WHERE  pv.VisitNumber=isnull(@VisitNumber1,PV.VisitNumber)     and PV.CreatedAt between @pFDate and @pTDate       
                                                           
END                                                              
/*Modified By Arivalagan.K For BetWeen Condition to getting the visits details*/                                                              
END      
ELSE                                                              
BEGIN                                                              
INSERT INTO @tblVisitID                                                  
SELECT PatientVisitID                                                              
FROM PatientInvSample PIS WITH (NOLOCK)                                                              
WHERE BarcodeNumber = @BarcodeNumber                                                              
AND OrgID = @OrgID   and PIS.CreatedAt between @pFDate and @pTDate                                                                      
END                                                              
END                                                              
ELSE                                                              
BEGIN                     
if(@VisitNumber1 is not null AND @VisitNumber2 is not null)                                                              
BEGIN                                                            
INSERT INTO @tblVisitID                                                         
SELECT DISTINCT PatientVisitID                                                              
FROM PatientVisit PV WITH (NOLOCK)                          
/*Modified By Arivalagan.K For BetWeen Condition to getting the visits details*/                                                          
--       CROSS APPLY dbo.Fnsplit(@pVisitIDs, @sDelimiter) tmp                                   
--WHERE  pv.VisitNumber = tmp.item                                                                    
WHERE pv.VisitNumber BETWEEN @VisitNumber1 AND @VisitNumber2    and PV.CreatedAt between @pFDate and @pTDate                                                                    
/*Modified By Arivalagan.K For BetWeen Condition to getting the visits details*/                                                              
END                                                              
ELSE                                                              
BEGIN                                                              
INSERT INTO @tblVisitID                                                              
SELECT DISTINCT PatientVisitID                                                              
FROM   PatientVisit PV WITH(NOLOCK)                                                              
/*Modified By Arivalagan.K For BetWeen Condition to getting the visits details*/                                              
--       CROSS APPLY dbo.Fnsplit(@pVisitIDs, @sDelimiter) tmp                                                                    
--WHERE  pv.VisitNumber = tmp.item                                                                    
WHERE pv.VisitNumber= isnull(@VisitNumber1,pv.VisitNumber)    and PV.CreatedAt between @pFDate and @pTDate                                                          
/*Modified By Arivalagan.K For BetWeen Condition to getting the visits details*/                
                                                
END                                                         
END            
                                                   
IF @pTestType IN ( 'GRP', 'PKG' )                                                                
BEGIN                                                              
IF (@WorkListID IS NULL)                                                              
BEGIN                                                              
INSERT INTO #tblBatchVisits (VisitID)                                                              
SELECT DISTINCT PatientVisitID                                                              
FROM PatientInvestigation P1 WITH (NOLOCK)                                               
INNER JOIN @tblVisitID TV ON TV.VisitID = p1.PatientVisitID                                                              
INNER JOIN @TempInvestigationStatus TMP ON TMP.Status = P1.Status                                                              
INNER JOIN PatternMapping PM WITH (NOLOCK) ON PM.InvestigationID = P1.InvestigationID and PM.Orgid=@OrgID                                                              
INNER JOIN @tblPatternID PM1 ON PM1.PatternID = PM.PatternID                                                              
INNER JOIN InvestigationOrgMapping IOM WITH (NOLOCK) ON IOM.InvestigationID = P1.InvestigationID                                                              
AND IOM.OrgID = @OrgID                                                              
INNER JOIN OrderedInvestigations OI WITH (NOLOCK) ON OI.AccessionNumber = P1.AccessionNumber                                                              
AND OI.OrgID = P1.OrgID                                                              
INNER JOIN InvOrgGroup IOG WITH (NOLOCK) ON IOG.AttGroupID = OI.ID                                                              
AND IOG.OrgID = @OrgID                                                              
--Parthi                                                            
--INNER join PatientVisit pv with (Nolock) on pv.PatientVisitId=p1.PatientVisitID and pv.LabVisitType in (@pvisittype)-- and   pv.OrgID=161                                                  
WHERE --COALESCE(WLM.WorklistId, 0) = COALESCE(@WorkListID, WLM.WorklistId, 0)                  
--P1.CreatedAT > @SearchStartDate                                                              
--AND                                                               
IOG.AttGroupID = COALESCE(@groupID, IOG.AttGroupID)           
AND OI.Status=ISNULL(@Status,OI.Status)                                                     
AND COALESCE(OI.PkgID, 0) = COALESCE(@packageID, OI.PkgID, 0)                                                              
AND Isnull(P1.statustype, '') NOT IN (                                                              
'RC'                                   
,'RR'                                                              
)                                                              
AND OI.Status NOT IN (                          
'Approve'                                                              
,'Cancel'                                                              
,'Rejected'                                                           
,'RejectClose'                                                              
,'ForceClose'             
)                                                              
AND P1.OrgID = @OrgID                                                              
AND COALESCE(IOG.ProtocalGroupID, '') = COALESCE(@protocalID, IOG.ProtocalGroupID, '')                                                              
AND COALESCE(IOM.HeaderID, '') = COALESCE(@pHeaderID, IOM.HeaderID, '')                                                              
AND COALESCE(IOM.DeptID, '') = COALESCE(@pDeptID, IOM.DeptID, '')                                                     
--Parthi                                                            
--and pv.LabVisitType in(@pvisittype)                                              
--and coalesce(pv.LabVisitType,'')=coalesce(@pvisittype,pv.LabVisitType)                                                            
--and @pLocation= @CLocation                                                          
AND IOM.OrgID = @OrgID                                                              
AND IOG.OrgID = @OrgID                                                              
OPTION (MAXDOP 1)                                                              
END                                                              
ELSE                                      BEGIN                                                              
INSERT INTO #tblBatchVisits (VisitID)                                                              
SELECT DISTINCT PatientVisitID                                                              
FROM PatientInvestigation P1 WITH (NOLOCK)                                                              
INNER JOIN @tblVisitID TV ON TV.VisitID = p1.PatientVisitID             
INNER JOIN WorklistDetail WLD WITH (NOLOCK) ON WLD.PatientInvId = P1.PatientInvID          
INNER JOIN WorklistMaster WLM WITH (NOLOCK) ON WLM.WMID = WLD.WMID                                                          
INNER JOIN @TempInvestigationStatus TMP ON TMP.Status = P1.Status                                                              
INNER JOIN PatternMapping PM WITH (NOLOCK) ON PM.InvestigationID = P1.InvestigationID and PM.Orgid=@OrgID                                                              
INNER JOIN @tblPatternID PM1 ON PM1.PatternID = PM.PatternID                                                              
INNER JOIN InvestigationOrgMapping IOM WITH (NOLOCK) ON IOM.InvestigationID = P1.InvestigationID                                                              
AND IOM.OrgID = @OrgID                                                              
INNER JOIN OrderedInvestigations OI WITH (NOLOCK) ON OI.AccessionNumber = P1.AccessionNumber                                  
AND OI.OrgID = P1.OrgID                                                              
INNER JOIN InvOrgGroup IOG WITH (NOLOCK) ON IOG.AttGroupID = OI.ID                                                              
AND IOG.OrgID = @OrgID          
--Parthi                            
--inner join PatientVisit pv with (Nolock) on pv.PatientVisitId=p1.PatientVisitID  and pv.LabVisitType in (@pvisittype)--and   pv.OrgID=161                                                            
WHERE                                       
--P1.CreatedAT > @SearchStartDate                                                              
--AND                                                              
WLM.WorklistId = @WorkListID                                                              
AND IOG.AttGroupID = COALESCE(@groupID, IOG.AttGroupID)      
AND OI.Status=ISNULL(@Status,OI.Status)                                                            
AND COALESCE(OI.PkgID, 0) = COALESCE(@packageID, OI.PkgID, 0)                               
AND Isnull(P1.statustype, '') NOT IN (                                                              
'RC'                                                     
,'RR'                                                              
)                 
AND OI.Status NOT IN (                                   
'Approve'                                                              
,'Cancel'                                                              
,'Rejected'        
,'RejectClose'                                                              
,'ForceClose'                                                              
)                                                              
AND P1.OrgID = @OrgID                                   
AND COALESCE(IOG.ProtocalGroupID, '') = COALESCE(@protocalID, IOG.ProtocalGroupID, '')                                                  
AND COALESCE(IOM.HeaderID, '') = COALESCE(@pHeaderID, IOM.HeaderID, '')                                      
AND COALESCE(IOM.DeptID, '') = COALESCE(@pDeptID, IOM.DeptID, '')                                                              
--Parthi                                                            
--and pv.LabVisitType in (@pvisittype)                                              
--and coalesce(pv.LabVisitType,'')=coalesce(@pvisittype,pv.LabVisitType)                                              
--and @pLocation= @CLocation                                              
AND IOM.OrgID = @OrgID                                                              
AND IOG.OrgID = @OrgID                                                              
OPTION (MAXDOP 1)                                                              
END                                                              
END             
ELSE                                                              
BEGIN                                                              
IF (@WorkListID IS NULL)                                            
BEGIN                                                             
INSERT INTO #tblBatchVisits (VisitID)                                                              
SELECT DISTINCT PatientVisitID                                                              
FROM PatientInvestigation P1 WITH (NOLOCK)                                                              
INNER JOIN @tblVisitID TV ON TV.VisitID = p1.PatientVisitID                                                         
INNER JOIN @TempInvestigationStatus TMP ON TMP.Status = P1.Status                                                              
INNER JOIN PatternMapping PM WITH (NOLOCK) ON PM.InvestigationID = P1.InvestigationID and PM.Orgid=@OrgID                                                              
INNER JOIN @tblPatternID PM1 ON PM1.PatternID = PM.PatternID                                                              
INNER JOIN InvestigationOrgMapping IOM WITH (NOLOCK) ON IOM.InvestigationID = P1.InvestigationID                                                              
AND IOM.OrgID = @OrgID                                                              
--Parthi                                                            
--inner join PatientVisit pv with (Nolock) on pv.PatientVisitId=p1.PatientVisitID and pv.LabVisitType in(0,1)-- and   pv.OrgID=161                                                     
WHERE --COALESCE(WLM.WorklistId, '') = COALESCE(@WorkListID, WLM.WorklistId, '')                                                               
--P1.CreatedAT > @SearchStartDate                                       
--AND                                                              
P1.InvestigationID = Isnull(@invID, P1.InvestigationID)                                                              
AND Isnull(P1.statustype, '') NOT IN (                                                              
'RC'                                                              
,'RR'                                     
)                                                        AND P1.OrgID = @OrgID                                                              
AND COALESCE(IOM.HeaderID, '') = COALESCE(@pHeaderID, IOM.HeaderID, '')                                            
AND COALESCE(IOM.DeptID, '') = COALESCE(@pDeptID, IOM.DeptID, '')                                                     
AND COALESCE(IOM.ProtocalGroupID, '') = COALESCE(@protocalID, IOM.ProtocalGroupID, '')                                                              
--Parthi                             
--and pv.LabVisitType in (@pvisittype)                                              
--and coalesce(pv.LabVisitType,'')=coalesce(@pvisittype,pv.LabVisitType)                                                            
--and @pLocation= @CLocation                                                          
AND IOM.OrgID = @OrgID                                                    
OPTION (MAXDOP 1)                                                              
END                                                              
ELSE                                 
BEGIN                                                         
INSERT INTO #tblBatchVisits (VisitID)                                                              
SELECT DISTINCT PatientVisitID                                                              
FROM PatientInvestigation P1 WITH (NOLOCK)                                                       
INNER JOIN @tblVisitID TV ON TV.VisitID = p1.PatientVisitID                                                              
INNER JOIN WorklistDetail WLD WITH (NOLOCK) ON WLD.PatientInvId = P1.PatientInvID                                                              
INNER JOIN WorklistMaster WLM WITH (NOLOCK) ON WLM.WMID = WLD.WMID                                       
INNER JOIN @TempInvestigationStatus TMP ON TMP.Status = P1.Status                                                              
INNER JOIN PatternMapping PM WITH (NOLOCK) ON PM.InvestigationID = P1.InvestigationID and PM.Orgid=@OrgID        
                                      
INNER JOIN @tblPatternID PM1 ON PM1.PatternID = PM.PatternID                                                              
INNER JOIN InvestigationOrgMapping IOM WITH (NOLOCK) ON IOM.InvestigationID = P1.InvestigationID                                                    AND IOM.OrgID = @OrgID                                                              
--Parthi                                                            
--inner join PatientVisit pv with (Nolock) on pv.PatientVisitId=p1.PatientVisitID and pv.LabVisitType in(@pvisittype)                                                          
                                                          
-- and   pv.OrgID=161                                                            
WHERE                                          
-- P1.CreatedAT > @SearchStartDate    AND                               
                                                               
WLM.WorklistId = @WorkListID                                                              
AND P1.InvestigationID = Isnull(@invID, P1.InvestigationID)                                                              
AND Isnull(P1.statustype, '') NOT IN (                                              
'RC'                     
,'RR'                  
)                                                              
AND P1.OrgID = @OrgID                             
AND COALESCE(IOM.HeaderID, '') = COALESCE(@pHeaderID, IOM.HeaderID, '')                                                              
AND COALESCE(IOM.DeptID, '') = COALESCE(@pDeptID, IOM.DeptID, '')                                                           
AND COALESCE(IOM.ProtocalGroupID, '') = COALESCE(@protocalID, IOM.ProtocalGroupID, '')                                                              
--Parthi                                              
--and pv.LabVisitType in (@pvisittype)                                                          
--and   coalesce(pv.LabVisitType,'')=coalesce(@pvisittype,pv.LabVisitType)                       
--and @pLocation= @CLocation                                         
AND IOM.OrgID = @OrgID                                      
OPTION (MAXDOP 1)                                                              
END                                                              
END                                                              
END                                            
ELSE                                                              
BEGIN                                                              
IF @pTestType IN (                                                              
'GRP'                              
,'PKG'                                                              
)                         
BEGIN                                                              
IF (@WorkListID IS NULL)                                                           
BEGIN                                                              
INSERT INTO #tblBatchVisits (VisitID)                                                              
SELECT DISTINCT PatientVisitID                                                              
FROM PatientInvestigation P1 WITH (NOLOCK)                                                              
INNER JOIN @TempInvestigationStatus TMP ON TMP.Status = P1.Status                                                              
AND P1.OrgID = @OrgID                                                              
INNER JOIN PatternMapping PM WITH (NOLOCK) ON PM.InvestigationID = P1.InvestigationID and PM.Orgid=@OrgID                                                              
INNER JOIN @tblPatternID PM1 ON PM1.PatternID = PM.PatternID                   
INNER JOIN InvestigationOrgMapping IOM WITH (NOLOCK) ON IOM.InvestigationID = P1.InvestigationID                                                              
AND IOM.OrgID = P1.OrgID           
INNER JOIN OrderedInvestigations OI WITH (NOLOCK) ON OI.AccessionNumber = P1.AccessionNumber                                                              
AND OI.OrgID = P1.OrgID                                                              
INNER JOIN InvOrgGroup IOG WITH (NOLOCK) ON IOG.AttGroupID = OI.ID                                                              
AND IOG.OrgID = @OrgID                                                              
--Parthi                                              
--inner join PatientVisit pv with (Nolock) on pv.PatientVisitId=p1.PatientVisitID and pv.LabVisitType in (@pvisittype) --and   pv.OrgID=161                                                            
WHERE --COALESCE(WLM.WorklistId, 0) = COALESCE(@WorkListID, WLM.WorklistId, 0)                              
--P1.CreatedAT > @SearchStartDate      AND                                                               
IOG.AttGroupID = COALESCE(@groupID, IOG.AttGroupID)           
AND OI.Status=ISNULL(@Status,OI.Status)                                                       
AND COALESCE(OI.PkgID, '') = COALESCE(@packageID, OI.PkgID, '')                                                              
AND Isnull(P1.statustype, '') NOT IN (                                                              
'RC'                                                         
,'RR'                                                        
)                                                              
AND OI.Status NOT IN (                                                              
'Approve'                                                              
,'Cancel'                                                       
,'Rejected'                                                              
,'RejectClose'                                                              
,'ForceClose'                                                              
)                   
AND P1.OrgID = @OrgID                                                              
AND COALESCE(IOG.ProtocalGroupID, '') = COALESCE(@protocalID, IOG.ProtocalGroupID, '')                                       
AND COALESCE(IOM.HeaderID, '') = COALESCE(@pHeaderID, IOM.HeaderID, '')                                                              
AND COALESCE(IOM.DeptID, '') = COALESCE(@pDeptID, IOM.DeptID, '')                --Parthi                                                       
--and pv.LabVisitType in (@pvisittype)                                                       
--and coalesce(pv.LabVisitType,'')=coalesce(@pvisittype,pv.LabVisitType)                                                            
--and @pLocation= @CLocation                                             
AND IOM.OrgID = @OrgID                                                              
AND IOG.OrgID = @OrgID  and    P1.CreatedAt between @pFDate and @pTDate                                                         
OPTION (                                                              
MAXDOP 1                                                              
,FORCE ORDER                 
)                                                              
END                                                              
ELSE                                                              
BEGIN                                        
INSERT INTO #tblBatchVisits (VisitID)                  
SELECT DISTINCT PatientVisitID                                                              
FROM @TempInvestigationStatus TMP                                                              
INNER JOIN PatientInvestigation P1 WITH (NOLOCK) ON TMP.Status = P1.Status                                                              
AND P1.OrgID = @OrgID                                                              
INNER JOIN WorklistDetail WLD WITH (NOLOCK) ON WLD.PatientInvId = P1.PatientInvID                                                              
INNER JOIN WorklistMaster WLM WITH (NOLOCK) ON WLM.WMID = WLD.WMID                                                              
INNER JOIN PatternMapping PM WITH (NOLOCK) ON PM.InvestigationID = P1.InvestigationID and PM.Orgid=@OrgID                                                              
INNER JOIN @tblPatternID PM1 ON PM1.PatternID = PM.PatternID                                                              
INNER JOIN InvestigationOrgMapping IOM WITH (NOLOCK) ON IOM.InvestigationID = P1.InvestigationID                                                              
AND IOM.OrgID = P1.OrgID                                                              
INNER JOIN OrderedInvestigations OI WITH (NOLOCK) ON OI.AccessionNumber = P1.AccessionNumber                              AND OI.OrgID = P1.OrgID                                                              
INNER JOIN InvOrgGroup IOG WITH (NOLOCK) ON IOG.AttGroupID = OI.ID                          
AND IOG.OrgID = @OrgID               
--Parthi                                                            
--inner join PatientVisit pv with (Nolock) on pv.PatientVisitId=p1.PatientVisitID and pv.LabVisitType in(@pvisittype)-- and   pv.OrgID=161                                                            
WHERE                                          
-- P1.CreatedAT > @SearchStartDate                    AND                                                 
WLM.WorklistId = @WorkListID                
AND IOG.AttGroupID = COALESCE(@groupID, IOG.AttGroupID)      
AND OI.Status=ISNULL(@Status,OI.Status)                                                            
AND COALESCE(OI.PkgID, '') = COALESCE(@packageID, OI.PkgID, '')                                                              
AND Isnull(P1.statustype, '') NOT IN (                                                              
'RC'                                                              
,'RR'                                                              
)                                                              
AND OI.Status NOT IN (                                                              
'Approve'                                                              
,'Cancel'                                 
,'Rejected'                                                              
,'RejectClose'                             
,'ForceClose'                                                   
)                                                              
AND P1.OrgID = @OrgID                
AND COALESCE(IOG.ProtocalGroupID, '') = COALESCE(@protocalID, IOG.ProtocalGroupID, '')                                                              
AND COALESCE(IOM.HeaderID, '') = COALESCE(@pHeaderID, IOM.HeaderID, '')                                                              
AND COALESCE(IOM.DeptID, '') = COALESCE(@pDeptID, IOM.DeptID, '')                                              
--Parthi                   
--and pv.LabVisitType in (@pvisittype)                                                  
--and coalesce(pv.LabVisitType,'')=coalesce(@pvisittype,pv.LabVisitType)                                                            
--and @pLocation= @CLocation                  
AND IOM.OrgID = @OrgID                                                              
AND IOG.OrgID = @OrgID    and    P1.CreatedAt between @pFDate and @pTDate                                                                 
OPTION (                                         
MAXDOP 1                                                              
,FORCE ORDER                                                              
)                                                              
END                                         
END                                                          
ELSE                                                              
BEGIN         
IF (@WorkListID IS NULL)                                                              
BEGIN      
Insert into #temppatientvisitid    
select patientvisitid,P1.Status,P1.InvestigationId,statustype from patientinvestigation P1    
INNER JOIN PatternMapping PM WITH (NOLOCK) ON PM.InvestigationID = P1.InvestigationID and PM.Orgid=@OrgID                                                              
INNER JOIN @tblPatternID PM1 ON PM1.PatternID = PM.PatternID   where P1.OrgID = @OrgID and CreatedAt between @pFDate and @pTDate      
    
INSERT INTO #tblBatchVisits (VisitID)                                                              
SELECT DISTINCT PatientVisitID                                                              
FROM @TempInvestigationStatus TMP                                                              
INNER JOIN #temppatientvisitid P1 WITH (NOLOCK) ON TMP.Status = P1.Status                                                          
--INNER JOIN PatternMapping PM WITH (NOLOCK) ON PM.InvestigationID = P1.InvestigationID and PM.Orgid=@OrgID                                                              
--INNER JOIN @tblPatternID PM1 ON PM1.PatternID = PM.PatternID                                                              
INNER JOIN InvestigationOrgMapping IOM WITH (NOLOCK) ON IOM.InvestigationID = P1.InvestigationID                                                              
AND IOM.OrgID = @OrgID                                                              
--Parthi                    
--inner join PatientVisit pv with (Nolock) on pv.PatientVisitId=p1.PatientVisitID and pv.LabVisitType in(@pvisittype)                         
 --and   pv.OrgID=161                                                       
WHERE --COALESCE(WLM.WorklistId, '') = COALESCE(@WorkListID, WLM.WorklistId, '')                                                                      
--P1.CreatedAT > @SearchStartDate                    AND                                                               
IOM.InvestigationID = Isnull(@invID, IOM.InvestigationID)  AND                     
 Isnull(P1.statustype, '') NOT IN (                                                              
'RC'                                                              
,'RR'                                                              
)                                                                                                                           
AND COALESCE(IOM.HeaderID, '') = COALESCE(@pHeaderID, IOM.HeaderID, '')                                                              
AND COALESCE(IOM.DeptID, '') = COALESCE(@pDeptID, IOM.DeptID, '')                                                              
AND COALESCE(IOM.ProtocalGroupID, '') = COALESCE(@protocalID, IOM.ProtocalGroupID, '')                                   
--Parthi                                                      
--and pv.LabVisitType in (@pvisittype)                                               
--and coalesce(pv.LabVisitType,'')=coalesce(@pvisittype,pv.LabVisitType)                                                            
--and @pLocation= @CLocation                                                          
AND IOM.OrgID = @OrgID     
OPTION (                                                              
MAXDOP 1                                                              
,FORCE ORDER                                                              
)     
                                                       
END                                                              
ELSE                                                              
BEGIN                                                              
INSERT INTO #tblBatchVisits (VisitID)                                                              
SELECT DISTINCT PatientVisitID                                                              
FROM @TempInvestigationStatus TMP                                                              
INNER JOIN PatientInvestigation P1 WITH (NOLOCK) ON TMP.Status = P1.Status                                                              
INNER JOIN WorklistDetail WLD WITH (NOLOCK) ON WLD.PatientInvId = P1.PatientInvID                                                              
INNER JOIN WorklistMaster WLM WITH (NOLOCK) ON WLM.WMID = WLD.WMID                                              
INNER JOIN PatternMapping PM WITH (NOLOCK) ON PM.InvestigationID = P1.InvestigationID and PM.Orgid=@OrgID                                                              
INNER JOIN @tblPatternID PM1 ON PM1.PatternID = PM.PatternID                                                              
INNER JOIN InvestigationOrgMapping IOM WITH (NOLOCK) ON IOM.InvestigationID = P1.InvestigationID                                                        
AND IOM.OrgID = @OrgID                                                              
--Parthi                                     
--inner join PatientVisit pv with (Nolock) on pv.PatientVisitId=p1.PatientVisitID and pv.LabVisitType in(@pvisittype)--and   pv.OrgID=161                                       
WHERE                                          
-- P1.CreatedAT > @SearchStartDate                    AND                                                               
WLM.WorklistId = @WorkListID                                                              
AND IOM.InvestigationID = Isnull(@invID, IOM.InvestigationID)                                                              
AND Isnull(P1.statustype, '') NOT IN (                                                              
'RC'                                                              
,'RR'                         
)                                                              
AND P1.OrgID = @OrgID                                                              
AND COALESCE(IOM.HeaderID, '') = COALESCE(@pHeaderID, IOM.HeaderID, '')                                                
AND COALESCE(IOM.DeptID, '') = COALESCE(@pDeptID, IOM.DeptID, '')                                                              
AND COALESCE(IOM.ProtocalGroupID, '') = COALESCE(@protocalID, IOM.ProtocalGroupID, '')                                                              
--Parthi                                              
--and pv.LabVisitType in (@pvisittype)                                                                
--and coalesce(pv.LabVisitType,'')=coalesce(@pvisittype,pv.LabVisitType)                                                            
--and @pLocation= @CLocation                                                          
AND IOM.OrgID = @OrgID  and    P1.CreatedAt between @pFDate and @pTDate                                        
OPTION (                                                            
MAXDOP 1           
,FORCE ORDER                                    
)                                                              
END                           
END                                                              
END                                                              
IF @protocalID IS NOT NULL                                                              
BEGIN                                                              
IF (@WorkListID IS NULL)                                            
BEGIN                                                   
INSERT INTO #tblBatchVisits (VisitID)                                                              
SELECT DISTINCT PatientVisitID                                                              
FROM InvOrgGroup IOG WITH (NOLOCK)                                              
INNER JOIN OrderedInvestigations OI WITH (NOLOCK) ON IOG.AttGroupID = OI.ID                                                     
AND IOG.OrgID = @OrgID                                                              
AND OI.Status NOT IN (                                    
'Approve'                                                              
,'Cancel'                                                              
,'Rejected'             
,'RejectClose'                                                              
,'ForceClose'                              
)                                                              
INNER JOIN PatientInvestigation P1 WITH (NOLOCK) ON OI.AccessionNumber = P1.AccessionNumber                                                              
AND OI.OrgID = P1.OrgID                                                              
INNER JOIN @TempInvestigationStatus TMP ON TMP.Status = P1.Status                                                   
INNER JOIN PatternMapping PM WITH (NOLOCK) ON PM.InvestigationID = P1.InvestigationID and PM.Orgid=@OrgID                                                              
INNER JOIN @tblPatternID PM1 ON PM1.PatternID = PM.PatternID                                                              
INNER JOIN InvestigationOrgMapping IOM WITH (NOLOCK) ON IOM.InvestigationID = P1.InvestigationID                                                              
AND IOM.OrgID = @OrgID                                                              
--Parthi                                                            
--inner join PatientVisit pv with (Nolock) on pv.PatientVisitId=p1.PatientVisitID and pv.LabVisitType in(@pvisittype)-- and   pv.OrgID=161                                                            
WHERE --COALESCE(WLM.WorklistId, 0) = COALESCE(@WorkListID, WLM.WorklistId, 0)                      
--P1.CreatedAT > @SearchStartDate             AND                                                              
IOG.AttGroupID = COALESCE(@groupID, IOG.AttGroupID)       
AND OI.Status=ISNULL(@Status,OI.Status)                                  
AND COALESCE(OI.PkgID, '') = COALESCE(@packageID, OI.PkgID, '')                             
AND Isnull(P1.statustype, '') NOT IN (                                                 
'RC'                                                              
,'RR'                                                              
)                                                              
AND OI.Status NOT IN (                       
'Approve'                                                   
,'Cancel'                                                         
,'Rejected'                                                              
,'RejectClose'                                                              
,'ForceClose'                                                              
)                                                              
AND P1.OrgID = @OrgID                   
AND IOG.ProtocalGroupID = @protocalID                                                              
AND COALESCE(IOM.HeaderID, '') = COALESCE(@pHeaderID, IOM.HeaderID, '')             
AND COALESCE(IOM.DeptID, '') = COALESCE(@pDeptID, IOM.DeptID, '')                 --Parthi        
--and pv.LabVisitType in (@pvisittype)                                      
--and coalesce(pv.LabVisitType,'')=coalesce(@pvisittype,pv.LabVisitType)                                                            
--and @pLocation= @CLocation                                                          
AND IOM.OrgID = @OrgID     and    P1.CreatedAt between @pFDate and @pTDate                                      
--AND IOM.ProtocalGroupID = @protocalID                                                                
EXCEPT                                                              
SELECT visitid                                                              
FROM #tblBatchVisits                                                              
OPTION (                                                              
MAXDOP 1                                                              
,FORCE ORDER                 
)                                                              
END                                                              
ELSE                                   
BEGIN      
                                                              
INSERT INTO #tblBatchVisits (VisitID)                                                              
SELECT DISTINCT PatientVisitID        
FROM InvOrgGroup IOG WITH (NOLOCK)                                                              
INNER JOIN OrderedInvestigations OI WITH (NOLOCK) ON IOG.AttGroupID = OI.ID                                                              
AND IOG.OrgID = @OrgID                                                              
AND OI.Status NOT IN (                                                              
'Approve'                                                              
,'Cancel'                          
,'Rejected'                                                              
,'RejectClose'                                                              
,'ForceClose'                                                              
)                                                              
INNER JOIN PatientInvestigation P1 WITH (NOLOCK) ON OI.AccessionNumber = P1.AccessionNumber                      
AND OI.OrgID = P1.OrgID                                                              
INNER JOIN WorklistDetail WLD WITH (NOLOCK) ON WLD.PatientInvId = P1.PatientInvID                                                              
INNER JOIN WorklistMaster WLM WITH (NOLOCK) ON WLM.WMID = WLD.WMID                                                              
INNER JOIN @TempInvestigationStatus TMP ON TMP.Status = P1.Status                                                              
INNER JOIN PatternMapping PM WITH (NOLOCK) ON PM.InvestigationID = P1.InvestigationID and PM.Orgid=@OrgID                                                              
INNER JOIN @tblPatternID PM1 ON PM1.PatternID = PM.PatternID                                                              
INNER JOIN InvestigationOrgMapping IOM WITH (NOLOCK) ON IOM.InvestigationID = P1.InvestigationID                                                              
AND IOM.OrgID = @OrgID                                                           
--Parthi                                                            
--inner join PatientVisit pv with (Nolock) on pv.PatientVisitId=p1.PatientVisitID and pv.LabVisitType in(@pvisittype)--and   pv.OrgID=161                                                            
WHERE                                    
--P1.CreatedAT > @SearchStartDate                    AND                                                       
WLM.WorklistId = @WorkListID                                                              
AND IOG.AttGroupID = COALESCE(@groupID, IOG.AttGroupID)       
AND OI.Status=ISNULL(@Status,OI.Status)                                                           
AND COALESCE(OI.PkgID, '') = COALESCE(@packageID, OI.PkgID, '')                                  
AND Isnull(P1.statustype, '') NOT IN (                                                    
'RC'                    
,'RR'                                                              
)                                                              
AND OI.Status NOT IN (                                                       
'Cancel'                                                              
,'Rejected'                                                              
)                                         
AND P1.OrgID = @OrgID                                           
AND IOG.ProtocalGroupID = @protocalID                                                              
AND COALESCE(IOM.HeaderID, '') = COALESCE(@pHeaderID, IOM.HeaderID, '')                                                              
AND COALESCE(IOM.DeptID, '') = COALESCE(@pDeptID, IOM.DeptID, '')                                                              
--Parthi                                              
--and pv.LabVisitType in(@pvisittype)                             
--and coalesce(pv.LabVisitType,'')=coalesce(@pvisittype,pv.LabVisitType)                                                            
--and @pLocation= @CLocation                                                          
AND IOM.OrgID = @OrgID       and    P1.CreatedAt between @pFDate and @pTDate                                                    
AND IOM.ProtocalGroupID = @protocalID                                                
EXCEPT                                                              
SELECT visitid                                                              
FROM #tblBatchVisits                                                              
OPTION (                                                  
MAXDOP 1                                                              
,FORCE ORDER                                                              
)                                                              
END                                                              
END                                                          
END              
ELSE                                                              
BEGIN                                                             
INSERT INTO #tblBatchVisits (VisitID)                                                    
      SELECT DISTINCT P1.PatientVisitID                                                       
FROM DeviceIntegrationOrgMapping DIOM WITH (NOLOCK)                                                              
INNER JOIN PatientInvestigation P1 WITH (NOLOCK) ON DIOM.Investigationid = P1.investigationid                                                              
AND DIOM.OrgID = P1.OrgID                                              
INNER JOIN @TempInvestigationStatus TMP ON TMP.Status = P1.Status                                                              
INNER JOIN PatternMapping PM WITH (NOLOCK) ON PM.InvestigationID = P1.InvestigationID and PM.orgid=@OrgID                                        
INNER JOIN @tblPatternID PM1 ON PM1.PatternID = PM.PatternID                               
INNER JOIN InvestigationValues INV WITH (NOLOCK) ON P1.PatientVisitID = INV.PatientVisitID                                                              
AND P1.InvestigationID = INV.InvestigationID                                                              
AND P1.GroupID = INV.GroupID                                                              
AND P1.UID = INV.UID                                                         
AND DIOM.DeviceID = INV.DeviceID                                                              
INNER JOIN InvestigationOrgMapping IOM WITH (NOLOCK) ON IOM.InvestigationID = P1.InvestigationID        
AND IOM.OrgID = @OrgID                                 
--Parthi                                                            
--inner join PatientVisit pv with (Nolock) on pv.PatientVisitId=p1.PatientVisitID and pv.LabVisitType in(@pvisittype)--and   pv.OrgID=161                            
WHERE                                           
--INV.CreatedAT > @SearchStartDate            AND                                                              
DIOM.InstrumentID = @DeviceID                                                              
AND COALESCE(IOM.DeptID, '') = COALESCE(@pDeptID, IOM.DeptID, '')                        
--Parthi                                                 
--and pv.LabVisitType in(@pvisittype)                                                       
--and coalesce(pv.LabVisitType,'')=coalesce(@pvisittype,pv.LabVisitType)                                                            
--and @pLocation= @CLocation                                                   
AND Isnull(P1.statustype, '') NOT IN (                                                              
'RC'                                                       
,'RR'                                                              
)                                         
AND P1.OrgID = @OrgID                                                         
AND IOM.OrgID = @OrgID  and    P1.CreatedAt between @pFDate and @pTDate                                                                     
OPTION (MAXDOP 1)         
END           
     
     
INSERT INTO #tblPatientInvestigation_Mirror (                                            
PatientVisitID                                                     
,InvestigationID                                                              
,InvestigationName                                                              
,CreatedBy                                                              
,CreatedAt                                                              
,ModifiedBy                                                              
,ModifiedAt                                                              
,InvestigationMethodID                                                              
,InvestigationSampleContainerID                                                              
,SampleID                                                              
,InvestigationSiteID                                                              
,IsCompleted                           
,CollectedDateTime                                                              
,Status                                                              
,ComplaintId                                                              
,GroupID                                                              
,GroupName                                                           
,Reason                                                              
,ReportStatus             
,ReferenceRange                                                              
,MethodName                                                              
,IPInvSampleCollectionMasterID                                                              
,OrgID                                                              
,WorklistDeletedStatus                                                              
,PerformingPhysicainName                                       
,KitID                                                              
,KitName                                                              
,InstrumentID                                                              
,InstrumentName                                                              
,Interpretation                                                              
,PrincipleID                                                 
,PrincipleName                                                              
,QCData                        
,PackageID                                  
,PackageName                          
,ApprovedBy                                                         
,PatientInvID                                                              
,OrderedAt                          
,UID               
,GroupComment                                         
,ApprovedAt                                                              
,AccessionNumber                               
,IsAbnormal                                                              
,InvStatusReasonID                                                              
,Test                                                              
,ValidatedBy                                                              
,ValidatedAt                                                              
,RemarksID                                                              
,MedicalRemarks                                                         
,GroupMedicalRemarks                                              
,RefSuffixText                                                              
,Migrated_Patient_Number                                                              
,Migrated_Request_Number                                               
,Migrated_Visit_Number                                                              
,Migrated_TestCode                                                              
,Migrated_TestType                                                              
,WorkListID                      
,AuthorizedBy                                                              
,DeviceID                                                              
,WorklistType                                                              
,WorklistTypeID                                                              
,PickedBy                                                              
,statustype                                                              
,ConvReferenceRange                                                              
,RefAccessionNo                                                              
,ManualAbnormal                                                              
,IsAutoAuthorize                                                              
,IsSentBarcode                                                              
,PrintableRange                         
,WorklistCreatedby                                                       
,WorklistCreatedat                                          
,IsAutoValidate                                                      
,IsAllowNull                                                              
)                                             
SELECT PatientVisitID                                                              
,InvestigationID                                                              
,InvestigationName                                                              
,CreatedBy                                                 
,CreatedAt                                                              
,ModifiedBy                                                              
,ModifiedAt                                                              
,InvestigationMethodID                                                              
,InvestigationSampleContainerID                              
,SampleID                                     
,InvestigationSiteID                                                              
,IsCompleted                                                              
,CollectedDateTime                                                              
,Status                                                              
,ComplaintId                                                              
,GroupID                                                              
,GroupName                                                              
,Reason                   
,ReportStatus                                                              
,ReferenceRange                                                              
,MethodName                                                              
,IPInvSampleCollectionMasterID                                                              
,OrgID                                     
,WorklistDeletedStatus                                                              
,PerformingPhysicainName                     
,KitID                                                              
,KitName                                                              
,InstrumentID                                              
,InstrumentName                                   
,Interpretation                                                              
,PrincipleID                                                             
,PrincipleName                                              
,QCData             
,PackageID                                                              
,PackageName                                                              
,ApprovedBy                                   
,PatientInvID                                                              
,OrderedAt                                                              
,UID                                                              
,GroupComment                                                              
,ApprovedAt                                                      
,AccessionNumber                                   
,IsAbnormal                                                              
,InvStatusReasonID                                                              
,Test                                                              
,ValidatedBy                                                              
,ValidatedAt                                                              
,RemarksID                                                              
,MedicalRemarks                                                              
,GroupMedicalRemarks                                                              
,RefSuffixText                                                              
,Migrated_Patient_Number                                                              
,Migrated_Request_Number                                                              
,Migrated_Visit_Number                                                              
,Migrated_TestCode                                                              
,Migrated_TestType                                                              
,WorkListID                                                              
,AuthorizedBy                                                              
,DeviceID                                                              
,WorklistType                                                              
,WorklistTypeID                                
,PickedBy                                              
,statustype                                                              
,ConvReferenceRange                                   
,RefAccessionNo                                                              
,ManualAbnormal                                                              
,IsAutoAuthorize                                                              
,IsSentBarcode                
,PrintableRange                                                              
,WorklistCreatedby                                          ,WorklistCreatedat                      
,Isnull(IsAutoValidate, '') AS IsAutoValidate                                                              
,Isnull(IsAllowNull, '') AS IsAllowNull                                                              
FROM PatientInvestigation PINV WITH (NOLOCK)                                                              
INNER JOIN #tblBatchVisits TV ON PINV.PatientVisitID = TV.VisitID                                            
WHERE PINV.OrgID = @OrgID                
AND PINV.Status IN (                                                              
SELECT Status        
FROM @TempInvestigationStatus                                            
)     
    
                                                         
---MURAL                                                               
IF (@DeviceID IS NULL)                                                       
BEGIN                                                              
IF @pTestType IN (                                                              
'GRP'                                                              
,'PKG'                                               
)                                                              
BEGIN                                                              
IF (@WorkListID IS NULL)             
BEGIN         
INSERT INTO #PInvestigationList (ID)                                                              
SELECT DISTINCT P1.InvestigationID                                                             
FROM @TempInvestigationStatus TMP                                                              
INNER JOIN #tblPatientInvestigation_Mirror P1 WITH (NOLOCK) ON TMP.Status = P1.Status                                                              
INNER JOIN #tblBatchVisits TV ON TV.VisitID = P1.PatientVisitID                                     
INNER JOIN PatternMapping PM WITH (NOLOCK) ON PM.InvestigationID = P1.InvestigationID and PM.Orgid=@OrgID                                                              
INNER JOIN @tblPatternID PM1 ON PM1.PatternID = PM.PatternID                                                              
INNER JOIN InvestigationOrgMapping IOM WITH (NOLOCK) ON IOM.InvestigationID = P1.InvestigationID                                                              
AND IOM.OrgID = @OrgID                                                              
INNER JOIN OrderedInvestigations OI WITH (NOLOCK) ON OI.AccessionNumber = P1.AccessionNumber                                  
AND OI.OrgID = @OrgID                                                              
INNER JOIN InvOrgGroup IOG WITH (NOLOCK) ON IOG.AttGroupID = OI.ID                                                              
AND IOG.OrgID = @OrgID                                                              
--Parthi                                                            
--inner join PatientVisit pv with (Nolock) on pv.PatientVisitId=p1.PatientVisitID and pv.LabVisitType in(@pvisittype)--and   pv.OrgID=@OrgID                                                             
WHERE --COALESCE(WLM.WorklistId, 0) = COALESCE(@WorkListID, WLM.WorklistId, 0)                                                                    
IOG.AttGroupID = COALESCE(@groupID, IOG.AttGroupID)      
AND OI.Status=ISNULL(@Status,OI.Status)             
AND COALESCE(OI.PkgID, '') = COALESCE(@packageID, OI.PkgID, '')                                      
AND Isnull(P1.statustype, '') NOT IN (                                                              
'RC'                                           
,'RR'                                                              
)                                                              
AND OI.Status NOT IN (                                                              
'Approve'                                                           
,'Cancel'                                                  
,'Rejected'                                                              
,'RejectClose'                                                           
,'ForceClose'                                              
)                                                              
AND P1.OrgID = @OrgID                                                              
AND COALESCE(IOG.ProtocalGroupID, '') = COALESCE(@protocalID, IOG.ProtocalGroupID, '')                                                              
AND COALESCE(IOM.HeaderID, '') = COALESCE(@pHeaderID, IOM.HeaderID, '')                                                              
AND COALESCE(IOM.DeptID, '') = COALESCE(@pDeptID, IOM.DeptID, '')                 
--Parthi                                                  
--and pv.LabVisitType in(@pvisittype)                                                  
--and coalesce(pv.LabVisitType,'')=coalesce(@pvisittype,pv.LabVisitType)                                          
--and @pLocation= @CLocation                                                          
AND IOM.OrgID = @OrgID                                                              
AND IOG.OrgID = @OrgID                                                              
OPTION (MAXDOP 1)                                                              
END                                                              
ELSE                                                              
BEGIN            
INSERT INTO #PInvestigationList (ID)                                                            
SELECT DISTINCT P1.InvestigationID                                                              
FROM @TempInvestigationStatus TMP                                                              
INNER JOIN #tblPatientInvestigation_Mirror P1 WITH (NOLOCK) ON TMP.Status = P1.Status                                                              
INNER JOIN #tblBatchVisits TV ON TV.VisitID = P1.PatientVisitID    
INNER JOIN WorklistDetail WLD WITH (NOLOCK) ON WLD.PatientInvId = P1.PatientInvID                                                              
INNER JOIN WorklistMaster WLM WITH (NOLOCK) ON WLM.WMID = WLD.WMID                                                              
INNER JOIN PatternMapping PM WITH (NOLOCK) ON PM.InvestigationID = P1.InvestigationID and PM.Orgid=@OrgID                                                              
INNER JOIN @tblPatternID PM1 ON PM1.PatternID = PM.PatternID                                                              
INNER JOIN InvestigationOrgMapping IOM WITH (NOLOCK) ON IOM.InvestigationID = P1.InvestigationID                                                              
AND IOM.OrgID = @OrgID                                                              
INNER JOIN OrderedInvestigations OI WITH (NOLOCK) ON OI.AccessionNumber = P1.AccessionNumber                                                              
AND OI.OrgID = @OrgID                                                              
INNER JOIN InvOrgGroup IOG WITH (NOLOCK) ON IOG.AttGroupID = OI.ID                                                              
AND IOG.OrgID = @OrgID                                                              
--Parthi                                                            
--inner join PatientVisit pv with (Nolock) on pv.PatientVisitId=p1.PatientVisitID and pv.LabVisitType in(@pvisittype)--and   pv.OrgID=@OrgID                                                 
WHERE WLM.WorklistId = @WorkListID                                                    
AND IOG.AttGroupID = COALESCE(@groupID, IOG.AttGroupID)       
AND OI.Status=ISNULL(@Status,OI.Status)             
AND COALESCE(OI.PkgID, '') = COALESCE(@packageID, OI.PkgID, '')                                                              
AND Isnull(P1.statustype, '') NOT IN (                                                              
'RC'                                                              
,'RR'                           
)                                                              
AND OI.Status NOT IN (                                                              
'Approve'                   
,'Cancel'                   
,'Rejected'                                                              
,'RejectClose'                                                              
,'ForceClose'                                                              
)        
AND P1.OrgID = @OrgID                                                              
AND COALESCE(IOG.ProtocalGroupID, '') = COALESCE(@protocalID, IOG.ProtocalGroupID, '')                         
AND COALESCE(IOM.HeaderID, '') = COALESCE(@pHeaderID, IOM.HeaderID, '')                                         
AND COALESCE(IOM.DeptID, '') = COALESCE(@pDeptID, IOM.DeptID, '')                                                              
--Parthi                                                            
--and pv.LabVisitType in(@pvisittype)                                                  
--and coalesce(pv.LabVisitType,'')=coalesce(@pvisittype,pv.LabVisitType)                                                            
--and @pLocation= @CLocation                                                          
AND IOM.OrgID = @OrgID                 
AND IOG.OrgID = @OrgID                                                              
OPTION (MAXDOP 1)                                                              
END                             
END                                       
ELSE                                                   
BEGIN                                                              
IF (@WorkListID IS NULL)                                                              
BEGIN                
INSERT INTO #PInvestigationList (ID)                                                              
SELECT DISTINCT P1.InvestigationID                                                              
FROM @TempInvestigationStatus TMP                                                              
INNER JOIN #tblPatientInvestigation_Mirror P1 WITH (NOLOCK) ON TMP.Status = P1.Status                                                              
INNER JOIN #tblBatchVisits TV ON TV.VisitID = P1.PatientVisitID                                       
INNER JOIN PatternMapping PM WITH (NOLOCK) ON PM.InvestigationID = P1.InvestigationID and PM.orgid=@OrgID                                                              
INNER JOIN @tblPatternID PM1 ON PM1.PatternID = PM.PatternID                                                              
INNER JOIN InvestigationOrgMapping IOM WITH (NOLOCK) ON IOM.InvestigationID = P1.InvestigationID                                                  
AND IOM.OrgID = @OrgID                                                              
--Parthi                                                            
--inner join PatientVisit pv with (Nolock) on pv.PatientVisitId=p1.PatientVisitID and pv.LabVisitType in(@pvisittype)--and   pv.OrgID=@OrgID                                                             
WHERE --COALESCE(WLM.WorklistId, '') = COALESCE(@WorkListID, WLM.WorklistId, '')                                                              
P1.InvestigationID = Isnull(@invID, P1.InvestigationID)                                                              
AND Isnull(P1.statustype, '') NOT IN (                                                     
'RC'                                                              
,'RR'                                                              
)                                                              
AND P1.OrgID = @OrgID                                                              
AND COALESCE(IOM.HeaderID, '') = COALESCE(@pHeaderID, IOM.HeaderID, '')                                                              
AND COALESCE(IOM.DeptID, '') = COALESCE(@pDeptID, IOM.DeptID, '')                                                              
AND COALESCE(IOM.ProtocalGroupID, '') = COALESCE(@protocalID, IOM.ProtocalGroupID, '')                                                              
--Parthi           
--and pv.LabVisitType in(@pvisittype)                          --and coalesce(pv.LabVisitType,'')=coalesce(@pvisittype,pv.LabVisitType)                                                            
AND IOM.OrgID = @OrgID                                                              
OPTION (                                   
MAXDOP 1                                                              
,FORCE ORDER                                                              
)                                                              
END                                                              
ELSE           
BEGIN                         
INSERT INTO #PInvestigationList (ID)                                                          
SELECT DISTINCT P1.InvestigationID                                                              
FROM @TempInvestigationStatus TMP                                     
INNER JOIN #tblPatientInvestigation_Mirror P1 WITH (NOLOCK) ON TMP.Status = P1.Status          
INNER JOIN #tblBatchVisits TV ON TV.VisitID = P1.PatientVisitID                                                              
INNER JOIN WorklistDetail WLD WITH (NOLOCK) ON WLD.PatientInvId = P1.PatientInvID                                                              
INNER JOIN WorklistMaster WLM WITH (NOLOCK) ON WLM.WMID = WLD.WMID                                                            
INNER JOIN PatternMapping PM WITH (NOLOCK) ON PM.InvestigationID = P1.InvestigationID and PM.Orgid=@OrgID                                                              
INNER JOIN @tblPatternID PM1 ON PM1.PatternID = PM.PatternID                                                              
INNER JOIN InvestigationOrgMapping IOM WITH (NOLOCK) ON IOM.InvestigationID = P1.InvestigationID                                           
AND IOM.OrgID = @OrgID                                  
--Parthi                                                            
--inner join PatientVisit pv with (Nolock) on pv.PatientVisitId=p1.PatientVisitID and pv.VisitType in(@pvisittype)--and   pv.OrgID=@OrgID                                                             
WHERE WLM.WorklistId = @WorkListID                                                              
AND P1.InvestigationID = Isnull(@invID, P1.InvestigationID)                                                              
AND Isnull(P1.statustype, '') NOT IN (                                                              
'RC'                     
,'RR'                                                              
)                                     
AND P1.OrgID = @OrgID                                                              
AND COALESCE(IOM.HeaderID, '') = COALESCE(@pHeaderID, IOM.HeaderID, '')                                                              
AND COALESCE(IOM.DeptID, '') = COALESCE(@pDeptID, IOM.DeptID, '')                                                              
AND COALESCE(IOM.ProtocalGroupID, '') = COALESCE(@protocalID, IOM.ProtocalGroupID, '')                                                              
--Parthi                                               
--and pv.LabVisitType in(@pvisittype)                                                
--and coalesce(pv.LabVisitType,'')=coalesce(@pvisittype,pv.LabVisitType)                                                            
--and @pLocation= @CLocation                                                          
AND IOM.OrgID = @OrgID                                                              
OPTION (                                                              
MAXDOP 1                                                          
,FORCE ORDER                                                              
)                                                          
END                                                              
END                                                              
IF @protocalID IS NOT NULL                                                           
BEGIN                                                              
IF (@WorkListID IS NULL)                                                              
BEGIN                                                  
INSERT INTO #PInvestigationList (ID)                                    
SELECT DISTINCT P1.InvestigationID                                                              
FROM @TempInvestigationStatus TMP                                                              
INNER JOIN #tblPatientInvestigation_Mirror P1 WITH (NOLOCK) ON TMP.Status = P1.Status             
INNER JOIN #tblBatchVisits TV ON TV.VisitID = P1.PatientVisitID                                                              
INNER JOIN PatternMapping PM WITH (NOLOCK) ON PM.InvestigationID = P1.InvestigationID and PM.Orgid=@OrgID                                                              
INNER JOIN @tblPatternID PM1 ON PM1.PatternID = PM.PatternID                                                      
INNER JOIN InvestigationOrgMapping IOM WITH (NOLOCK) ON IOM.InvestigationID = P1.InvestigationID                                                              
AND IOM.OrgID = @OrgID                                                            
INNER JOIN OrderedInvestigations OI WITH (NOLOCK) ON OI.AccessionNumber = P1.AccessionNumber                      
AND OI.OrgID = IOM.OrgID                                                              
INNER JOIN InvOrgGroup IOG WITH (NOLOCK) ON IOG.AttGroupID = OI.ID                       
AND IOG.OrgID = @OrgID                                                              
--Parthi                                                            
--inner join PatientVisit pv with (Nolock) on pv.PatientVisitId=p1.PatientVisitID and pv.LabVisitType in(@pvisittype) --and   pv.OrgID=@OrgID                        
WHERE --COALESCE(WLM.WorklistId, 0) = COALESCE(@WorkListID, WLM.WorklistId, 0)                                                           
IOG.AttGroupID = COALESCE(@groupID, IOG.AttGroupID)           
AND OI.Status=ISNULL(@Status,OI.Status)          
AND COALESCE(OI.PkgID, '') = COALESCE(@packageID, OI.PkgID, '')                                                              
AND Isnull(P1.statustype, '') NOT IN (                                                              
'RC'                                                              
,'RR'                                                              
)                                                              
AND OI.Status NOT IN (                                                              
'Approve'                                           
,'Cancel'                                                              
,'Rejected'                                                              
,'RejectClose'                                                              
,'ForceClose'                                                              
)                                                              
AND P1.OrgID = @OrgID                                                              
AND IOG.ProtocalGroupID = @protocalID                                                              
AND COALESCE(IOM.HeaderID, '') = COALESCE(@pHeaderID, IOM.HeaderID, '')                                                
AND COALESCE(IOM.DeptID, '') = COALESCE(@pDeptID, IOM.DeptID, '')                                                              
--Parthi                                                            
--and pv.LabVisitType in(@pvisittype)                                                  
--and coalesce(pv.LabVisitType,'')=coalesce(@pvisittype,pv.LabVisitType)                                                           
--and @pLocation= @CLocation                                                           
AND IOM.OrgID = @OrgID            AND IOG.OrgID = @OrgID                                                              
AND OI.Type IN (           
'GRP'                 
,'PKG'                                                  
)                                                 
EXCEPT                                                              
SELECT id                                                              
FROM #PInvestigationList                                       
OPTION (                                                              
MAXDOP 1                                                              
,FORCE ORDER                  
)                                               
END                                                              
END                               
ELSE                                                              
BEGIN                                     
INSERT INTO #PInvestigationList (ID)                   
SELECT DISTINCT P1.InvestigationID                                                              
FROM @TempInvestigationStatus TMP                             
INNER JOIN #tblPatientInvestigation_Mirror P1 WITH (NOLOCK) ON TMP.Status = P1.Status                                                              
INNER JOIN #tblBatchVisits TV ON TV.VisitID = P1.PatientVisitID                                                              
INNER JOIN WorklistDetail WLD WITH (NOLOCK) ON WLD.PatientInvId = P1.PatientInvID                                                              
INNER JOIN WorklistMaster WLM WITH (NOLOCK) ON WLM.WMID = WLD.WMID                                                              
INNER JOIN PatternMapping PM WITH (NOLOCK) ON PM.InvestigationID = P1.InvestigationID and PM.Orgid=@OrgID                                                              
INNER JOIN @tblPatternID PM1 ON PM1.PatternID = PM.PatternID                                                              
INNER JOIN InvestigationOrgMapping IOM WITH (NOLOCK) ON IOM.InvestigationID = P1.InvestigationID                                                              
AND IOM.OrgID = @OrgID                                                              
INNER JOIN OrderedInvestigations OI WITH (NOLOCK) ON OI.AccessionNumber = P1.AccessionNumber                                                              
AND OI.OrgID = IOM.OrgID                                                              
INNER JOIN InvOrgGroup IOG WITH (NOLOCK) ON IOG.AttGroupID = OI.ID                           
AND IOG.OrgID = @OrgID                                                              
--Parthi                                                            
--inner join PatientVisit pv with (Nolock) on pv.PatientVisitId=p1.PatientVisitID and pv.LabVisitType in(@pvisittype)--and   pv.OrgID=@OrgID                                                             
WHERE WLM.WorklistId = @WorkListID                                                              
AND IOG.AttGroupID = COALESCE(@groupID, IOG.AttGroupID)       
AND OI.Status=ISNULL(@Status,OI.Status)    
     AND COALESCE(OI.PkgID, '') = COALESCE(@packageID, OI.PkgID, '')                                                              
AND Isnull(P1.statustype, '') NOT IN (                                                              
'RC'                                                              
,'RR'                                                              
)                       
AND OI.Status NOT IN (                                                              
'Approve'                                                    
,'Cancel'                             
,'Rejected'                                                              
,'RejectClose'                                                              
,'ForceClose'                                                              
)                                                              
AND P1.OrgID = @OrgID                                              
AND IOG.ProtocalGroupID = @protocalID                                                              
AND COALESCE(IOM.HeaderID, '') = COALESCE(@pHeaderID, IOM.HeaderID, '')                        
AND COALESCE(IOM.DeptID, '') = COALESCE(@pDeptID, IOM.DeptID, '')                             
--Parthi                                                            
--and pv.LabVisitType in(@pvisittype)                           
--and coalesce(pv.LabVisitType,'')=coalesce(@pvisittype,pv.LabVisitType)                                                            
--and @pLocation= @CLocation                                                          
AND IOM.OrgID = @OrgID                                                              
AND IOG.OrgID = @OrgID                                                              
AND OI.Type IN (                                                              
'GRP'                                                              
,'PKG'                                                              
)                                                      
EXCEPT                          
SELECT id                    
FROM #PInvestigationList                                                              
OPTION (                                                              
MAXDOP 1                                                              
,FORCE ORDER                                                              
)                                                              
END                                                              
END                                                              
ELSE                                                    
BEGIN                                                 
INSERT INTO #PInvestigationList (ID)                                           
SELECT DISTINCT P1.InvestigationID                                                        
FROM DeviceIntegrationOrgMapping DIOM WITH (NOLOCK)      
INNER JOIN #tblPatientInvestigation_Mirror P1 WITH (NOLOCK) ON DIOM.InvestigationID = P1.InvestigationID                                                              
AND DIOM.OrgID = P1.OrgID                                                              
INNER JOIN #tblBatchVisits TV ON TV.VisitID = P1.PatientVisitID                                            
INNER JOIN @TempInvestigationStatus TMP ON TMP.Status = P1.Status                                                              
INNER JOIN PatternMapping PM WITH (NOLOCK) ON PM.InvestigationID = P1.InvestigationID and PM.Orgid=@OrgID                                                              
INNER JOIN @tblPatternID PM1 ON PM1.PatternID = PM.PatternID                                                              
INNER JOIN InvestigationValues INV WITH (NOLOCK) ON P1.PatientVisitID = INV.PatientVisitID                                                              
AND P1.InvestigationID = INV.InvestigationID                                                              
AND P1.GroupID = INV.GroupID                                                              
AND P1.UID = INV.UID                                                              
AND DIOM.DeviceID = INV.DeviceID                                                         
INNER JOIN InvestigationOrgMapping IOM WITH (NOLOCK) ON IOM.InvestigationID = P1.InvestigationID                                                              
AND IOM.OrgID = @OrgID                                                    
--Parthi                                                            
--INNER join PatientVisit pv with (Nolock) on pv.PatientVisitId=p1.PatientVisitID and pv.LabVisitType in(@pvisittype)--and   pv.OrgID=@OrgID                                                             
WHERE DIOM.InstrumentID = @DeviceID                                                              
AND COALESCE(IOM.DeptID, '') = COALESCE(@pDeptID, IOM.DeptID, '')                                                              
--Parthi                                              
--and pv.LabVisitType in(@pvisittype)                                     
--and coalesce(pv.LabVisitType,'')=coalesce(@pvisittype,pv.LabVisitType)                                                
--and @pLocation= @CLocation                                                          
AND Isnull(P1.statustype, '') NOT IN (                          
'RC'                
,'RR'                                                              
)                    
AND P1.OrgID = @OrgID                                                              
AND Isnull(INV.statustype, '') NOT IN (                                                          
'RC'                                                              
,'RR'                             
)                                       
AND INV.OrgID = @OrgID                                                              
AND IOM.OrgID = @OrgID                                                              
END                                  
INSERT INTO @tblAccessionNos (AccessionNo)                                                           
SELECT DISTINCT Pinv.AccessionNumber               
FROM #tblBatchVisits tbv                                                              
INNER JOIN #tblPatientInvestigation_Mirror Pinv WITH (NOLOCK) ON tbv.VisitID = Pinv.PatientVisitID                                                              
AND OrgID = @OrgID                                         
INNER JOIN @TempInvestigationStatus TMP ON TMP.Status = Pinv.Status                                                              
INNER JOIN #PInvestigationList T ON T.ID = Pinv.InvestigationID       
                                                         
INSERT INTO #OrderedPatientInv                               
SELECT [PatientVisitID]                                                              
,[pInvestigation].InvestigationID         
,[InvestigationName]                                                              
,[InvestigationMethodID]                                                              
,[InvestigationSampleContainerID]                                              
,pInvestigation.[SampleID]                                                              
,[GroupID]                                                              
,[GroupName]                                                              
,[Reason]                                                              
,[ReferenceRange]                                                              
,[MethodName]                                                              
,[pInvestigation].OrgID                                                              
,[WorklistDeletedStatus]                                                              
,[PerformingPhysicainName]                                                              
,[KitID]                                                              
,[KitName]                                                           
,[InstrumentID]                                                              
,[InstrumentName]                                        
,[Interpretation]                                                              
,[PrincipleID]                                                              
,[PrincipleName]                           
,[QCData]                                                              
,OI.PkgID                                                              
,OI.PkgName                                                              
,[ApprovedBy]                                                              
,[PatientInvID]                                                              
,[pInvestigation].UID                                               
,[GroupComment]                                                              
,[ApprovedAt]          
,[pInvestigation].AccessionNumber                                                              
,OI.ReferredAccessionNo                                                              
,GroupMedicalRemarks                                                              
,PrintableRange               
FROM #tblBatchVisits tbv                                    
INNER JOIN OrderedInvestigations OI WITH (NOLOCK) ON tbv.VisitID = OI.VisitID                                                              
AND OI.OrgID = @OrgID                                               
--INNER JOIN @tblAccessionNos tbl                
--          ON tbl.AccessionNo = OI.ReferredAccessionNo                                                        
    INNER JOIN #tblPatientInvestigation_Mirror pInvestigation WITH (NOLOCK) ON pInvestigation.AccessionNumber = OI.AccessionNumber            
                         
AND OI.OrgID = pInvestigation.OrgID                                                              
-- INNER JOIN #PInvestigationList T                                                                
--         ON T.ID = pInvestigation.InvestigationID                                                              
INNER JOIN @TempInvestigationStatus TMP ON TMP.Status = pInvestigation.Status                                                              
WHERE pInvestigation.OrgID = @OrgID                                                              
AND OI.OrgID = @OrgID   AND OI.Status=ISNULL(@Status,OI.Status)                                                           
-- AND pInvestigation.AccessionNumber IN                                                                                                  
-- (                                                        
-- SELECT AccessionNumber FROM OrderedInvestigations OI WITH(NOLOCK)                                                           
-- INNER JOIN @tblAccessionNos tbl ON tbl.AccessionNo  = OI.ReferredAccessionNo                                          
        
                                
                                  
                                    
                                      
                                        
                                          
                                            
                                             
--)                                           
AND Isnull(pInvestigation.statustype, '') NOT IN (                                                              
'RC'                                                              
,'RR'                                                              
)                                                              
AND OI.Status NOT IN (                                                              
'Approve'                                                              
,'Cancel'                                                              
,'Rejected'                                                              
,'RejectClose'                                                              
,'ForceClose'                                                              
)       
    
                                                             
INSERT INTO @tblAffectedVisits                                                              
SELECT PatientVisitId                        
,PatientID                                                              
,OrgID                                    
--,VisitNumber                                              
,                                                              
CASE +@SearchConfig                                                              
WHEN 'Y' THEN ExternalVisitID                                                              
ELSE VisitNumber                                                              
END AS VisitNumber                                                              
FROM PatientVisit WITH (NOLOCK)                                                              
INNER JOIN #tblBatchVisits TBV ON TBV.VisitID = PatientVisitId                                                              
WHERE OrgID = @OrgID -- AND PatientVisitId in(select VisitID from #tblBatchVisits)                                                                                                                                                                       
UNION      
                                 
SELECT PatientVisitID                                                              
,PatientID                                                              
,OrgID                                                              
--VisitNumber                                                              
,                      
CASE +@SearchConfig                                  
WHEN 'Y' THEN ExternalVisitID                                                              
ELSE VisitNumber                               
END AS VisitNumber                                                              
FROM PatientVisit WITH (NOLOCK)                                                         
INNER JOIN #tblBatchVisits TBV ON TBV.VisitID = ReferVisitID                                                              
WHERE OrgID = @OrgID -- AND ReferVisitID in(select VisitID from #tblBatchVisits)                                                              
INSERT INTO @tblAffectedPatients (                        
PatientID                                                              
,VisitID                                                              
,PatientName                                                   
,PatientNumber                                                              
,Age                                                              
,Sex                                                              
,OrgID                                                              
,VisitNumber                                                              
)         
SELECT t.PatientID                                                  
,t.VisitID                                                              
,p.Name                                                              
,p.PatientNumber                                   
,p.Age                                                              
,p.SEX                                                  
,t.OrgID                                                              
,t.VisitNumber                                                              
FROM Patient P WITH (NOLOCK)                                                              
INNER JOIN @tblAffectedVisits t ON P.PatientID = t.PatientID                                                              
AND P.OrgID = @OrgID                                                              
INSERT INTO @TempDeptInvStatus                                                              
SELECT Status                                                              
FROM @TempInvestigationStatus                                                              
IF (@pActionName = 'EnterResult')                                                              
BEGIN                                                              
IF NOT EXISTS (                                                              
SELECT 1                                                              
FROM @TempDeptInvStatus                                                              
WHERE Status = 'SampleReceived'                                                              
)                                               
BEGIN                                                              
INSERT INTO @TempDeptInvStatus (Status)                                                              
VALUES ('SampleReceived')                                                            
END                                                              
END                                                              
DECLARE @Batchwiseforoneday CHAR(1);                                                              
SET @Batchwiseforoneday = (                                                              
SELECT 1                                                              
FROM ConfigKeyMaster CM                       
INNER JOIN ConfigOrgMaster CKM ON CM.ConfigKeyID = CKM.ConfigKeyID      
WHERE CM.ConfigKey = 'IGEN_BatchWiseEndResult'                                                             
AND CKM.OrgID = @OrgID                           
AND ConfigValue = 'Y'                                                              
);          
    
                                                      
INSERT INTO #tblPatientInvestigation                                      
SELECT DISTINCT [PatientInvID]                                                           
,PINV.[PatientVisitID]                                                              
,[PINV].InvestigationID                                                              
,[InvestigationName]                                               
,PINV.[CreatedBy]                                                              
,PINV.[CreatedAt]                                                        
,PINV.[ModifiedBy]                    
,PINV.[ModifiedAt]                   
,[InvestigationMethodID]                                                              
,[InvestigationSampleContainerID]                                                   
,PINV.[SampleID]                                                              
,[InvestigationSiteID]                                                              
,[IsCompleted]                                                              
,[CollectedDateTime]                                                        
,PINV.[Status]                                                              
,PINV.[ComplaintId]                                                              
,[GroupID]             
,[GroupName]                                                         
,[Reason]                           
,[ReportStatus]                                                              
,PINV.[ReferenceRange]                                                              
,[MethodName]                                                              
,[IPInvSampleCollectionMasterID]                                                              
,PINV.[OrgID]                  ,[WorklistDeletedStatus]                                                              
,[PerformingPhysicainName]                                                              
,PINV.[KitID]                                                              
,[KitName]                                                              
,PINV.[InstrumentID]                                                              
,[InstrumentName]                             
,PINV.[Interpretation]                                                              
,PINV.[PrincipleID]                                                              
,[PrincipleName]                                                              
,PINV.[QCData]                                                              
,OI.PkgID                                                           
,OI.PkgName                                                              
,[ApprovedBy]                                                          
,[OrderedAt]                                                              
,PINV.[UID]                                                              
,[GroupComment]                                                              
,[ApprovedAt]                                                              
,PINV.[AccessionNumber]                        ,IOM.UOMCode                                                              
,IOM.UOMID                                                             
,PINV.IsAbnormal                                         
,PINV.GroupMedicalRemarks                                                              
,OI.LabNo                                                              
,(                                                              
CASE                    
WHEN PINV.IsAbnormal = ''                                                              
OR Isnull(PINV.IsAbnormal, 'N') = 'N'                                                              
THEN 'N'                                                              
ELSE 'Y'                                                              
END                                                              
) AS IsAbnormalResult                                         
,''                                                              
,Stuff((                                                          
SELECT DISTINCT ', ' + CONVERT(NVARCHAR, PIS.Barcode)                                     
FROM PatientInvSampleMapping PIS(NOLOCK)                                          
WHERE PIS.VisitID = OI.VisitID             
AND PIS.UID = OI.UID                                                              
AND PIS.ID = OI.ID                                                              
AND PIS.Type = OI.Type                                                              
FOR XML PATH('')                            
), 1, 2, '') AS BarcodeNumber                                                              
,PrintableRange                                                              
,1                              
,0                                                              
,PINV.IsAutoAuthorize                                                              
,Isnull(IOM.IsAutoValidate, '') AS IsAutoValidate                            
,Isnull(IOM.IsAllowNull, '') AS IsAllowNull                                                              
,Isnull(IOM.CONV_UOMID, 0) AS CONV_UOMID                                                              
,Isnull(IOM.CONV_UOMCode, '') AS CONV_UOMCode                                                 
,Isnull(IOM.CONV_Factor, 0) AS CONV_Factor                                                              
,Isnull(IOM.ConvFac_DecimalPoint, 0) AS CONVFactorDecimalPt                                            
,PINV.ConvReferenceRange                                                              
,''                                                              
,''                                                              
FROM @tblAffectedVisits TAV                                                              
INNER JOIN PatientVisit PV(NOLOCK) ON PV.PatientVisitId = TAV.VisitID                                                              
AND PV.OrgID = @OrgID                                                              
INNER JOIN OrderedInvestigations OI WITH (NOLOCK) ON OI.Visitid = PV.Patientvisitid                                                              
AND OI.OrgID = @OrgID                                                              
INNER JOIN @tblAccessionNos tbl ON tbl.AccessionNo = OI.AccessionNumber                                                         
INNER JOIN #tblPatientInvestigation_Mirror PINV WITH (NOLOCK) ON OI.AccessionNumber = PINV.AccessionNumber                                                              
AND OI.OrgID = PINV.OrgID                                                              
INNER JOIN #PInvestigationList T ON T.ID = PINV.InvestigationID                                                              
INNER JOIN InvestigationOrgMapping IOM WITH (NOLOCK) ON IOM.InvestigationID = T.ID                                                              
AND IOM.OrgID = @OrgID                                                              
INNER JOIN @TempInvestigationStatus TMP ON TMP.Status = PINV.Status                                                     
AND Isnull(PINV.statustype, '') NOT IN (                                                              
'RC'                                                              
,'RR'                                                              
)                             
AND OI.Status NOT IN (      
'Approve'                                                              
,'Cancel'                                                              
,'Rejected'                                                              
,'RejectClose'                                                              
,'ForceClose'                                                              
)            
AND PINV.OrgID = @OrgID                           
AND OI.OrgID = @OrgID                      
WHERE COALESCE(OI.ResCaptureLoc, PV.OrgAddressID) = @OrgAddressID                                                              
AND OI.OrgID = @OrgID   AND OI.Status=ISNULL(@Status,OI.Status)                                                           
AND CAST(PV.CreatedAt AS DATE) >= (                               
CASE                                 
WHEN ISNULL(@Batchwiseforoneday, 0) =2                                                            
THEN CAST(dbo.Fn_getserverdate(@ContextInfo) - 1 AS DATE)     
ELSE CAST(dbo.Fn_getserverdate(@ContextInfo) - 30 AS DATE)                                                              
END                                                              
)                                 
OPTION (FORCE ORDER)                                                      
                                                       
INSERT INTO #tblDependentInvestigation                             
SELECT DISTINCT [PatientInvID]                                                          
,PINV.[PatientVisitID]                                                              
,[PINV].InvestigationID                                                
,[InvestigationName]                                                              
,PINV.[CreatedBy]                                                              
,PINV.[CreatedAt]                                  
,PINV.[ModifiedBy]                        ,PINV.[ModifiedAt]                  
,[InvestigationMethodID]          
,[InvestigationSampleContainerID]                                                              
,PINV.[SampleID]                             
,[InvestigationSiteID]                                                              
,[IsCompleted]                                                              
,[CollectedDateTime]                                                              
,PINV.[Status]                                                              
,PINV.[ComplaintId]                                                              
,PINV.[GroupID]                                                              
,[GroupName]                                                              
,[Reason]                                                              
,[ReportStatus]                                          
,PINV.[ReferenceRange]                                                              
,[MethodName]                                                              
,[IPInvSampleCollectionMasterID]                                                              
,PINV.[OrgID]                                                              
,[WorklistDeletedStatus]                                                    
,[PerformingPhysicainName]                                                              
,PINV.[KitID]                                                              
,[KitName]                                                              
,PINV.[InstrumentID]                                    
,[InstrumentName]                               
,PINV.[Interpretation]                                                              
,PINV.[PrincipleID]                                                              
,[PrincipleName]                                                            
,PINV.[QCData]                                                              
,OI.PkgID                                                              
,OI.PkgName                                                              
,[ApprovedBy]                                                              
,[OrderedAt]                                       
,PINV.[UID]                                                              
,[GroupComment]                                               
,[ApprovedAt]                                                              
,PINV.[AccessionNumber]                                                           
,IOM.UOMCode                          
,IOM.UOMID                                                              
,PINV.IsAbnormal                                                              
,PINV.GroupMedicalRemarks                                                              
,OI.LabNo                             ,Isnull(@pIsAbnormal, '') AS IsAbnormalResult                                                              
,''                      
,Stuff((                                                        
SELECT DISTINCT ', ' + CONVERT(NVARCHAR, PIS.Barcode)                            
FROM PatientInvSampleMapping PIS                                                              
WHERE PIS.VisitID = OI.VisitID                                                    
AND PIS.UID = OI.UID                                                              
AND PIS.ID = OI.ID                                                              
AND PIS.Type = OI.Type                                                              
FOR XML PATH('')                                                              
), 1, 2, '') AS BarcodeNumber                                                              
,PrintableRange                                                        
,1                                                              
,1                                                              
,DINV.InvestigationID                                                 
,PINV.IsAutoAuthorize                                                              
,Isnull(IOM.IsAutoValidate, '') AS IsAutoValidate                                  
,Isnull(IOM.IsAllowNull, '') AS IsAllowNull                                                              
,Isnull(IOM.CONV_UOMID, 0) AS CONV_UOMID                                                              
,Isnull(IOM.CONV_UOMCode, '') AS CONV_UOMCode                                     
,Isnull(IOM.CONV_Factor, 0) AS CONV_Factor                                                              
,Isnull(IOM.ConvFac_DecimalPoint, 0) AS CONVFactorDecimalPt                                                              
,PINV.ConvReferenceRange                                                              
FROM @tblAffectedVisits TAV                                                              
INNER JOIN PatientVisit PV(NOLOCK) ON PV.PatientVisitId = TAV.VisitID                                                              
AND PV.OrgID = @OrgID                                                              
INNER JOIN OrderedInvestigations OI WITH (NOLOCK) ON OI.Visitid = PV.Patientvisitid                                                              
AND OI.Type = 'GRP'                                                              
AND OI.OrgID = @OrgID                                               
INNER JOIN @tblAccessionNos tbl ON tbl.AccessionNo = OI.AccessionNumber                                                              
INNER JOIN #tblPatientInvestigation_Mirror PINV WITH (NOLOCK) ON OI.AccessionNumber = PINV.AccessionNumber                              
AND Isnull(PINV.GroupID, 0) > 0                        
AND PINV.OrgID = OI.OrgID                                  
INNER JOIN @TempInvestigationStatus TMP ON TMP.Status = PINV.Status                                                              
INNER JOIN DependentInvestigation DINV WITH (NOLOCK) ON DINV.DependentInvestigationID = PINV.InvestigationID                                                              
AND DINV.DependentType = 'Formula'                                                              
AND DINV.OrgID = @OrgID                                                              
INNER JOIN #PInvestigationList T ON T.ID = DINV.InvestigationID                                                       
INNER JOIN InvOrgGroup IOG WITH (NOLOCK) ON IOG.AttGroupID = OI.ID                                                              
AND IOG.OrgGroupID = DINV.GroupID                         
AND IOG.OrgID = OI.OrgID                   
INNER JOIN InvestigationOrgMapping IOM WITH (NOLOCK) ON IOM.InvestigationID = PINV.InvestigationID                                                              
AND IOM.OrgID = @OrgID     
AND Isnull(PINV.statustype, '') NOT IN (                                                              
'RC'                                                              
,'RR'                                                             
)       
AND OI.Status NOT IN (                                                              
'Approve'                                         
,'Cancel'                                                              
,'Rejected'                                     
,'RejectClose'                                                              
,'ForceClose'                                           
)                                                              
AND PINV.OrgID = @OrgID                                                              
AND OI.OrgID = @OrgID                                                              
WHERE COALESCE(OI.ResCaptureLoc, PV.OrgAddressID) = @OrgAddressID                                         
AND PV.OrgID = @OrgID  AND OI.Status=ISNULL(@Status,OI.Status)                                                            
AND OI.OrgID = @OrgID                                                              
AND PV.OrgID = @OrgID                                                             
AND IOM.OrgID = @OrgID                                                              
OPTION (FORCE ORDER)                                                              
DELETE T                                                              
FROM #tblPatientInvestigation T                                                              
INNER JOIN #tblDependentInvestigation T1 ON T1.PatientInvID = T.PatientInvID                                                              
--select * from @tblPatientInvestigation                                                                                                 
--select * from #tblPatientInvestigation       
                                                                                                                                        
UPDATE TBL                                                              
SET TBL.Flag = 1                                                              
,TBL.IsAbnormalResult = Isnull(@pIsAbnormal, '')                                             
,tbl.QCData=ISNULL(@pQccheck,'')                                                     
FROM #tblPatientInvestigation TBL                                                              
INNER JOIN #tblDependentInvestigation T ON TBL.InvestigationID = T.DepInvID                                           
AND TBL.GroupID = T.GroupID                                                              
AND Isnull(TBL.PackageID, 0) = Isnull(T.PackageID, 0)                                                              
AND T.PatientVisitID = TBL.PatientVisitID                               
INSERT INTO #tblPatientInvestigation                                                              
SELECT DISTINCT PatientInvID                                                              
,PatientVisitID                                                              
,InvestigationID                                                              
,InvestigationName                        
,CreatedBy                                                        
,CreatedAt                                                              
,ModifiedBy                                             
,ModifiedAt                                                            
,InvestigationMethodID                                                              
,InvestigationSampleContainerID                                                              
,SampleID                                                              
,InvestigationSiteID                                                              
,IsCompleted                                                              
,CollectedDateTime                                                              
,Status     
,ComplaintId                                                     
,GroupID                                                              
,GroupName                                                              
,Reason                                                              
,ReportStatus                
,ReferenceRange                                                              
,MethodName                                                              
,IPInvSampleCollectionMasterID                                                              
,OrgID                                                              
,WorklistDeletedStatus                                                              
,PerformingPhysicainName                                                    
,KitID                                                              
,KitName                                 
,InstrumentID                                                              
,InstrumentName                                                              
,Interpretation                                     
,PrincipleID                                                              
,PrincipleName                                                 
,QCData                                                              
,PackageID                                 
,PackageName                                       
,ApprovedBy                                                              
,OrderedAt                                               
,UID                                                              
,GroupComment                                                      
,ApprovedAt               
,AccessionNumber                                                              
,UOMCode                             
,UOMID                                                              
,IsAbnormal                                                              
,GroupMedicalRemarks                                                              
,LabNo                                            
,IsAbnormalResult                                                              
,TestStatus                                                              
,BarcodeNumber                                                              
,PrintableRange                                                              
,Valueseq                                                   
,Flag                                                              
,IsAutoAuthorize            
,IsAutoValidate                                              ,IsAllowNull                                                              
,CONV_UOMID                           
,CONV_UOMCode                                                              
,CONV_Factor                                       
,CONVFactorDecimalPt                                                              
,ConvReferenceRange                                                              
,''                                                              
,''                                                              
FROM #tblDependentInvestigation                                         
UPDATE TBL                                                              
SET TBL.TestStatus = (       
CASE                                                               
WHEN PINV.ReferredType = 'ReflexTest'                                                              
THEN 'RF'                                                              
ELSE ''                                                              
END                                   
)                                                              
FROM #tblPatientInvestigation TBL                                                              
INNER JOIN OrderedInvestigations PINV(NOLOCK) ON PINV.AccessionNumber = TBL.AccessionNumber                                                              
WHERE PINV.OrgID = @OrgID                          
AND Isnull(PINV.ReferredType, '') IN ('ReflexTest')                           
UPDATE TBL                                                              
SET TBL.TestStatus = (                                                              
CASE PINV.statustype                                                              
WHEN 'RC'              
THEN 'RR'                                                              
WHEN 'RR'                                                              
THEN 'RC'                                             
WHEN 'FE'                                          
THEN 'FE'                                                              
ELSE ''                                                              
END                                                              
)                                                              
FROM #tblPatientInvestigation TBL                                                        
INNER JOIN PatientInvestigation PINV(NOLOCK) ON TBL.InvestigationID = PINV.InvestigationID                                                              
AND TBL.GroupID = PINV.GroupID                           
AND PINV.PatientVisitID = TBL.PatientVisitID                                                              
WHERE PINV.OrgID = @OrgID                                                              
AND Isnull(PINV.statustype, '') IN (                                                           
'RC'                                                              
,'RR'                                                              
,'FE'                                                              
)          
    
UPDATE TBL    
SET    TBL.TestStatus ='OS'    
FROM   #tblPatientInvestigation TBL    
INNER JOIN OutsourcingDetail OD (nolock)    
ON OD.AccessionNumber=TBL.AccessionNumber AND TBL.PatientVisitID=OD.PatientVisitID    
    
--UPDATE TBL                                                        
--SET TBL.TestStatus=(CASE WHEN PINV.statustype='RC' THEN 'RR' ELSE (CASE WHEN PINV.statustype='RR' THEN 'RC' END) END)                                                                                                                                    
--FROM #tblPatientInvestigation TBL                                                                                                                                    
--INNER JOIN PatientInvestigation PINV (nolock) on TBL.PatientInvID = PINV.PatientInvID                                                                                                            
--WHERE PINV.OrgID=@OrgID AND ISNULL(PINV.statustype,'') in ('RC','RR')                                             
UPDATE TBL                                                              
SET TBL.IsAbnormalResult = ''                                                              
FROM #tblPatientInvestigation TBL                                                              
WHERE TBL.Status = 'SampleReceived'                                                              
AND TBL.Flag = 0                                                              
UPDATE TBL                                                             
SET TBL.IsAbnormalResult = (                                                              
CASE                           
WHEN Isnull(INV.Value, '') = ''                                                              
THEN ''                                                              
ELSE TBL.IsAbnormalResult                                                              
END                                                              
)                                                              
FROM #tblPatientInvestigation TBL                                                              
LEFT JOIN InvestigationValues INV(NOLOCK) ON TBL.InvestigationID = INV.InvestigationID                   
AND TBL.GroupID = INV.GroupID                                    
AND TBL.UID = INV.UID                                                              
AND INV.PatientVisitID = TBL.PatientVisitID                 
AND INV.OrgID = @OrgID                                                              
AND Isnull(INV.statustype, '') NOT IN (                                                              
'RC'                                                              
,'RR'                                                              
)                                                              
WHERE TBL.Flag = 0                                                              
OPTION (FORCE ORDER)                                                          
UPDATE TBL                                                          
SET Tbl.ErrorDescription = (                                                              
CASE                                                               
WHEN INV.DeviceID = ''                                                              
THEN 'N'                                                              
ELSE CASE                                                               
WHEN INV.DeviceID = dv.DeviceCode                                                    
THEN 'Y'                                             
ELSE 'N'                                            
END                                                              
END                                        
)                                                              
,TBL.ErrorCode = INV.DeviceErrorCode                                                              
FROM #tblPatientInvestigation TBL                                                              
LEFT JOIN InvestigationValues INV(NOLOCK) ON TBL.InvestigationID = INV.InvestigationID                                                              
AND TBL.GroupID = INV.GroupID                                                              
AND TBL.UID = INV.UID                                                              
AND INV.PatientVisitID = TBL.PatientVisitID                     
AND INV.OrgID = @OrgID                                                              
LEFT JOIN DeviceErrorFlag DV ON DV.DeviceCode = INV.DeviceID                                         
AND DV.ErrorCode = INV.DeviceErrorCode                                                              
DECLARE @tblDeptFlag AS TABLE (AccessionNo BIGINT)                                                              
INSERT INTO @tblDeptFlag                                              
SELECT TBL.AccessionNumber                                                              
FROM #tblPatientInvestigation TBL                                 
INNER JOIN InvestigationValues INV(NOLOCK) ON TBL.InvestigationID = INV.InvestigationID                                                              
AND TBL.GroupID = INV.GroupID                                                              
AND TBL.UID = INV.UID                                                              
AND INV.PatientVisitID = TBL.PatientVisitID                                                              
AND INV.OrgID = @OrgID                      
AND Isnull(INV.statustype, '') NOT IN (                                                              
'RC'                                                              
,'RR'                                                              
)                                               
WHERE TBL.Flag = 1                                                              
GROUP BY TBL.AccessionNumber                                                              
UPDATE p1                                                              
SET IsAbnormalResult = ''                                 
FROM #tblPatientInvestigation P1                                                              
WHERE P1.Flag = 1                                                              
AND P1.AccessionNumber NOT IN (                                 
SELECT AccessionNo                  
FROM @tblDeptFlag                                                              
)         
    
                                                       
IF Isnull(@WorkListID, 0) = 0                                             
BEGIN                                                              
;                                                              
WITH CTE_Valueseq                                                              
AS (                                                              
SELECT TBL.PatientVisitID                                                      
,Min(INV.Patientvisitid) AS valueSeq                                                              
FROM #tblPatientInvestigation TBL                                                              
LEFT JOIN InvestigationValues INV(NOLOCK) ON TBL.InvestigationID = INV.InvestigationID                                                              
AND TBL.GroupID = INV.GroupID                                                              
AND TBL.UID = INV.UID                                 
AND INV.PatientVisitID = TBL.PatientVisitID                                                              
AND INV.OrgID = @OrgID                                             
AND Isnull(INV.statustype, '') NOT IN (                                                              
'RC'                                                         
,'RR'                                                              
)                                                              
GROUP BY TBL.PatientVisitID                          
)                                                              
UPDATE p1                                                              
SET valueseq = CASE                                                               
WHEN Isnull(t.valueSeq, 0) = 0                                                              
THEN 1                                                              
ELSE 0                                                              
END                                                              
FROM CTE_valueseq t                                                              
INNER JOIN #tblPatientInvestigation P1 ON t.patientvisitid = p1.patientvisitid                                                              
END                                                              
----Doubt Start-------                                                                                                                                
UPDATE #tblPatientInvestigation               
SET ReferenceRange = ORDBTL.ReferenceRange                                                              
,MethodName = ORDBTL.MethodName                                                              
,Reason = ORDBTL.Reason                                                              
,Interpretation = ORDBTL.Interpretation                                                              
,KitName = ORDBTL.KitName                                                              
,PrintableRange = ORDBTL.PrintableRange              
--,MethodName = TBL1.MethodName                                                                
FROM #tblPatientInvestigation TBL1                                                              
INNER JOIN #OrderedPatientInv ORDBTL ON ORDBTL.InvestigationID = TBL1.InvestigationID                                                              
AND ORDBTL.RefAccessionNumber = TBL1.AccessionNumber                                               
--AND ORDBTL.GroupID = TBL1.GroupID and ORDBTL.PatientVisitID = TBL1.PatientVisitID                                                                                                               
----Doubt End-----                                                
                                                                                                                                                 
DECLARE @ResultSet TABLE (                                                           
PatientID BIGINT                                   
,PatientVisitID BIGINT                                                          
,AccessionNumber BIGINT                                                              
,InvestigationID BIGINT                                                              
,InvestigationName [nvarchar](250)                                                              
,GroupID [INT]                      
,GroupName [nvarchar](250)                                                              
,[PackageID] [INT]                             
,[PackageName] [nvarchar](255)                                                           
,DeptID INT                                         
,DeptName [nvarchar](250)                                                              
,UOMID INT                                                              
,UOMCode NVARCHAR(255)                                                              
,ReferenceRange [nvarchar](max)                                                              
,PatternID BIGINT                                                              
,PatternName NVARCHAR(200)                                  
,GroupComment [nvarchar](255)                                                 
,Validationtext NVARCHAR(MAX)                                                              
,IsAbnormal NVARCHAR(50)                                           
,InvValidationText NVARCHAR(MAX)                                                        
,GroupMedicalRemarks [nvarchar](255)                                                              
,ResultValueType NVARCHAR(200)                       
,DecimalPlaces NVARCHAR(20)                                                              
,[UID] [nvarchar](255)                                                              
,PatientName NVARCHAR(255)                                                              
,PatientNumber NVARCHAR(30)                                                              
,Age NVARCHAR(20)                                                              
,Sex NVARCHAR(10)                                                              
,AutoApproveLoginID BIGINT                                                       
,IsExAuto NCHAR(1)                                                              
,VisitNumber NVARCHAR(256)                                                              
,LabNo NVARCHAR(30)                                                       
,GrpSeqNo INT                                                              
,InvSeqNo INT                                                              
,TestStatus NVARCHAR(5)                                                              
,BarcodeNumber NVARCHAR(250)                                                              
,PrintableRange NVARCHAR(max)                                                              
,PatientInvID BIGINT                                                              
,IsNonEditable BIT                                                    
,valueseq TINYINT                                                              
,[Status] NVARCHAR(100)                                                              
,[Reason] [nvarchar](250)                                                 
--,[Visittype] nvarchar(50)                                                            
)                                                              
CREATE TABLE #ResultSetByRowID (                                                              
RowID BIGINT IDENTITY(1, 1) PRIMARY KEY                                                              
,RowNo BIGINT                                                     
,PatientID BIGINT                                                              
,PatientVisitID BIGINT                                                              
,AccessionNumber BIGINT                                                              
,InvestigationID BIGINT                              
,InvestigationName [nvarchar](250)                                                         
,GroupID [INT]                                                              
,GroupName [nvarchar](250)                                                              
,[PackageID] [INT]                                                              
,[PackageName] [nvarchar](255)                                                              
,DeptID INT                                                              
,DeptName [nvarchar](250)                                                              
,UOMID INT                                                              
,UOMCode NVARCHAR(255)              
,ReferenceRange [nvarchar](max)                                     
,PatternID BIGINT                                 
,PatternName NVARCHAR(200)                                                              
,GroupComment [nvarchar](255)                                                              
,Validationtext NVARCHAR(MAX)                                                              
,IsAbnormal NVARCHAR(50)                         
,InvValidationText NVARCHAR(MAX)                                                              
,GroupMedicalRemarks [nvarchar](255)                     
,ResultValueType NVARCHAR(200)                                                              
,DecimalPlaces NVARCHAR(20)                            
,[UID] [nvarchar](255)             
,PatientName NVARCHAR(255)                                                              
,PatientNumber NVARCHAR(30)                                                              
,Age NVARCHAR(20)                                                              
,Sex NVARCHAR(10)                                                              
,AutoApproveLoginID BIGINT              
,IsExAuto NCHAR(1)                                                              
,VisitNumber NVARCHAR(256)                                                              
,LabNo NVARCHAR(30)                                                      
,GrpSeqNo INT                                                              
,InvSeqNo INT                                                              
,TestStatus NVARCHAR(5)                                                              
,BarcodeNumber NVARCHAR(250)                                      
,PrintableRange NVARCHAR(max)                                               
,PatientInvID BIGINT                                                              
,IsNonEditable BIT                                                              
,DeptSeq INT                                                              
,FirstLvlSeq INT                          
,GrpContentSeq INT                                                              
,InnerContentSeq INT                                                              
,L2ContentSeq INT                          
,valueseq TINYINT                                                              
,[Status] NVARCHAR(100)                                                              
,IsAutoAuthorize NVARCHAR(1)                                                              
,IsAutoValidate NVARCHAR(1)                                                              
,IsAllowNull NVARCHAR(1)                                                              
,CONV_UOMID INT                                                              
,CONV_UOMCode NVARCHAR(50)                                                              
,CONV_Factor DECIMAL(18, 9)                
,CONVFactorDecimalPt INT                                                              
,ConvReferenceRange NVARCHAR(max)                                                              
,ErrorDescription NVARCHAR(255)                                                              
,ErrorCode NVARCHAR(5)                                   
,[Reason] [nvarchar](250)     
,[CollectedDateTime] DATETIME                                                             
)                   
DECLARE @ResultSetByRowIDWithHeader TABLE (                                                              
RID INT IDENTITY(1, 1) PRIMARY KEY                                                              
,RowID BIGINT                                                              
,RowNo BIGINT                                                              
,PatientID BIGINT                                                              
,PatientVisitID BIGINT                                                              
,AccessionNumber BIGINT              
,InvestigationID BIGINT                                                        
,InvestigationName [nvarchar](Max)                                                              
,GroupID [INT]                                                              
,GroupName [nvarchar](250)                                                              
,[PackageID] [INT]                                                              
,[PackageName] [nvarchar](255)    
,DeptID INT                                                              
,DeptName [nvarchar](250)                                                             
,UOMID INT                ,UOMCode NVARCHAR(255)                                                              
,ReferenceRange [nvarchar](max)                                                              
,PatternID BIGINT                 
,PatternName NVARCHAR(200)                                    
,GroupComment [nvarchar](255)                                               
,Validationtext NVARCHAR(MAX)                                         
,IsAbnormal NVARCHAR(50)                                                              
,InvValidationText NVARCHAR(MAX)                                                         
,GroupMedicalRemarks [nvarchar](255)                                                              
,ResultValueType NVARCHAR(200)                                                       
,DecimalPlaces NVARCHAR(20)                                                              
,[UID] [nvarchar](255)                                           
,PatientName NVARCHAR(255)                                                
,PatientNumber NVARCHAR(30)                                                              
,Age NVARCHAR(20)                                                              
,Sex NVARCHAR(10)                                                              
,AutoApproveLoginID BIGINT                                                              
,IsExAuto NCHAR(1)                                                              
,COUNTS BIGINT                                                              
,VisitNumber NVARCHAR(256)        
,LabNo NVARCHAR(30)                                                              
,GrpSeqNo INT                                                              
,InvSeqNo INT                                
,TestStatus NVARCHAR(5)                                                              
,BarcodeNumber NVARCHAR(250)                                                              
,PrintableRange NVARCHAR(max)                                                              
,PatientInvID BIGINT                                                              
,IsNonEditable BIT                                                              
,DeptSeq INT                                                        
,FirstLvlSeq INT                                
,GrpContentSeq INT                                                  
,InnerContentSeq INT                                                              
,L2ContentSeq INT                                                              
,ClientID BIGINT                                                              
,valueseq TINYINT                                                              
,[Status] NVARCHAR(100)                                                              
,IsAutoAuthorize NVARCHAR(1)                                              
,IsAutoValidate NVARCHAR(1)                                                              
,IsAllowNull NVARCHAR(1)                                                              
,CONV_UOMID INT                                                        
,CONV_UOMCode NVARCHAR(50)                                                              
,CONV_Factor DECIMAL(18, 9)                                                              
,CONVFactorDecimalPt INT                                                              
,ConvReferenceRange NVARCHAR(max)           
,ErrorDescription NVARCHAR(255)                                                              
,ErrorCode NVARCHAR(5)                                                 
,[Reason] [nvarchar](250)        
,[CollectedDateTime] DATETIME                                                        
)                                                              
DECLARE @ResultSetByRowIDWithHeader_Mirror TABLE (               
RID INT IDENTITY(1, 1) PRIMARY KEY                                                              
,RowID BIGINT                                                              
,RowNo BIGINT                                                              
,PatientID BIGINT                                                              
,PatientVisitID BIGINT                                                              
,AccessionNumber BIGINT                                                              
,InvestigationID BIGINT                                            
,InvestigationName [nvarchar](Max)                                                              
,GroupID [INT]                                                     
,GroupName [nvarchar](250)                                                              
,[PackageID] [INT]                                                              
,[PackageName] [nvarchar](255)                         
,DeptID INT                                                              
,DeptName [nvarchar](250)                   
,UOMID INT                     
,UOMCode NVARCHAR(255)                                                       
,ReferenceRange [nvarchar](max)                                                              
,PatternID BIGINT                                                              
,PatternName NVARCHAR(200)                    
,GroupComment [nvarchar](255)                                                              
,Validationtext NVARCHAR(MAX)                                    
,IsAbnormal NVARCHAR(50)                 
,InvValidationText NVARCHAR(MAX)                                                              
,GroupMedicalRemarks [nvarchar](255)                                                            
,ResultValueType NVARCHAR(200)        
,DecimalPlaces INT                                                              
,[UID] [nvarchar](255)                                                              
,PatientName NVARCHAR(255)                                                              
,PatientNumber NVARCHAR(30)                                                              
,Age NVARCHAR(20)                                                              
,Sex NVARCHAR(10)                                                              
,AutoApproveLoginID BIGINT                                                              
,IsExAuto NCHAR(1)                                            
,COUNTS BIGINT                                                              
,VisitNumber NVARCHAR(256)                                                          
,LabNo NVARCHAR(30)             
,GrpSeqNo INT                                                              
,InvSeqNo INT                                                              
,TestStatus NVARCHAR(5)                 
,BarcodeNumber NVARCHAR(250)                                                              
,PrintableRange NVARCHAR(max)                                                              
,PatientInvID BIGINT                                            
,IsNonEditable BIT                                                              
,DeptSeq INT                                                              
,FirstLvlSeq INT                                                              
,GrpContentSeq INT                                                              
,InnerContentSeq INT                                                              
,L2ContentSeq INT                                                              
,ClientID BIGINT                         
,valueseq TINYINT                                                              
,[Status] NVARCHAR(100)                                                              
,IsAutoAuthorize NVARCHAR(1)                                                              
,IsAutoValidate NVARCHAR(1)                                                              
,IsAllowNull NVARCHAR(1)                                        
,CONV_UOMID INT                                                              
,CONV_UOMCode NVARCHAR(50)                                                           
,CONV_Factor DECIMAL(18, 9)                                                              
,CONVFactorDecimalPt INT                                                              
,ConvReferenceRange NVARCHAR(max)                                                              
)                                                              
INSERT INTO @ResultSet (                                                              
PatientVisitID                                                              
,AccessionNumber                                                              
,InvestigationID                                                              
,InvestigationName                                                              
,GroupID                                                              
,GroupName                    
,[PackageID]                                                              
,[PackageName]                          
,UOMID                                                              
,UOMCode                            
,ReferenceRange                                                              
,GroupComment                                                              
,IsAbnormal                                                              
,[UID]                                                              
,GroupMedicalRemarks                                                              
,AutoApproveLoginID                           
,IsExAuto       
,LabNo                                                
,TestStatus                                                              
,BarcodeNumber                                                              
,PrintableRange                                            
,PatientInvID                                                              
,valueseq                                                              
,Status                                                              
,Reason                                                           
--,Visittype                                                        
)                                                              
SELECT t.PatientVisitID                                                              
,AccessionNumber                                                              
,t.InvestigationID                                                              
,InvestigationName                                                              
,GroupID                                                              
,GroupName                                                              
,PackageID                                                              
,PackageName                                                              
,t.UOMID                                                              
,t.UOMCode                                         
,t.ReferenceRange                                                              
,GroupComment                                                              
,IsAbnormal                                                              
,UID                                                              
,GroupMedicalRemarks                                                              
,im.AutoApproveLoginID                                                              
,AVD.Exautoauthorization                                                              
,t.LabNo                                                              
,t.TestStatus                                                  
,t.BarcodeNumber                                       
,t.PrintableRange                                                              
,t.PatientInvID                                                              
,t.valueseq                                                        
,Status                                                              
,t.Reason                                                              
--,pv.VisitType                                                          
FROM #tblPatientInvestigation t                                                              
INNER JOIN investigationorgmapping IM WITH (NOLOCK) ON IM.InvestigationID = t.InvestigationID                                                              
AND t.OrgID = IM.OrgID                                                              
LEFT JOIN AdditionalVisitDetails AVD WITH (NOLOCK) ON AVD.PatientVisitID = t.PatientVisitID                                  
--Parthi                                                         
--inner join PatientVisit pv with (Nolock) on pv.PatientVisitId=t.PatientVisitID and pv.LabVisitType in(@pvisittype)                                                          
WHERE IM.OrgID = @OrgID                                                              
--AND t.IsAbnormalResult = Isnull(@pIsAbnormal, t.IsAbnormalResult)                                                             
                                                    
UPDATE T                                                              
SET DeptID = IM.DeptID                                                              
,DeptName = IDM.DeptName                                                              
,PatternID = PM.PatternID                                                              
,PatternName = IPM.PatternName                                                        
,UOMID = IM.UOMID                                                          
,Uomcode = IM.UOMCode                                                              
,InvValidationText = Isnull(IM.InvValidationText, '')                                                              
,ResultValueType = Isnull(IOA.ResultValueType, 'AN')                                                 
,DecimalPlaces = IOA.DecimalPlaces                                                
,AutoApproveLoginID = IM.AutoApproveLoginID                                                             
,IsExAuto = AVD.Exautoauthorization                                                              
,IsNonEditable = IOA.IsNonEditable                                                              
--Parthi                                                          
--,visittype=pv.LabVisitType                            
FROM @ResultSet T                                                              
INNER JOIN InvestigationOrgMapping IM WITH (NOLOCK) ON T.InvestigationID = IM.InvestigationID                                                              
AND IM.OrgID = @OrgID                                                              
INNER JOIN InvDeptMaster IDM WITH (NOLOCK) ON IDM.DeptID = IM.DeptID               
AND IDM.Orgid = @Orgid                                                              
INNER JOIN PatternMapping PM WITH (NOLOCK) ON PM.InvestigationID = t.InvestigationID and PM.Orgid=@OrgID                                                              
INNER JOIN InvestigationPattern IPM WITH (NOLOCK) ON ipm.PatternID = PM.PatternID                                                       
AND ipm.OrgID = @OrgID                                                              
LEFT JOIN InvestigationOrgAttributes IOA WITH (NOLOCK) ON IOA.OrgID = @OrgID                                                         
AND IOA.InvestigationID = IM.InvestigationID                                                              
LEFT JOIN AdditionalVisitDetails AVD WITH (NOLOCK) ON AVD.PatientVisitID = t.PatientVisitID                                     
--parthi                                                          
--inner join PatientVisit pv with (Nolock) on pv.PatientVisitId=t.PatientVisitID and pv.LabVisitType in (@pvisittype)                                                           
                                                      
-- and   pv.OrgID=161                                                            
UPDATE T                                                              
SET T.PatientID = TAP.PatientID                                                         
,T.PatientName = TAP.PatientName                                                              
,T.PatientNumber = TAP.PatientNumber                                                              
,T.Age = TAP.Age                                                              
,T.Sex = TAP.Sex                                                 
,T.VisitNumber = TAP.VisitNumber                                                              
FROM @ResultSet T                         
INNER JOIN @tblAffectedPatients TAP ON T.PatientVisitID = TAP.VisitID                                                              
IF NOT EXISTS (                                                              
SELECT 1                         
FROM LoginDeptMap LDM WITH (NOLOCK)                                                              
INNER JOIN RoleDeptMap RDM WITH (NOLOCK) ON RDM.RoleDetpID = LDM.RoleDetpID                                                              
INNER JOIN @LoginDetail LD ON LD.RoleID = rdm.RoleID                                                              
AND LDM.loginID = LD.LoginID                                                              
)                                                              
BEGIN                                                              
INSERT INTO @pTempDetp                                                              
SELECT DISTINCT idm.DeptID                                               
FROM dbo.InvDeptMaster IDM WITH (NOLOCK)                                               
INNER JOIN dbo.RoleDeptMap RDM WITH (NOLOCK) ON rdm.DeptID = idm.DeptID                                                              
INNER JOIN @LoginDetail LD ON LD.RoleID = rdm.RoleID                                                              
AND LD.Orgid = idm.OrgID                                                              
END                    
ELSE                                                              
BEGIN                                                              
INSERT INTO @pTempDetp                                                              
SELECT DISTINCT idm.DeptID            
FROM dbo.InvDeptMaster IDM WITH (NOLOCK)      
INNER JOIN RoleDeptMap RDM WITH (NOLOCK) ON rdm.DeptID = idm.DeptID                                                 
INNER JOIN LoginDeptMap LDM WITH (NOLOCK) ON LDM.RoleDetpID = RDM.RoleDetpID                                                              
INNER JOIN @LoginDetail LD ON LD.RoleID = rdm.RoleID                                                              
AND LD.Orgid = idm.OrgID                                                              
AND LD.LoginID = LDM.loginID                                                              
END                                                              
IF (@IsTrustedDetails = 'Y')                                                              
BEGIN                                                      
INSERT INTO @pTempDetpForTrustedOrg                                                              
SELECT DeptID                                                              
FROM InvDeptMaster WITH (NOLOCK)                                                              
WHERE OrgID = @OrgID                                                              
AND DeptCode IN (                                                        
SELECT DISTINCT DeptCode                                                              
FROM InvDeptMaster IDM WITH (NOLOCK)                                                             
INNER JOIN @pTempDetp T1 ON T1.DeptID = IDM.DeptID                                                              
)                                           
DELETE @pTempDetp                                                              
INSERT @pTempDetp                                                              
SELECT DeptID                                                              
FROM @pTempDetpForTrustedOrg                                                              
END                                                              
DELETE                                                              
FROM @ResultSet                                                              
WHERE DeptID NOT IN (                                                              
SELECT DeptID                                                              
FROM @pTempDetp                                                              
)                                                     
DECLARE @tblTempGrp TABLE (                                                              
InvID NVARCHAR(10)                                                              
,GrpID NVARCHAR(10)                                                              
,AccessionNo NVARCHAR(10)                                                              
,ParentGrpID NVARCHAR(10)                                                              
,isGroup NCHAR(1)                                                              
,Atlevel INT                                                              
,GrpContentSeq INT                                                              
,[UID] NVARCHAR(500)                                             
,PatientVisitID BIGINT                                                              
,ActualGrpID BIGINT                                                              
,DeptName NVARCHAR(255)                                           
,PKGID INT                                                              
,PatientInvID BIGINT                                                    
)                                                           
CREATE TABLE #tblOrdInvExploded (                    
InvID NVARCHAR(10)                                                              
,GrpID NVARCHAR(10)                                                              
,AccessionNo NVARCHAR(10)                                         
,ParentGrpID NVARCHAR(10)                                                              
,DeptID INT                                                              
,GrpDeptID NVARCHAR(10)                                                              
,isGroup NCHAR(1)                         
,Atlevel INT                       
,DeptSeq INT                                                              
,FirstLvlSeq INT                                                              
,GrpContentSeq INT                                                              
,RootGroupID NVARCHAR(10)                                                              
,InnerContentSeq INT                                                              
,UID NVARCHAR(500)                                      
,PatientVisitID BIGINT                                                              
,ActualGrpID BIGINT                                                              
,DeptName NVARCHAR(255)                                                              
,PKGID INT                                                       
,L2ContentSeq INT                                                              
,PatientInvID BIGINT                                                              
,IsAutoAuthorize NVARCHAR(1)                                                              
,IsAutoValidate NVARCHAR(1)                                                              
,IsAllowNull NVARCHAR(1)                              
,CONV_UOMID INT                                                              
,CONV_UOMCode NVARCHAR(50)                                        
,CONV_Factor DECIMAL(18, 9)                                                              
,CONVFactorDecimalPt INT                                                          
,ConvReferenceRange NVARCHAR(max)                                                             
,ErrorDescription NVARCHAR(255)                                                              
,ErrorCode NVARCHAR(5)     
,[CollectedDateTime] [DATETIME]                                                              
);  WITH C1                                                              
AS (                                                              
SELECT OI.ID AS GrpID                                                              
,IGM.InvestigationID AS InvID                                                              
,OI.ID AS ParentGrpID                                                              
,IGM.Parent                                                              
,OI.AccessionNumber                                                              
,0 AS [level]                                                             
,IGM.SequenceNo            
,OI.[UID]                                             
,OI.VisitID                                                              
,CONVERT(BIGINT, IOG.OrgGroupID) AS OrgGroupID                                                              
,'' AS DeptName                                                              
,0 AS PKGID                                                              
,0 AS PatientInvID                                                              
--FROM   OrderedInvestigations OI WITH(NOLOCK)                                                              
--       INNER JOIN InvOrgGroup IOG WITH(NOLOCK)                                                              
--               ON IOG.AttGroupID = OI.ID                                   
--                  AND OI.OrgID = IOG.OrgID                                               
--       INNER JOIN InvGroupMapMaster IGM WITH(NOLOCK)                                                        
--               ON IOG.OrgGroupID = IGM.GroupID                                                              
--       INNER JOIN @ResultSet tblUID                                                              
--               ON tblUID.AccessionNumber = oi.AccessionNumber            
--WHERE  OI.Type = 'GRP'                                                              
--       AND Isnull(IGM.Active, 'Y') <> 'N'                                                              
--       AND IOG.OrgID = @OrgID                          
FROM @ResultSet tblUID                                      
INNER JOIN OrderedInvestigations OI WITH (NOLOCK) ON tblUID.AccessionNumber = oi.AccessionNumber                                                              
INNER JOIN InvOrgGroup IOG WITH (NOLOCK) ON IOG.AttGroupID = OI.ID                                                              
AND OI.OrgID = IOG.OrgID                                                              
INNER JOIN InvGroupMapMaster IGM WITH (NOLOCK) ON IOG.OrgGroupID = IGM.GroupID                    
WHERE OI.OrgID = @OrgID                                                              
AND OI.Type = 'GRP'                                                              
AND Isnull(IGM.Active, 'Y') <> 'N' and oi.status in (select status from @TempInvestigationStatus)                                                              
UNION ALL                                                              
SELECT CONVERT(BIGINT, IOG.AttGroupID) AS GrpID                            
,IGM.InvestigationID AS InvID                                                              
,OI.GrpID AS ParentGrpID                                                
,IGM.Parent                                                              
,OI.AccessionNumber                                                              
,[level] + 1                                                              
,CASE                                                               
WHEN OI.GrpID IN (                                                 
SELECT OI1.ID                                                              
FROM OrderedInvestigations OI1 WITH (NOLOCK)                                                              
WHERE Type = 'GRP'                                                              
)                                                      
THEN OI.SequenceNo                                                              
ELSE OI.SequenceNo                                                              
END AS SequenceNo                                                              
,OI.[UID]                                                              
,OI.VisitID                                                              
,OI.InvID AS OrgGroupID                                                              
,''                                                              
,0 AS PKGID                  ,0 AS PatientInvID                                       
FROM C1 OI                                                              
INNER JOIN InvOrgGroup IOG WITH (NOLOCK) ON IOG.OrgGroupID = OI.InvID                                                              
INNER JOIN InvGroupMapMaster IGM WITH (NOLOCK) ON OI.InvID = IGM.GroupID                                                              
INNER JOIN @ResultSet tblUID ON tblUID.AccessionNumber = oi.AccessionNumber                                                              
WHERE OI.Parent = 'Y'                                                              
AND Isnull(IGM.Active, 'Y') <> 'N'                                                              
AND IOG.OrgID = @OrgID                                                              
)                                                 
INSERT INTO @tblTempGrp (                            
InvID                                                              
,GrpID                                                              
,AccessionNo                                                              
,ParentGrpID                                                              
,isGroup                                                              
,Atlevel                                                 
,GrpContentSeq                                                              
,[UID]                                                              
,PatientVisitID  ,ActualGrpID                                                              
,DeptName                                                              
,PKGID                                                         
,PatientInvID                                                              
)                                                              
SELECT DISTINCT InvID                                                              
,GrpID                                                              
,AccessionNumber                                                      
,ParentGrpID                                                              
,'Y'               
,[level]                                                              
,SequenceNo                                                              
,UID                                                              
,VisitID                                                              
,OrgGroupID                                                              
,DeptName                                                          
,0                                                              
,PatientInvID                       
FROM C1                                                              
WHERE Isnull(Parent, 'N') = 'N'                                                              
ORDER BY ParentGrpID            
    
                                                 
INSERT INTO #tblOrdInvExploded (                                                              
InvID                             
,GrpID                                    
,AccessionNo                                                              
,ParentGrpID                                                              
,DeptID                                                              
,GrpDeptID                                 
,isGroup                                                      
,Atlevel                                                              
,DeptSeq                                                              
,FirstLvlSeq                                                              
,GrpContentSeq                                                              
,RootGroupID                                                              
,InnerContentSeq                                                              
,UID                                                              
,PatientVisitID                                                              
,ActualGrpID                                        
,DeptName                                                              
,PKGID                   
,PatientInvID                                                              
,IsAutoAuthorize                                                              
,IsAutoValidate           ,IsAllowNull                                                              
,CONV_UOMID                                                              
,CONV_UOMCode        
,CONV_Factor                                                              
,CONVFactorDecimalPt                                                              
,ConvReferenceRange                                                              
,ErrorDescription      
,ErrorCode      
,[CollectedDateTime]                                                      
)                                                            
SELECT DISTINCT OI.ID                                                              
,'0'                                                              
,OI.AccessionNumber                                                              
,'0'                                                              
,IOM.DeptID                                                              
,IOM.DeptID                                                              
,'N'                                                       
,0                                                  
,0                                                              
,IOM.SequenceNo                                                              
,0                          
,''                                                              
,0                                                 
,OI.UID                                                              
,OI.VisitID                                                              
,0                                                              
,IDM.DeptName                                                              
,0                                                              
,PIV.PatientInvID                                       
,PIV.IsAutoAuthorize                                              
,Isnull(IOM.IsAutoValidate, '') AS IsAutoValidate                                                         
,Isnull(IOM.IsAllowNull, '') AS IsAllowNull                                                              
,Isnull(PIV.CONV_UOMID, 0) AS CONV_UOMID                                                              
,Isnull(PIV.CONV_UOMCode, '') AS CONV_UOMCode                                                              
,Isnull(PIV.CONV_Factor, 0) AS CONV_Factor                                                              
,Isnull(PIV.CONVFactorDecimalPt, 0) AS CONVFactorDecimalPt                                                              
,PIV.ConvReferenceRange                                                              
,PIV.ErrorDescription                      
,PIV.ErrorCode    
,OI.CreatedAt                                                              
FROM #tblPatientInvestigation PIV(NOLOCK)          
INNER JOIN OrderedInvestigations OI WITH (NOLOCK) ON PIV.AccessionNumber = OI.AccessionNumber                                                              
AND PIV.PatientVisitid = OI.Visitid                                                              
INNER JOIN InvestigationOrgMapping IOM WITH (NOLOCK) ON OI.ID = IOM.InvestigationID                                                             
AND OI.OrgID = IOM.OrgID                                                              
INNER JOIN InvDeptMaster IDM WITH (NOLOCK) ON IDM.DeptID = IOM.DeptID                                                              
AND OI.OrgID = IDM.OrgID                                                              
INNER JOIN @ResultSet tblUID ON tblUID.AccessionNumber = oi.AccessionNumber                                                              
WHERE Type NOT IN (                                                           
'GRP'                                                   
,'PKG'                                                              
)                                                              
AND IOM.OrgID = @OrgID and oi.status in (select status from @TempInvestigationStatus)                                                              
UNION                    
SELECT DISTINCT InvID                                                              
,GrpID                                                              
,AccessionNo                                                              
,ParentGrpID                                                              
,'0'      
,'0'                                                       
,isGroup                                                              
,Atlevel                                                          
,0                              ,0                                                              
,GrpContentSeq                                                              
,''                                                              
,0                                                       
,t.UID                                                              
,t.PatientVisitID                          
,ActualGrpID                                                              
,DeptName                              
,PKGID                                                              
,PIV.PatientInvID                                                              
,PIV.IsAutoAuthorize                                                              
,PIV.IsAutoValidate                                                              
,PIV.IsAllowNull                                                              
,PIV.CONV_UOMID                                                              
,PIV.CONV_UOMCode                                                              
,PIV.CONV_Factor                                                              
,PIV.CONVFactorDecimalPt                                                              
,PIV.ConvReferenceRange                                                              
,PIV.ErrorDescription          
,PIV.ErrorCode     
,PIV.CollectedDateTime                                                             
FROM @tblTempGrp t                                                              
INNER JOIN #tblPatientInvestigation PIV(NOLOCK) ON Piv.InvestigationID = t.InvID                        
AND piv.PatientVisitID = t.PatientVisitID                                                              
AND PIV.UID = t.UID                                                              
AND PIV.AccessionNumber = t.AccessionNo                                                       
OPTION (FORCE ORDER)                                                              
UPDATE T                                                              
SET T.ActualGrpID = IG.OrgGroupID                                                              
FROM #tblOrdInvExploded T                                          
INNER JOIN OrderedInvestigations OI(NOLOCK) ON T.AccessionNo = OI.AccessionNumber                                                              
INNER JOIN InvOrgGroup IG(NOLOCK) ON OI.ID = IG.AttGroupID                                                              
AND IG.OrgID = @OrgID                                                              
AND OI.Type = 'GRP'                                                           
DECLARE @tblRootGrpID TABLE (                                                              
AccessionNo NVARCHAR(10)                                                              
,ParentGrpID NVARCHAR(10)                                                              
)     
                                                            
INSERT INTO @tblRootGrpID                                                              
SELECT AccessionNo                                                      
,ParentGrpID                                                              
FROM #tblOrdInvExploded                                                              
GROUP BY AccessionNo                                       
,ParentGrpID                                             
UPDATE T                         
SET T.ParentGrpID = T.GrpID                                                         
FROM #tblOrdInvExploded T                                            
WHERE T.Atlevel = 1                                                              
UPDATE T                                                          
SET T.RootGroupID = T1.ParentGrpID                                                              
FROM #tblOrdInvExploded T                                                              
INNER JOIN @tblRootGrpID T1 ON T.AccessionNo = T1.AccessionNo                                                       
INNER JOIN OrderedInvestigations OI WITH (NOLOCK) ON OI.AccessionNumber = T1.AccessionNo                                             
AND T1.ParentGrpID = OI.ID                                                              
WHERE OI.Type IN (                                                              
'GRP'            
,'PKG'                                                              
)                          
DECLARE @tblDeptGrp TABLE (                                                              
RootGroupID NVARCHAR(10)         
,DeptID NVARCHAR(10)                                                              
,DeptCnt INT                                                              
)                                                              
DECLARE @tblDeptGrpAdjusted TABLE (                                                              
RootGroupID NVARCHAR(10)                                                              
,DeptID NVARCHAR(10)                                                              
)                                                              
INSERT INTO @tblDeptGrp                            
SELECT RootGroupID                                                              
,DeptID                                                              
,Count(DeptID)                             
FROM #tblOrdInvExploded                                                              
WHERE RootGroupID != ''                                                              
AND DeptID != '0'                                                              
GROUP BY RootGroupID                                                              
,DeptID                                                              
ORDER BY RootGroupID                                                              
INSERT INTO @tblDeptGrpAdjusted                                    
SELECT RootGroupID                      
,Min(DeptID)                                                              
FROM @tblDeptGrp t1                                                              
WHERE DeptCnt = (          
SELECT Max(DeptCnt)                                                              
FROM @tblDeptGrp t2                                     
WHERE t2.RootGroupID = t1.RootGroupID                                                              
)                                                              
GROUP BY RootGroupID                                                              
UPDATE T                                                              
SET T.GrpDeptID = T1.DeptID                                                 
FROM #tblOrdInvExploded T                        
INNER JOIN @tblDeptGrpAdjusted T1 ON T.RootGroupID = T1.RootGroupID                                                              
UPDATE T                                                              
SET T.DeptName = T1.DeptName                        
FROM #tblOrdInvExploded T                                                              
INNER JOIN InvDeptMaster T1 ON T1.DeptID = T.GrpDeptID                                                              
AND T1.orgid = @OrgID                                                              
UPDATE #tblOrdInvExploded                                                              
SET GrpDeptID = DeptID                                                              
WHERE GrpDeptID = '0'                                                              
UPDATE T                                                              
SET T.DeptSeq = D.SequenceNo                                                         
FROM #tblOrdInvExploded T                                                              
INNER JOIN InvDeptMaster D WITH (NOLOCK) ON T.GrpDeptID = D.DeptID                 
UPDATE T                                           
SET T.FirstLvlSeq = IOG.SequenceNo                               
FROM #tblOrdInvExploded T                                                              
INNER JOIN InvestigationOrgMapping IOG WITH (NOLOCK) ON T.InvID = IOG.InvestigationID                                       
AND IOG.OrgID = @OrgID                                              
WHERE T.isGroup != 'Y'                                                          
UPDATE T                                                              
SET T.FirstLvlSeq = IOG.SequenceNo                                                              
FROM #tblOrdInvExploded T                                                              
INNER JOIN InvOrgGroup IOG WITH (NOLOCK) ON T.RootGroupID = IOG.AttGroupID                                              
AND IOG.OrgID = @OrgID                              
UPDATE T                                                              
SET InnerContentSeq = IGM.SequenceNo                                                              
,L2ContentSeq = 0                                                            
FROM #tblOrdInvExploded T                                                              
INNER JOIN InvOrgGroup IOG WITH (NOLOCK) ON IOG.AttGroupID = t.GrpID                                                              
AND IOG.OrgID = @OrgID                                                              
INNER JOIN InvGroupMapMaster IGM WITH (NOLOCK) ON IGM.GroupID = IOG.OrgGroupID                                                              
AND T.InvID = IGM.InvestigationID                                                              
WHERE T.Atlevel IN (                                                              
0                                              
,1                                                              
)                                                      
UPDATE T                                                              
SET InnerContentSeq = IGM.SequenceNo                                                              
FROM #tblOrdInvExploded T                                                  
INNER JOIN InvOrgGroup IOG WITH (NOLOCK) ON IOG.AttGroupID = t.ParentGrpID          
AND IOG.OrgID = @OrgID                                                              
INNER JOIN InvGroupMapMaster IGM WITH (NOLOCK) ON IGM.GroupID = IOG.OrgGroupID                                                          
AND IGM.InvestigationID = t.ActualGrpID                                                              
WHERE T.Atlevel IN (2)                                                              
UPDATE T                                                              
SET L2ContentSeq = IGM.SequenceNo                                                              
FROM #tblOrdInvExploded T                                                              
INNER JOIN InvOrgGroup IOG WITH (NOLOCK) ON IOG.OrgGroupID = t.ActualGrpID                                                              
AND IOG.OrgID = @OrgID                                   
AND T.Atlevel = 2                                                              
INNER JOIN InvGroupMapMaster IGM WITH (NOLOCK) ON IGM.GroupID = T.ActualGrpID                                                              
AND T.InvID = IGM.InvestigationID                                       
AND T.Atlevel = 2                                                              
UPDATE T                                                
SET T.Validationtext = Isnull(IGM.ValidationText, '')                                                              
FROM @ResultSet T                                                              
INNER JOIN InvOrgGroup IGM WITH (NOLOCK) ON T.GroupID = IGM.OrgGroupID                    
WHERE Isnull(T.GroupID, 0) <> 0                                                              
AND IGM.OrgID = @OrgID                                                       
--Select * from @ResultSet                                                              
--Update T                                                       
--SET T.Visittype = Isnull(pv.LabVisitType, '')                                                              
--FROM @ResultSet T                                                                          
--INNER JOIN PatientVisit pv  WITH (NOLOCK) ON T.Visittype=pv.LabVisitType        
                                                                                       
INSERT INTO #ResultSetByRowID      
                                                                                       
SELECT Dense_rank() OVER (                                                              
ORDER BY RS.PatientVisitID                                                              
) AS RowNo                                                              
,RS.PatientID      
,RS.PatientVisitID                                                              
,RS.AccessionNumber                                                              
,RS.InvestigationID                                                              
,RS.InvestigationName                                                              
,RS.GroupID                           
,RS.GroupName                                                              
,RS.[PackageID]                                                             
,RS.[PackageName]     
,RS.DeptID                                                              
,RS.DeptName                                                              
,RS.UOMID                                
,RS.UOMCode                                                          
,RS.ReferenceRange                                                              
,RS.PatternID                                                              
,RS.PatternName                                                      
,RS.GroupComment                                                
,RS.Validationtext                                                              
,RS.IsAbnormal                                                              
,RS.InvValidationText                                                              
,RS.GroupMedicalRemarks                                                
,RS.ResultValueType                                                              
,RS.DecimalPlaces                                                              
,RS.[UID]                     
,RS.PatientName             
,RS.PatientNumber                                                              
,RS.Age                                                              
,RS.Sex                                                              
,RS.AutoApproveLoginID                                                              
,RS.IsExAuto                                                              
,RS.VisitNumber                                        
,RS.LabNo                                                              
,RS.GrpSeqNo                              
,RS.InvSeqNo                                                              
,RS.TestStatus                                                              
,RS.BarcodeNumber                                                              
,RS.PrintableRange                                                   
,RS.PatientInvID                                                              
,RS.IsNonEditable                                                              
,TBL.DeptSeq                                                              
,TBL.FirstLvlSeq                        
,TBL.GrpContentSeq                                                              
,TBL.InnerContentSeq                                                              
,TBL.L2ContentSeq                                                              
,rs.valueseq                            
,RS.Status                                                              
,TBL.IsAutoAuthorize                                                              
,TBL.IsAutoValidate       
,TBL.IsAllowNull                                                              
,TBL.CONV_UOMID                                                              
,TBL.CONV_UOMCode             
,TBL.CONV_Factor                                                              
,TBL.CONVFactorDecimalPt                                                              
,TBL.ConvReferenceRange                                                              
,TBL.ErrorDescription                                                              
,TBL.ErrorCode                                        
,RS.Reason    
,TBL.[CollectedDateTime]                                                              
FROM @ResultSet RS                                   
INNER JOIN #tblOrdInvExploded TBL ON TBL.PatientInvID = RS.PatientInvID                                                
ORDER BY rs.valueseq                                             
,RS.PatientVisitID                                                              
,TBL.DeptSeq                                                              
,TBL.FirstLvlSeq                                                              
,TBL.GrpContentSeq                                                              
,TBL.InnerContentSeq                                                              
,TBL.L2ContentSeq         
INSERT INTO @ResultSetByRowIDWithHeader (                                                              
RowID                                                              
,RowNo                                                              
,PatientID                                                              
,PatientVisitID                                               
,AccessionNumber                                                              
,InvestigationID                                                              
,InvestigationName                                                              
,GroupID                                                              
,GroupName                                                              
,PackageID            
,PackageName             
,DeptID                                      
,DeptName                                                              
,UOMID                                                              
,UOMCode                             
,ReferenceRange                                                              
,PatternID                                                              
,PatternName                                                              
,GroupComment                                                              
,Validationtext                                                       
,IsAbnormal                                                              
,InvValidationText                                
,GroupMedicalRemarks                                                              
,ResultValueType                                                              
,DecimalPlaces                
,[UID]                                                       
,PatientName                                                              
,PatientNumber                                                              
,Age                                                              
,Sex                                                              
,AutoApproveLoginID                                                              
,IsExAuto                                                              
,VisitNumber                                        
,LabNo                                                              
,GrpSeqNo                                                              
,InvSeqNo                         
,TestStatus                                                              
,BarcodeNumber              
,PrintableRange                                                  
,DeptSeq                                  
,FirstLvlSeq                                                              
,GrpContentSeq                                                              
,InnerContentSeq                                                              
,L2ContentSeq                                                      
,IsNonEditable                                                              
,valueseq                                                              
,Status                                                              
,PatientInvID                                                              
,IsAutoAuthorize                                                              
,IsAutoValidate                
,IsAllowNull                                                              
,CONV_UOMID                                                              
,CONV_UOMCode                                    
,CONV_Factor                                                              
,CONVFactorDecimalPt                                                              
,ConvReferenceRange                                                              
,ErrorDescription                                                              
,ErrorCode                                                              
,Reason      
,CollectedDateTime        
)                                                              
SELECT DISTINCT RowID                                                              
,RowNo                                                              
,PatientID                                        
,PatientVisitID                                                              
,AccessionNumber                                                              
,InvestigationID                                                              
,InvestigationName                                                              
,GroupID                                                             
,GroupName                                                              
,PackageID                                                              
,PackageName     
,DeptID                                     
,DeptName                                                   
,UOMID                                                              
,UOMCode                                                              
,ReferenceRange                                                              
,PatternID                                                              
,PatternName                                                              
,GroupComment                                                              
,Validationtext                                                              
,IsAbnormal                                                      
,InvValidationText                                                              
,GroupMedicalRemarks                                                              
,ResultValueType              
,DecimalPlaces                                                              
,[UID]                                                      
,PatientName                                                              
,PatientNumber                                                              
,Age                                                              
,CASE Sex                           
WHEN 'M'                                                              
THEN 'Male'                                                              
WHEN 'F'            
THEN 'Female'                                                              
WHEN 'V'                           
THEN 'Veterinary'                                                              
WHEN 'N'                                                              
THEN 'NA'                                                              
ELSE ''           
END AS Sex                                                              
,AutoApproveLoginID                                                              
,IsExAuto                                                              
,VisitNumber                                                              
,LabNo                                                              
,GrpSeqNo                               
,InvSeqNo                                                              
,TestStatus                                       
,BarcodeNumber                                                              
,PrintableRange                                                              
,DeptSeq                                                              
,FirstLvlSeq                                                           
,GrpContentSeq                                                              
,InnerContentSeq                                                              
,L2ContentSeq                                                              
,IsNonEditable             
,valueseq                                                              
,Status                                                              
,PatientInvID                                                              
,IsAutoAuthorize                                                              
,IsAutoValidate                                          
,IsAllowNull                                            
,CONV_UOMID                                                              
,CONV_UOMCode                                                              
,CONV_Factor                                                              
,CONVFactorDecimalPt                                                              
,ConvReferenceRange                                                              
,ErrorDescription                                                              
,ErrorCode                              
,Reason               
,CollectedDateTime                                                   
FROM #ResultSetByRowID                                                              
ORDER BY valueseq       
,RowID                                                              
,PatientVisitID                                                              
,DeptSeq                                                              
,FirstLvlSeq                                                              
,GrpContentSeq                                                        
,InnerContentSeq                                             
,L2ContentSeq                                                              
    
DECLARE @COUTS BIGINT                                                              
SELECT @COUTS = Count(PatientInvID)                                                  
FROM @ResultSetByRowIDWithHeader                                                              
UPDATE @ResultSetByRowIDWithHeader                                                              
SET COUNTS = @COUTS                                                              
FROM @ResultSetByRowIDWithHeader                                                              
DECLARE @VisitID BIGINT = 0                                                              
,@AccessionNumber BIGINT = 0                                                              
DECLARE @tblVisitDetails AS TABLE (                           
ID INT PRIMARY KEY                                                              
,Visitid BIGINT                                                              
,AccessionNumber BIGINT                      
--,Visittype bigint                                   
)                              
DECLARE @ActualRecordNo INT                                                    
DECLARE @TotalRecordNo INT                                                              
SET @ActualRecordNo = @pRecordCount + 1                                                              
SET @TotalRecordNo = @pRecordCount + 47                       
INSERT INTO @ResultSetByRowIDWithHeader_Mirror (                                         
RowID                                                              
,RowNo                                                              
,PatientID                                                              
,PatientVisitID                                                              
,AccessionNumber                                                           
,InvestigationID                                                              
,InvestigationName                                                              
,GroupID                                                              
,GroupName                                                              
,PackageID                                              
,PackageName                                                              
,DeptID                                                              
,DeptName                                                              
,UOMID                                                              
,UOMCode          
,ReferenceRange                                                              
,PatternID                                            
,PatternName                                                              
,GroupComment                                                              
,Validationtext                                                              
,IsAbnormal                                                              
,InvValidationText                                                              
,GroupMedicalRemarks                                                              
,ResultValueType                                                              
,DecimalPlaces                                                              
,[UID]                                                              
,PatientName                                                              
,PatientNumber                                                              
,Age                               
,Sex                                                              
,AutoApproveLoginID                                                    
,IsExAuto                                
,VisitNumber                                                              
,LabNo                                                       
,GrpSeqNo           
,InvSeqNo                                              
,TestStatus                                                              
,BarcodeNumber                                                              
,PrintableRange            
,DeptSeq                                    
,FirstLvlSeq                                                              
,GrpContentSeq                                                              
,InnerContentSeq                                     
,L2ContentSeq                                                              
,IsNonEditable                                                              
,valueseq        
,Status                                                       
,PatientInvID                                                              
,IsAutoAuthorize                                                              
,IsAutoValidate                                                              
,IsAllowNull                                                              
,CONV_UOMID                                                              
,CONV_UOMCode                                                 
,CONV_Factor                      
,CONVFactorDecimalPt                                                              
,ConvReferenceRange                                                              
)                                                              
SELECT Row_number() OVER (                                                              
ORDER BY valueseq                                                              
,Patientvisitid                                                              
,grpseqno                   
,InvSeqno                                                              
)                                          
,RowNo                                                              
,PatientID                                                              
,PatientVisitID                                                              
,AccessionNumber                                                              
,InvestigationID                                                              
,InvestigationName                                        
,GroupID                                                              
,GroupName                                                              
,PackageID                                                              
,PackageName                                                              
,DeptID                                                              
,DeptName                                                              
,UOMID                                                              
,UOMCode          
,ReferenceRange                                                              
,PatternID     
,PatternName                                       
,GroupComment                                                              
,Validationtext                                                              
,IsAbnormal                                                              
,InvValidationText                                                              
,GroupMedicalRemarks                                                              
,ResultValueType                                                              
,DecimalPlaces                                                              
,[UID]                                                              
,PatientName                                                              
,PatientNumber    
,Age                            
,Sex                                                              
,AutoApproveLoginID                                                              
,IsExAuto                                                  
,VisitNumber                                                              
,LabNo                  
,GrpSeqNo                                                      
,InvSeqNo                   
,TestStatus                                                              
,BarcodeNumber                                                              
,PrintableRange                                                              
,DeptSeq                                                              
,FirstLvlSeq                                                              
,GrpContentSeq                                                              
,InnerContentSeq                         
,L2ContentSeq                                                              
,IsNonEditable                                                              
,valueseq                                                         
,Status                                                              
,PatientInvID                                                              
,IsAutoAuthorize                                                              
,IsAutoValidate                                                              
,IsAllowNull                                                              
,CONV_UOMID                                                        
,CONV_UOMCode                                               
,CONV_Factor                                                              
,CONVFactorDecimalPt                                                              
,ConvReferenceRange                                                             
FROM @ResultSetByRowIDWithHeader                                                           
ORDER BY valueseq                              
,PatientVisitID                                                              
,GrpSeqNo           
,InvSeqNo                                                              
INSERT @tblVisitDetails (                                                              
ID                                                              
,Visitid                                                              
,AccessionNumber                                     
)                                    
SELECT                                       
--Row_number()                                                                              
--          OVER (                                                                              
--            ORDER BY valueseq, Patientvisitid, grpseqno, InvSeqno),                                                                     
RowID                                                             
,PatientVisitID                                                              
,AccessionNumber                                                             
                                                            
--Parthi                             
--,CASE                                
--WHEN Visittype = ''  OR Isnull(Visittype, 'N') = 'N'  THEN 'N'                                                      
--ELSE 'Y'                                                              
--END                                                              
                                                          
FROM @ResultSetByRowIDWithHeader_Mirror                                                              
WHERE RowID BETWEEN @ActualRecordNo                                                              
AND @TotalRecordNo                                                              
--ORDER  BY valueseq,                                                                              
--          PatientVisitID,            
--     GrpSeqNo,                                                                              
--          InvSeqNo     
                                                                  
SELECT @VisitID = VisitID                                  
,@AccessionNumber = AccessionNumber                  
FROM @tblVisitDetails                                                              
WHERE ID = @TotalRecordNo                                                              
IF EXISTS (                                                              
SELECT 1                  
FROM @tblVisitDetails                              
WHERE VisitID = @VisitID                                                 
AND AccessionNumber = @AccessionNumber                                                              
)                                                              
BEGIN                                                              
IF EXISTS (                                                              
SELECT 1                                                              
FROM @tblVisitDetails                   
WHERE AccessionNumber <> @AccessionNumber                                                              
)                                                              
BEGIN                                                              
DELETE                                         
FROM @tblVisitDetails                                                
WHERE VisitID = @VisitID                                                              
AND AccessionNumber = @AccessionNumber                                                              
END                
END                                         
UPDATE T                                                              
SET T.ClientID = CM.ClientID                                                              
FROM @ResultSetByRowIDWithHeader T                                                              
INNER JOIN VisitClientMapping VCM ON VCM.VisitID = T.PatientVisitID                           
INNER JOIN ClientMaster CM ON CM.ClientID = VCM.ClientID                                                              
WHERE VCM.OrgID = @OrgID                                                          
AND VCM.IsActive IS NULL                                                              
IF (@pActionName = 'Validate')                                                              
BEGIN           
Insert into #FinalList                                     
SELECT DISTINCT  valueseq                                                              
,TBL.PatientID                                                              
,TBL.PatientVisitID                                                              
,tbl.AccessionNumber                                                              
,InvestigationID                                                              
,InvestigationName                                                              
,GroupID                                                              
,GroupName                                                              
,PackageID                                                          
,PackageName                                            
,T.DeptID                
,DeptName                            
,UOMID                                                              
,UOMCode                                                              
,ReferenceRange                                                              
,TBL.PatternID                                                              
,PatternName                                                              
,GroupComment AS 'GroupComment'                                                              
,Validationtext AS 'ValidationText'                                                              
,IsAbnormal                                                              
,InvValidationText                                    
,GroupMedicalRemarks                                                              
,Isnull(ResultValueType, 'AN') AS ResultValueType                                                              
,DecimalPlaces                  
,TBL.[UID]                                                              
,PatientName AS Name                                                              
,PatientNumber                 ,Age                                                              
,Sex           
,AutoApproveLoginID                                                              
,Ltrim(Rtrim(IsExAuto)) AS RefSuffixText                                                              
,COUNTS AS Sno                                     
,VisitNumber + (                                                              
CASE                                                               
WHEN Isnull(TBL.BarcodeNumber, '') <> ''                                                              
THEN ' (' + TBL.BarcodeNumber + ')'                                                              
ELSE ''                                                              
END                                   
) AS VisitNumber                                                              
,LabNo                                                           
,TestStatus                                                              
,PrintableRange                                                              
,IsNonEditable                                                              
,DeptSeq                    
,FirstLvlSeq                             
,GrpContentSeq                                                              
,InnerContentSeq                                                       
,L2ContentSeq                                                              
,TBL.ClientID                     
,TBL.Status                                                              
,TBL.IsAutoAuthorize                                                              
,TBL.IsAutoValidate                                                              
,TBL.IsAllowNull                                                              
,TBL.CONV_UOMID                                                              
,TBL.CONV_UOMCode                                                 
,TBL.CONV_Factor                                                              
,TBL.CONVFactorDecimalPt                                                              
,TBL.ConvReferenceRange                                                              
,TBL.ErrorDescription                                                              
,TBL.ErrorCode                                                              
,TBL.Reason     
,TBL.CollectedDateTime                                                            
FROM @tblVisitDetails tmp                                                              
INNER JOIN @ResultSetByRowIDWithHeader TBL ON tbl.PatientVisitID = tmp.Visitid                                                   
AND tbl.AccessionNumber = tmp.AccessionNumber                                                  
INNER JOIN @tblPatternID PM ON PM.PatternID = TBL.PatternID                                                              
INNER JOIN Tasks T(NOLOCK) ON T.PatientVisitID = TBL.PatientVisitID                                                              
INNER JOIN PatientInvSample PIS (NOLOCK) ON PIS.PatientVisitID=TBL.PatientVisitID AND PIS.OrgID=T.OrgID                                                               
AND T.OrgID = @OrgID                                                              
AND T.TaskStatusID IN (                                                              
1                                                              
,5                                                    
)                                                              
WHERE T.TaskStatusID IN (                              
1                                                              
,5                                                              
)                                                              
AND T.OrgID = @OrgID                                                              
AND PIS.CollectedLocID=COALESCE(@ColleLocationID,PIS.CollectedLocID)                                                             
ORDER BY valueseq                         
,PatientVisitID                                                              
,DeptSeq                                                              
,FirstLvlSeq                                                            
,GrpContentSeq                                                              
,InnerContentSeq                 
,L2ContentSeq                                                              
OPTION (FORCE ORDER)      
 select TOP 46 F1.valueseq,    
F1.PatientID,    
F1.PatientVisitID,    
F1.AccessionNumber,    
F1.InvestigationID,    
F1.InvestigationName,    
F1.GroupID,    
F1.GroupName ,    
F1.PackageID,    
F1.PackageName ,    
F1.DeptID,    
F1.DeptName,        
F1.UOMID ,    
F1.UOMCode ,    
F1.ReferenceRange,    
F1.PatternID ,    
F1.PatternName,    
F1.GroupComment,    
F1.ValidationText,    
F1.IsAbnormal,    
F1.InvValidationText,    
F1.GroupMedicalRemarks,    
F1.ResultValueType,    
F1.DecimalPlaces,    
F1.UID,    
F1.Name,    
F1.PatientNumber,    
F1.Age,    
F1.Sex,    
F1.AutoApproveLoginID,    
F1.RefSuffixText,    
F1.Sno,    
F1.VisitNumber,    
F1.LabNo,    
F1.TestStatus,    
F1.PrintableRange,    
F1.IsNonEditable,    
F1.DeptSeq,    
F1.FirstLvlSeq,    
F1.GrpContentSeq,    
F1.InnerContentSeq,    
F1.L2ContentSeq ,    
F1.ClientID ,    
F1.Status,    
F1.IsAutoAuthorize,    
F1.IsAutoValidate,    
F1.IsAllowNull,    
F1.CONV_UOMID,    
F1.CONV_UOMCode,    
F1.CONV_Factor,    
F1.CONVFactorDecimalPt,    
F1.ConvReferenceRange,    
F1.ErrorDescription,    
F1.ErrorCode,    
F1.Reason,    
F1.CollectedDateTime    
 from #FinalList F1    
 left Join #FinalList F11 on F1.PatientVisitID=F11.PatientVisitID and F1.FirstLvlSeq=F11.FirstLvlSeq and F11.RowID>46    
  where f11.PatientVisitID is null                  
  order by F1.Rowid                                                                  
END                                             
  IF (@pActionName = 'Approvel')                                                    
BEGIN                                                       
--select @pActionName                            
--declare @TemporyPatID varchar(100)                                  
-- select distinct  TBL.PatientID FROM @tblVisitDetails tmp                                                        
--INNER JOIN @ResultSetByRowIDWithHeader TBL ON tbl.PatientVisitID = tmp.Visitid                                                        
--AND tbl.AccessionNumber = tmp.AccessionNumber                                                        
--INNER JOIN @tblPatternID PM ON PM.PatternID = TBL.PatternID                                                        
--INNER JOIN Tasks T(NOLOCK) ON T.PatientVisitID = TBL.PatientVisitID                                                        
--AND T.OrgID = @OrgID                                                        
--AND T.TaskStatusID IN (                                                        
--2                                                    
--)                                                        
--WHERE T.TaskStatusID IN (                                                        
--2                                                     
--)    -- and TBL.Status='Validate'                                                    
--AND T.OrgID = @OrgID                                                        
--ORDER BY valueseq        
if (@pIsAbnormal='3')    
Begin            
Insert into #FinalList    
SELECT DISTINCT valueseq                            
,TBL.PatientID                                                              
,TBL.PatientVisitID                                                             
,tbl.AccessionNumber                                                  
,tbl.InvestigationID                                                              
,InvestigationName                                                              
,tbl.GroupID                                                              
,TBL.GroupName                                                              
,TBL.PackageID                        
,TBL.PackageName                                               
,T.DeptID                                                              
,DeptName                                                              
,TBL.UOMID                                                              
,TBL.UOMCode                                       
,ReferenceRange                                                              
,TBL.PatternID                                             
,PatternName                                                              
,GroupComment AS 'GroupComment'                                                              
,Validationtext AS 'ValidationText'                                     
,TBL.IsAbnormal                                                              
,InvValidationText                                                              
,GroupMedicalRemarks                                                              
,Isnull(ResultValueType, 'AN') AS ResultValueType                                                              
,DecimalPlaces                                                              
,TBL.UID                                                           
,PatientName AS Name             
,PatientNumber                   
,Age                                                              
,Sex                                                              
,AutoApproveLoginID                                                              
,Ltrim(Rtrim(IsExAuto)) AS RefSuffixText                                              
,COUNTS AS Sno                                                              
,tbl.VisitNumber + (                                                              
CASE                                                               
WHEN Isnull(TBL.BarcodeNumber, '') <> ''                                                              
THEN ' (' + TBL.BarcodeNumber + ')'                                                              
ELSE ''                                                              
END                                 
) AS VisitNumber                                                 
,LabNo                          
,TestStatus                                                              
,PrintableRange                         
,IsNonEditable                                                              
,DeptSeq                                                              
,FirstLvlSeq                                                              
,GrpContentSeq            
,InnerContentSeq                                                              
,L2ContentSeq                                                              
,TBL.ClientID                                                       
,TBL.Status                                                              
,TBL.IsAutoAuthorize                                                              
,TBL.IsAutoValidate                                                              
,TBL.IsAllowNull                                        
,TBL.CONV_UOMID                                   
,TBL.CONV_UOMCode                                                              
,TBL.CONV_Factor                                                              
,TBL.CONVFactorDecimalPt                          
,TBL.ConvReferenceRange                                                              
,TBL.ErrorDescription                                                              
,TBL.ErrorCode                                         
,TBL.Reason                                                  
 ,tbl.InvestigationID ,                                     
 --,(CASE WHEN AQC.QcStatus=1 THEN 'Y' ELSE 'N' END) as QCData,AQC.value1 as DeviceActualValue ,         
 (Select top 1 (Case When QCStatus=1 Then '1' Else '0' End)+'~'+Value1 From AnalyteQCValues QC Inner Join    
 InvInstrumentMaster IIM on IIM.ProductCode=IV.deviceId and IIM.OrgID=IV.orgid    
 where Qc.InvestigationId=IV.InvestigationID and QC.instrumentid=IIm.InstrumentId  and QC.orgid=t.OrgID order by QC.createdat desc) as QCData,'' as DeviceActualValue,    
 PIA.DeltaCheckStatus as IsDeltaStatus,    
PIA.IsDeltaCheck,    
isnull(PIA.DeltaLowerLimit,0.0) as DeltaLowerLimit,    
isnull(PIA.DeltaHigherLimit,0.0) as DeltaHigherLimit     
,TBL.CollectedDateTime                                               
FROM @tblVisitDetails tmp                                    
INNER JOIN @ResultSetByRowIDWithHeader TBL ON tbl.PatientVisitID = tmp.Visitid                                                              
AND tbl.AccessionNumber = tmp.AccessionNumber      
Inner join outsourcingdetail OD(nolock) on OD.PatientVisitID =TBL.PatientVisitID and OD.Investigationid=TBL.Investigationid and OD.orgid= @OrgID                                                                                              
Inner join Investigationvalues IV (nolock) ON IV.investigationid=  TBL.investigationid and IV.patientvisitid= TBL.PatientVisitID and isnull(IV.statustype,'') not in ('RR','RC')                       
INNER JOIN @tblPatternID PM ON PM.PatternID = TBL.PatternID                                                
Inner join PatientInvestigationAttributes PIA (nolock) on PIA.PatientInvID =TBL.PatientInvID                                             
--parthi                                                
--inner join PatientVisit pv with (Nolock) on pv.PatientVisitId=TBL.PatientVisitID  and pv.LabVisitType in (@pvisittype)                     
        inner join PatientVisit pv with (Nolock) on pv.PatientVisitId=TBL.PatientVisitID AND ISNULL(pv.LabVisitType,'-1') in (case when @pvisittype=-1 then isnull(pv.LabVisitType,'-1') else (@pvisittype) end)                               
--Left  join AnalyteQCValues AQC on AQC.InvestigationID=tbl.InvestigationID   and  AQC.OrgID=@OrgID and AQC.QcStatus in (select QCvalue from #QCChecktable)       
INNER JOIN Tasks T(NOLOCK) ON T.PatientVisitID = TBL.PatientVisitID     
INNER JOIN PatientInvSample PIS (NOLOCK) ON PIS.PatientVisitID=TBL.PatientVisitID AND PIS.OrgID=T.OrgID     
inner join #ResultFlagtable RT ON RT.isabnormal=TBL.IsAbnormal                                       
AND T.OrgID = @OrgID              
AND T.TaskStatusID IN (                                                      
2                                                 
)                                                      
WHERE T.TaskStatusID IN (                                                                  
2                                                    
)                                
--and TBL.[Status]='Validate'                                                
AND T.OrgID = @OrgID                               
--and @pLocation= @CLocation           
AND PIS.CollectedLocID=COALESCE(@ColleLocationID,PIS.CollectedLocID)              
and TBL.PatientNumber = isnull(@pPatientId, TBL.PatientNumber)                    
    AND ISNULL( PV.LabVisitType,'-1') IN(CASE WHEN @pvisittype=-1 THEN ISNULL(pv.LabVisitType,'')ELSE (@pvisittype) END)                                                                     
ORDER BY valueseq                                               
,PatientVisitID                                                      
,DeptSeq                                            
,FirstLvlSeq                
,GrpContentSeq                                                      
,InnerContentSeq                                                      
,L2ContentSeq                                
OPTION (FORCE ORDER)       
 select TOP 46 F1.valueseq,    
F1.PatientID,    
F1.PatientVisitID,    
F1.AccessionNumber,    
F1.InvestigationID,    
F1.InvestigationName,    
F1.GroupID,    
F1.GroupName ,    
F1.PackageID,    
F1.PackageName ,    
F1.DeptID,    
F1.DeptName,        
F1.UOMID ,    
F1.UOMCode ,    
F1.ReferenceRange,    
F1.PatternID ,    
F1.PatternName,    
F1.GroupComment,    
F1.ValidationText,    
F1.IsAbnormal,    
F1.InvValidationText,    
F1.GroupMedicalRemarks,    
F1.ResultValueType,    
F1.DecimalPlaces,    
F1.UID,    
F1.Name,    
F1.PatientNumber,    
F1.Age,    
F1.Sex,    
F1.AutoApproveLoginID,    
F1.RefSuffixText,    
F1.Sno,    
F1.VisitNumber,    
F1.LabNo,    
F1.TestStatus,    
F1.PrintableRange,    
F1.IsNonEditable,    
F1.DeptSeq,    
F1.FirstLvlSeq,    
F1.GrpContentSeq,    
F1.InnerContentSeq,    
F1.L2ContentSeq ,    
F1.ClientID ,    
F1.Status,    
F1.IsAutoAuthorize,    
F1.IsAutoValidate,    
F1.IsAllowNull,    
F1.CONV_UOMID,    
F1.CONV_UOMCode,    
F1.CONV_Factor,    
F1.CONVFactorDecimalPt,    
F1.ConvReferenceRange,    
F1.ErrorDescription,    
F1.ErrorCode,    
F1.Reason,    
F1.CollectedDateTime    
 from #FinalList F1    
 left Join #FinalList F11 on F1.PatientVisitID=F11.PatientVisitID and F1.FirstLvlSeq=F11.FirstLvlSeq and F11.RowID>46    
  where f11.PatientVisitID is null                  
  order by F1.Rowid          
End      
else if(@pQcCheck in ('-1') )    
Begin           
 Insert into #FinalList    
SELECT DISTINCT  valueseq                            
,TBL.PatientID                                                              
,TBL.PatientVisitID                                                              
,tbl.AccessionNumber                                                  
,tbl.InvestigationID                                                              
,InvestigationName                                                              
,tbl.GroupID                                                              
,TBL.GroupName                                                              
,TBL.PackageID                                                              
,TBL.PackageName                                                              
,IOM.DeptID                                                              
,DeptName                                                              
,TBL.UOMID                                                              
,TBL.UOMCode                                       
,tbl.ReferenceRange                                                              
,TBL.PatternID                                             
,PatternName                                                              
,GroupComment AS 'GroupComment'                                                              
,Validationtext AS 'ValidationText'                                     
,TBL.IsAbnormal                                  
,tbl.InvValidationText                                                              
,GroupMedicalRemarks                                                              
,Isnull(ResultValueType, 'AN') AS ResultValueType                                                 
,DecimalPlaces                                                              
,TBL.UID                                                           
,PatientName AS Name                                                              
,PatientNumber                                                              
,Age                                                              
,Sex                                                              
,tbl.AutoApproveLoginID                                                              
,Ltrim(Rtrim(IsExAuto)) AS RefSuffixText                                              
,COUNTS AS Sno                                                              
,tbl.VisitNumber + (                                                              
CASE                                                               
WHEN Isnull(TBL.BarcodeNumber, '') <> ''                                                         
THEN ' (' + TBL.BarcodeNumber + ')'                                          
ELSE ''                                                  
END                                 
) AS VisitNumber                                                              
,LabNo                          
,TestStatus                                                              
,PrintableRange                  
,IsNonEditable                                                              
,DeptSeq                                                              
,FirstLvlSeq                                                              
,GrpContentSeq                                                              
,InnerContentSeq                              
,L2ContentSeq                                                              
,TBL.ClientID                                                       
,TBL.Status                                                              
,TBL.IsAutoAuthorize                                                              
,TBL.IsAutoValidate                                
,TBL.IsAllowNull                                        
,TBL.CONV_UOMID                                   
,TBL.CONV_UOMCode                                                              
,TBL.CONV_Factor                                                              
,TBL.CONVFactorDecimalPt                                                              
,TBL.ConvReferenceRange                                                              
,TBL.ErrorDescription                                                              
,TBL.ErrorCode                                                              
,TBL.Reason                                                  
 ,tbl.InvestigationID ,                                     
 --,(CASE WHEN AQC.QcStatus=1 THEN 'Y' ELSE 'N' END) as QCData,AQC.value1 as DeviceActualValue ,         
 (Select top 1 (Case When QCStatus=1 Then '1' Else '0' End)+'~'+Value1 From AnalyteQCValues QC Inner Join    
 InvInstrumentMaster IIM on IIM.ProductCode=IV.deviceId and IIM.OrgID=IV.orgid    
 where Qc.InvestigationId=IV.InvestigationID and QC.instrumentid=IIm.InstrumentId  and QC.orgid=PIS.OrgID order by QC.createdat desc) as QCData,'' as DeviceActualValue,    
 PIA.DeltaCheckStatus as IsDeltaStatus,    
PIA.IsDeltaCheck,    
isnull(PIA.DeltaLowerLimit,0.0) as DeltaLowerLimit,    
isnull(PIA.DeltaHigherLimit,0.0) as DeltaHigherLimit        
,TBL.CollectedDateTime                                            
FROM @tblVisitDetails tmp                                                              
INNER JOIN @ResultSetByRowIDWithHeader TBL ON tbl.PatientVisitID = tmp.Visitid                                                              
AND tbl.AccessionNumber = tmp.AccessionNumber      
Inner Join Investigationorgmapping IOM(nolock) on IOM.InvestigationID=tbl.InvestigationID and IOM.OrgID=@OrgID       
left join Investigationvalues IV (nolock) ON IV.investigationid=  TBL.investigationid and IV.patientvisitid= TBL.PatientVisitID and isnull(IV.statustype,'') not in ('RR','RC')                                   
INNER JOIN @tblPatternID PM ON PM.PatternID = TBL.PatternID                                                
Inner join PatientInvestigationAttributes PIA (nolock) on PIA.PatientInvID =TBL.PatientInvID                                             
--parthi                                                
--inner join PatientVisit pv with (Nolock) on pv.PatientVisitId=TBL.PatientVisitID  and pv.LabVisitType in (@pvisittype)                     
        inner join PatientVisit pv with (Nolock) on pv.PatientVisitId=TBL.PatientVisitID AND ISNULL(pv.LabVisitType,'-1') in (case when @pvisittype=-1 then isnull(pv.LabVisitType,'-1') else (@pvisittype) end)                               
--Left  join AnalyteQCValues AQC on AQC.InvestigationID=tbl.InvestigationID   and  AQC.OrgID=@OrgID and AQC.QcStatus in (select QCvalue from #QCChecktable)       
--INNER JOIN Tasks T(NOLOCK) ON T.PatientVisitID = TBL.PatientVisitID      
INNER JOIN PatientInvSample PIS (NOLOCK) ON PIS.PatientVisitID=TBL.PatientVisitID --AND PIS.OrgID=T.OrgID    
inner join #ResultFlagtable RT ON RT.isabnormal=isnull(TBL.IsAbnormal,'')                                                                        
--AND T.OrgID = @OrgID                                                      
--AND T.TaskStatusID IN (         
--2                                                 
--)                                                      
WHERE     
--T.TaskStatusID IN (                                                                  
--2                                                    
--)                                                
----and TBL.[Status]='Validate'                                                
--AND T.OrgID = @OrgID AND                              
--and @pLocation= @CLocation           
 PIS.CollectedLocID=COALESCE(@ColleLocationID,PIS.CollectedLocID)              
and TBL.PatientNumber = isnull(@pPatientId, TBL.PatientNumber)                    
    AND ISNULL( PV.LabVisitType,'-1') IN(CASE WHEN @pvisittype=-1 THEN ISNULL(pv.LabVisitType,'')ELSE (@pvisittype) END)                                                                     
ORDER BY valueseq                                               
,PatientVisitID                                                      
,DeptSeq                                            
,FirstLvlSeq                     
,GrpContentSeq                                                      
,InnerContentSeq                                                      
,L2ContentSeq                                
OPTION (FORCE ORDER)       
 select TOP 46 F1.valueseq,    
F1.PatientID,    
F1.PatientVisitID,    
F1.AccessionNumber,    
F1.InvestigationID,    
F1.InvestigationName,    
F1.GroupID,    
F1.GroupName ,    
F1.PackageID,    
F1.PackageName ,    
F1.DeptID,    
F1.DeptName,        
F1.UOMID ,    
F1.UOMCode ,    
F1.ReferenceRange,    
F1.PatternID ,    
F1.PatternName,    
F1.GroupComment,    
F1.ValidationText,    
F1.IsAbnormal,    
F1.InvValidationText,    
F1.GroupMedicalRemarks,    
F1.ResultValueType,    
F1.DecimalPlaces,    
F1.UID,    
F1.Name,    
F1.PatientNumber,    
F1.Age,    
F1.Sex,    
F1.AutoApproveLoginID,    
F1.RefSuffixText,    
F1.Sno,    
F1.VisitNumber,    
F1.LabNo,    
F1.TestStatus,    
F1.PrintableRange,    
F1.IsNonEditable,    
F1.DeptSeq,    
F1.FirstLvlSeq,    
F1.GrpContentSeq,    
F1.InnerContentSeq,    
F1.L2ContentSeq ,    
F1.ClientID ,    
F1.Status,    
F1.IsAutoAuthorize,    
F1.IsAutoValidate,    
F1.IsAllowNull,    
F1.CONV_UOMID,    
F1.CONV_UOMCode,    
F1.CONV_Factor,    
F1.CONVFactorDecimalPt,    
F1.ConvReferenceRange,    
F1.ErrorDescription,    
F1.ErrorCode,    
F1.Reason,    
F1.CollectedDateTime    
 from #FinalList F1    
 left Join #FinalList F11 on F1.PatientVisitID=F11.PatientVisitID and F1.FirstLvlSeq=F11.FirstLvlSeq and F11.RowID>46    
  where f11.PatientVisitID is null                  
  order by F1.Rowid          
End    
else    
Begin    
insert into @Finaltable    
SELECT DISTINCT TOP 46 valueseq                                      
,TBL.PatientID              
,TBL.PatientVisitID                                                              
,tbl.AccessionNumber                                                  
,tbl.InvestigationID                                                              
,InvestigationName                                                              
,GroupID                                                              
,GroupName                                                              
,PackageID                                                              
,PackageName                                                              
,T.DeptID                                                              
,DeptName                                                              
,UOMID                                                        
,UOMCode                          
,ReferenceRange                                                              
,TBL.PatternID                                             
,PatternName                                                              
,GroupComment AS 'GroupComment'                                                              
,Validationtext AS 'ValidationText'                                     
,TBL.IsAbnormal       
,InvValidationText                                        
,GroupMedicalRemarks                                                              
,Isnull(ResultValueType, 'AN') AS ResultValueType                                                              
,DecimalPlaces                                                              
,TBL.[UID]                                                              
,PatientName AS Name                                                              
,PatientNumber                                                              
,Age           
,Sex                                                              
,AutoApproveLoginID                                                              
,Ltrim(Rtrim(IsExAuto)) AS RefSuffixText                                              
,COUNTS AS Sno                                                              
,tbl.VisitNumber + (                                                              
CASE                                                               
WHEN Isnull(TBL.BarcodeNumber, '') <> ''                                                              
THEN ' (' + TBL.BarcodeNumber + ')'                                                              
ELSE ''                                                              
END                                 
) AS VisitNumber                                 
,LabNo                          
,TestStatus                                                              
,PrintableRange                                                              
,IsNonEditable                                                              
,DeptSeq                                                              
,FirstLvlSeq                                                              
,GrpContentSeq                                                              
,InnerContentSeq                                                              
,L2ContentSeq                         
,TBL.ClientID                                                       
,TBL.Status                                                              
,TBL.IsAutoAuthorize                                                              
,TBL.IsAutoValidate                                                              
,TBL.IsAllowNull                                        
,TBL.CONV_UOMID                                   
,TBL.CONV_UOMCode                                                              
,TBL.CONV_Factor                                                              
,TBL.CONVFactorDecimalPt                   
,TBL.ConvReferenceRange                                                              
,TBL.ErrorDescription      
,TBL.ErrorCode                                                              
,TBL.Reason                           
 ,(CASE WHEN AQC.QcStatus=1 THEN 'Y' ELSE 'N' END) as QCData    
 ,TBL.CollectedDateTime                                                     
FROM @tblVisitDetails tmp                                                              
INNER JOIN @ResultSetByRowIDWithHeader TBL ON tbl.PatientVisitID = tmp.Visitid                                                              
AND tbl.AccessionNumber = tmp.AccessionNumber                                             
INNER JOIN @tblPatternID PM ON PM.PatternID = TBL.PatternID                                                
--parthi                                                
--inner join PatientVisit pv with (Nolock) on pv.PatientVisitId=TBL.PatientVisitID  and pv.LabVisitType in (@pvisittype)                     
    inner join PatientVisit pv with (Nolock) on pv.PatientVisitId=TBL.PatientVisitID AND ISNULL(pv.LabVisitType,'-1') in (case when @pvisittype=-1 then isnull(pv.LabVisitType,'-1') else (@pvisittype) end)                               
Inner  join AnalyteQCValues AQC on AQC.InvestigationID=tbl.InvestigationID   and  AQC.OrgID=@OrgID and AQC.QcStatus in (select QCvalue from #QCChecktable)       
INNER JOIN Tasks T(NOLOCK) ON T.PatientVisitID = TBL.PatientVisitID      
INNER JOIN PatientInvSample PIS (NOLOCK) ON PIS.PatientVisitID=TBL.PatientVisitID AND PIS.OrgID=T.OrgID      
inner join #ResultFlagtable RT ON RT.isabnormal=TBL.IsAbnormal                                                                        
AND T.OrgID = @OrgID                                                      
AND T.TaskStatusID IN (                                                      
2                                                 
)                                                      
WHERE T.TaskStatusID IN (                                                                  
2                                            
)                                                
--and TBL.[Status]='Validate'                                                
AND T.OrgID = @OrgID                               
--and @pLocation= @CLocation           
AND PIS.CollectedLocID=COALESCE(@ColleLocationID,PIS.CollectedLocID)                         
and TBL.PatientNumber = isnull(@pPatientId, TBL.PatientNumber)                
    AND ISNULL( PV.LabVisitType,'-1') IN(CASE WHEN @pvisittype=-1 THEN ISNULL(pv.LabVisitType,'')ELSE (@pvisittype) END)                                                                     
ORDER BY valueseq                                               
,PatientVisitID                                                      
,DeptSeq                  
,FirstLvlSeq                     
,GrpContentSeq                                                      
,InnerContentSeq                                                      
,L2ContentSeq                                
OPTION (FORCE ORDER)      
    
    
if (@pIsAbnormal='3')    
begin    
select T.* from @Finaltable T    
Inner join OutsourcingDetail OD (nolock) on T.PatientVisitID=OD.PatientVisitID and T.InvestigationID=OD.InvestigationID and OD.OrgId=@OrgID    
End    
else if(@DeviceID is null)    
Begin    
select * from @Finaltable    
End    
else    
Begin    
select T.* from @Finaltable T    
Inner join InvestigationValues IV (nolock) on T.PatientVisitID=IV.PatientVisitID and T.InvestigationID=IV.InvestigationID and isnull(IV.statustype,'') not in ('RR','RC')    
Inner join InvInstrumentMaster IIM on IIM.ProductCode=IV.DeviceID    
where IIM.InstrumentID=@DeviceID    
End    
End                                                   
END    
  
Create table  #tempVisit    
(Visitid bigint)  
  
if(@pvisittype ='-1')  
Begin  
Insert into   #tempVisit  
select Visitid from @tblVisitDetails   
End  
else  
Begin  
Insert into   #tempVisit  
select Patientvisitid from patientvisit PV(nolock)  
inner Join  @tblVisitDetails T on PV.PatientVisitId=T.Visitid  
where PV.LabVisitType=  @pvisittype         
End    
    
if(@pIsAbnormal='3')    
Begin    
Insert into #FinalList    
SELECT DISTINCT valueseq                                                           
,PatientID                                       
,TBL.PatientVisitID                   
,tbl.AccessionNumber                                                              
,tbl.InvestigationID                                                              
,InvestigationName         
,GroupID                                                              
,GroupName                                                              
,PackageID                                                     
,PackageName                                                              
,DeptID                                                              
,DeptName                                                              
,UOMID                                            
,UOMCode                                                              
,ReferenceRange                                                      
,TBL.PatternID                                                              
,PatternName                                                              
,GroupComment AS 'GroupComment'                                                              
,Validationtext AS 'ValidationText'                                   
,IsAbnormal                                                              
,InvValidationText                                                              
,GroupMedicalRemarks                                                              
,Isnull(ResultValueType, 'AN') AS ResultValueType                                                              
,DecimalPlaces                                         
,TBL.[UID]                                
,PatientName AS Name                                                              
,PatientNumber                                                              
,Age                                                              
,Sex                                                              
,AutoApproveLoginID                                                              
,Ltrim(Rtrim(IsExAuto)) AS RefSuffixText                                                              
,COUNTS AS Sno                                                              
,VisitNumber + (                        
CASE                                 
WHEN Isnull(BarcodeNumber, '') <> ''                                                              
THEN ' (' + BarcodeNumber + ')'                                                              
ELSE ''                                                              
END                                   
) AS VisitNumber                                                        
,LabNo                                                              
,TestStatus                                                              
,PrintableRange                                                    
,IsNonEditable                                                    
,DeptSeq                                                              
,FirstLvlSeq                                         
,GrpContentSeq                                                              
,InnerContentSeq                                                              
,L2ContentSeq                                                              
,TBL.ClientID                                                              
,TBL.Status             
,TBL.IsAutoAuthorize                                                 
,TBL.IsAutoValidate                          
,TBL.IsAllowNull                                                              
,TBL.CONV_UOMID                                                              
,TBL.CONV_UOMCode                                                              
,TBL.CONV_Factor                                                              
,TBL.CONVFactorDecimalPt                                                              
,TBL.ConvReferenceRange                                                              
,Isnull(TBL.ErrorDescription, '') AS ErrorDescription                                                              
,Isnull(TBL.ErrorCode, '') AS ErrorCode                      
,TBL.Reason               
,TBL.CollectedDateTime       
FROM @tblVisitDetails tmp        
Inner Join #tempVisit T on tmp.Visitid=T.Visitid                                            
INNER JOIN @ResultSetByRowIDWithHeader TBL ON tbl.PatientVisitID = tmp.Visitid                                                              
AND tbl.AccessionNumber = tmp.AccessionNumber      
Inner join outsourcingdetail OD(nolock) on OD.PatientVisitID =TBL.PatientVisitID and OD.Investigationid=TBL.Investigationid and OD.orgid= @OrgID                                      
INNER JOIN @tblPatternID PM ON PM.PatternID = TBL.PatternID                                                              
ORDER BY valueseq                                                              
,PatientVisitID                                                              
,DeptSeq                                                              
,FirstLvlSeq                                                              
,GrpContentSeq                                       
,InnerContentSeq                                                              
,L2ContentSeq                                                              
OPTION (FORCE ORDER)        
 select TOP 46 F1.valueseq,    
F1.PatientID,    
F1.PatientVisitID,    
F1.AccessionNumber,    
F1.InvestigationID,    
F1.InvestigationName,    
F1.GroupID,    
F1.GroupName ,    
F1.PackageID,    
F1.PackageName ,    
F1.DeptID,    
F1.DeptName,        
F1.UOMID ,    
F1.UOMCode ,    
F1.ReferenceRange,    
F1.PatternID ,    
F1.PatternName,    
F1.GroupComment,    
F1.ValidationText,    
F1.IsAbnormal,    
F1.InvValidationText,    
F1.GroupMedicalRemarks,    
F1.ResultValueType,    
F1.DecimalPlaces,    
F1.UID,    
F1.Name,    
F1.PatientNumber,    
F1.Age,    
F1.Sex,    
F1.AutoApproveLoginID,    
F1.RefSuffixText,    
F1.Sno,    
F1.VisitNumber,    
F1.LabNo,    
F1.TestStatus,    
F1.PrintableRange,    
F1.IsNonEditable,    
F1.DeptSeq,    
F1.FirstLvlSeq,    
F1.GrpContentSeq,    
F1.InnerContentSeq,    
F1.L2ContentSeq ,    
F1.ClientID ,    
F1.Status,    
F1.IsAutoAuthorize,    
F1.IsAutoValidate,    
F1.IsAllowNull,    
F1.CONV_UOMID,    
F1.CONV_UOMCode,    
F1.CONV_Factor,    
F1.CONVFactorDecimalPt,    
F1.ConvReferenceRange,    
F1.ErrorDescription,    
F1.ErrorCode,    
F1.Reason,    
F1.CollectedDateTime    
 from #FinalList F1    
 left Join #FinalList F11 on F1.PatientVisitID=F11.PatientVisitID and F1.FirstLvlSeq=F11.FirstLvlSeq and F11.RowID>46    
  where f11.PatientVisitID is null                  
  order by F1.Rowid           
End      
    
else IF (@pActionName = 'Approvel' and @pIsAbnormal=2)                                                    
BEGIN                                                       
--select @pActionName                                                
--declare @TemporyPatID varchar(100)                             
-- select distinct  TBL.PatientID FROM @tblVisitDetails tmp                                                        
--INNER JOIN @ResultSetByRowIDWithHeader TBL ON tbl.PatientVisitID = tmp.Visitid                                                        
--AND tbl.AccessionNumber = tmp.AccessionNumber                                                        
--INNER JOIN @tblPatternID PM ON PM.PatternID = TBL.PatternID                                                        
--INNER JOIN Tasks T(NOLOCK) ON T.PatientVisitID = TBL.PatientVisitID                                                     
--AND T.OrgID = @OrgID                                                        
--AND T.TaskStatusID IN (                                                        
--2                                                    
--)                                                        
--WHERE T.TaskStatusID IN (                                                        
--2                                                     
--)    -- and TBL.Status='Validate'                                                    
--AND T.OrgID = @OrgID                                                        
--ORDER BY valueseq       
Insert into #FinalList                                                
SELECT DISTINCT valueseq                                                             
 ,TBL.PatientID         
,TBL.PatientVisitID                                                              
,tbl.AccessionNumber                                                  
,tbl.InvestigationID                                                              
,InvestigationName          
,GroupID                                                
,GroupName                                                              
,PackageID                           
,PackageName                                                              
,T.DeptID                                                              
,DeptName                                                              
,UOMID                                                              
,UOMCode                                       
,ReferenceRange                                                              
,TBL.PatternID                                             
,PatternName                                                              
,GroupComment AS 'GroupComment'                                                              
,Validationtext AS 'ValidationText'                                                              
,IsAbnormal         
,InvValidationText                                                              
,GroupMedicalRemarks                                                              
,Isnull(ResultValueType, 'AN') AS ResultValueType                                                              
,DecimalPlaces                                                              
,TBL.[UID]                                                              
,PatientName AS Name                                                              
,PatientNumber                                                              
,Age                                                              
,Sex                                                              
,AutoApproveLoginID                                                              
,Ltrim(Rtrim(IsExAuto)) AS RefSuffixText                                                              
,COUNTS AS Sno                                                          
,tbl.VisitNumber + (                           
CASE                                                               
WHEN Isnull(TBL.BarcodeNumber, '') <> ''                                           
THEN ' (' + TBL.BarcodeNumber + ')'                                                              
ELSE ''                                                              
END                                 
) AS VisitNumber                         
,LabNo                          
,TestStatus                                                              
,PrintableRange                                                              
,IsNonEditable                                                              
,DeptSeq                                                              
,FirstLvlSeq                                                              
,GrpContentSeq                                                              
,InnerContentSeq                                                              
,L2ContentSeq                                                              
,TBL.ClientID                                                              
,TBL.Status                                                              
,TBL.IsAutoAuthorize                          
,TBL.IsAutoValidate                                                              
,TBL.IsAllowNull                                        
,TBL.CONV_UOMID                                                              
,TBL.CONV_UOMCode                                                              
,TBL.CONV_Factor                                                              
,TBL.CONVFactorDecimalPt                                                              
,TBL.ConvReferenceRange                                                              
,TBL.ErrorDescription                                          
,TBL.ErrorCode                                                    
,TBL.Reason                                                  
 ,tbl.InvestigationID                            
                 
 ,(CASE WHEN AQC.QcStatus=1 THEN 'Y' ELSE 'N' END) as QCData        
 ,TBL.CollectedDateTime                                                 
FROM @tblVisitDetails tmp      
Inner Join #tempVisit TT on tmp.Visitid=TT.Visitid            
INNER JOIN @ResultSetByRowIDWithHeader TBL ON tbl.PatientVisitID = tmp.Visitid                                                              
AND tbl.AccessionNumber = tmp.AccessionNumber                                             
INNER JOIN @tblPatternID PM ON PM.PatternID = TBL.PatternID                                                
--parthi                                                
--inner join PatientVisit pv with (Nolock) on pv.PatientVisitId=TBL.PatientVisitID  and pv.LabVisitType in (@pvisittype)                     
        inner join PatientVisit pv with (Nolock) on pv.PatientVisitId=TBL.PatientVisitID AND ISNULL(pv.LabVisitType,'-1') in (case when @pvisittype=-1 then isnull(pv.LabVisitType,'-1') else (@pvisittype) end)                               
left outer join AnalyteQCValues AQC on AQC.InvestigationID=tbl.InvestigationID   and  AQC.OrgID=@OrgID and                        
Isnull(AQC.QcStatus,'-1') in (case  when @pQcCheck=-1  then isnull(aqc.QcStatus,'-1')   else (@pQcCheck) end )                                          
                      
INNER JOIN Tasks T(NOLOCK) ON T.PatientVisitID = TBL.PatientVisitID                                         
--and TBL.PatientID =@pPatientId                
--and PatientNumber = (case when @pPatientId='' then  PatientNumber else @pPatientId end)                                
 --case when @pPatientId is null or @pPatientId='' then TBL.PatientID =@pPatientId   else   TBL.PatientID=TBL.PatientID end                                           
AND T.OrgID = @OrgID                                                      
AND T.TaskStatusID IN (                                                      
2                                                 
)         
INNER JOIN PatientInvSample PIS (NOLOCK) ON PIS.PatientVisitID=T.PatientVisitID AND PIS.OrgID=T.OrgId                                                  
WHERE T.TaskStatusID IN (                                                                  
2                                                    
)                                                
--and TBL.[Status]='Validate'                                                
AND T.OrgID = @OrgID                               
--and @pLocation= @CLocation           
AND PIS.CollectedLocID=COALESCE(@ColleLocationID,PIS.CollectedLocID)          
--and  isnull(@pIsAbnormal,'-1')= CASE when  isnull(TBL.IsAbnormal,-1) in('A','P','L') then 1 when isnull(TBL.IsAbnormal,-1) in ('N','') then 0 end           
          
--and tbl.IsAbnormal=(case when @pPatientId=0  then 'N' else 'A' || 'L' end )                 
and PatientNumber = (case when @pPatientId='' then  PatientNumber else @pPatientId end)                         
         and ISNULL(AQC.QcStatus,'-1') in (case  when @pQcCheck=-1  then isnull(aqc.QcStatus,'-1') else  (@pQcCheck) end )                        
    AND ISNULL( PV.LabVisitType,'-1') IN(CASE WHEN @pvisittype=-1 THEN ISNULL(pv.LabVisitType,'')ELSE (@pvisittype) END)                     
  --   and pv.LabVisitType in( case  when pv.LabVisitType=-1 then '0,1' else @pQcCheck end)                    
--and @TemporyPatID=TBL.PatientID                                                      
ORDER BY valueseq                                               
,PatientVisitID                                                      
,DeptSeq                                            
,FirstLvlSeq                     
,GrpContentSeq                                                      
,InnerContentSeq                                                      
,L2ContentSeq                                            
OPTION (FORCE ORDER)        
  
 select TOP 46 F1.valueseq,    
F1.PatientID,    
F1.PatientVisitID,    
F1.AccessionNumber,    
F1.InvestigationID,    
F1.InvestigationName,    
F1.GroupID,    
F1.GroupName ,    
F1.PackageID,    
F1.PackageName ,    
F1.DeptID,    
F1.DeptName,        
F1.UOMID ,    
F1.UOMCode ,    
F1.ReferenceRange,    
F1.PatternID ,    
F1.PatternName,    
F1.GroupComment,    
F1.ValidationText,    
F1.IsAbnormal,    
F1.InvValidationText,    
F1.GroupMedicalRemarks,    
F1.ResultValueType,    
F1.DecimalPlaces,    
F1.UID,    
F1.Name,    
F1.PatientNumber,    
F1.Age,    
F1.Sex,    
F1.AutoApproveLoginID,    
F1.RefSuffixText,    
F1.Sno,    
F1.VisitNumber,    
F1.LabNo,    
F1.TestStatus,    
F1.PrintableRange,    
F1.IsNonEditable,    
F1.DeptSeq,    
F1.FirstLvlSeq,    
F1.GrpContentSeq,    
F1.InnerContentSeq,    
F1.L2ContentSeq ,    
F1.ClientID ,    
F1.Status,    
F1.IsAutoAuthorize,    
F1.IsAutoValidate,    
F1.IsAllowNull,    
F1.CONV_UOMID,    
F1.CONV_UOMCode,    
F1.CONV_Factor,    
F1.CONVFactorDecimalPt,    
F1.ConvReferenceRange,    
F1.ErrorDescription,    
F1.ErrorCode,    
F1.Reason,    
F1.CollectedDateTime    
 from #FinalList F1    
 left Join #FinalList F11 on F1.PatientVisitID=F11.PatientVisitID and F1.FirstLvlSeq=F11.FirstLvlSeq and F11.RowID>46    
  where f11.PatientVisitID is null                  
  order by F1.Rowid                                                        
END                                               
ELSE                                           
BEGIN             
Insert into #FinalList                                                
SELECT Distinct valueseq                                                           
,PatientID                                       
,PatientVisitID                   
,tbl.AccessionNumber                       
,InvestigationID                                                              
,InvestigationName                            
,GroupID                                                              
,GroupName                                                              
,PackageID                                                     
,PackageName                                                              
,DeptID                                                              
,DeptName                                                              
,UOMID                                                              
,UOMCode                                                     
,ReferenceRange                                                      
,TBL.PatternID                                                              
,PatternName                    
,GroupComment AS 'GroupComment'                                                              
,Validationtext AS 'ValidationText'                                   
,IsAbnormal                                                              
,InvValidationText                                                              
,GroupMedicalRemarks                                                              
,Isnull(ResultValueType, 'AN') AS ResultValueType                                                              
,DecimalPlaces                                         
,[UID]                                                   
,PatientName AS Name                                                              
,PatientNumber                                                              
,Age                                                              
,Sex                                                              
,AutoApproveLoginID                                                              
,Ltrim(Rtrim(IsExAuto)) AS RefSuffixText                                                              
,COUNTS AS Sno                                                              
,VisitNumber + (                        
CASE                                                               
WHEN Isnull(BarcodeNumber, '') <> ''                                                              
THEN ' (' + BarcodeNumber + ')'               
ELSE ''                                                              
END                                                              
) AS VisitNumber                                         
,LabNo                                                              
,TestStatus                                                              
,PrintableRange                                                    
,IsNonEditable                                                    
,DeptSeq                                                              
,FirstLvlSeq                                                              
,GrpContentSeq                                            
,InnerContentSeq                                                              
,L2ContentSeq                                                              
,TBL.ClientID                                                              
,TBL.Status                        
,TBL.IsAutoAuthorize                                                 
,TBL.IsAutoValidate                                                              
,TBL.IsAllowNull                                                              
,TBL.CONV_UOMID                                                              
,TBL.CONV_UOMCode                                                              
,TBL.CONV_Factor                                                              
,TBL.CONVFactorDecimalPt                                                              
,TBL.ConvReferenceRange                                                              
,Isnull(TBL.ErrorDescription, '') AS ErrorDescription                                                              
,Isnull(TBL.ErrorCode, '') AS ErrorCode                      
,TBL.Reason                  
,TBL.CollectedDateTime       
FROM @tblVisitDetails tmp       
Inner Join #tempVisit T on tmp.Visitid=T.Visitid                                                          
INNER JOIN @ResultSetByRowIDWithHeader TBL ON tbl.PatientVisitID = tmp.Visitid                                                              
AND tbl.AccessionNumber = tmp.AccessionNumber                                                              
INNER JOIN @tblPatternID PM ON PM.PatternID = TBL.PatternID                                                              
ORDER BY valueseq                                                              
,PatientVisitID                                                              
,DeptSeq                                                    
,FirstLvlSeq                                                              
,GrpContentSeq                  
,InnerContentSeq                                                              
,L2ContentSeq                                                              
OPTION (FORCE ORDER)       
    
    
--select Row_Number() OVER (    
-- ORDER BY PatientVisitID,Investigationid ) as Rno,  * into #final from #tempfinal  --where PatientVisitID not in (select PatientVisitID from #tempfinal where valueseq>22)     
  
 select TOP 46 F1.valueseq,   
F1.PatientID,    
F1.PatientVisitID,    
F1.AccessionNumber,    
F1.InvestigationID,    
F1.InvestigationName,    
F1.GroupID,    
F1.GroupName ,    
F1.PackageID,    
F1.PackageName ,    
F1.DeptID,    
F1.DeptName,        
F1.UOMID ,    
F1.UOMCode ,    
F1.ReferenceRange,    
F1.PatternID ,    
F1.PatternName,    
F1.GroupComment,    
F1.ValidationText,    
F1.IsAbnormal,    
F1.InvValidationText,    
F1.GroupMedicalRemarks,    
F1.ResultValueType,    
F1.DecimalPlaces,    
F1.UID,    
F1.Name,    
F1.PatientNumber,    
F1.Age,    
F1.Sex,    
F1.AutoApproveLoginID,    
F1.RefSuffixText,    
F1.Sno,    
F1.VisitNumber,    
F1.LabNo,    
F1.TestStatus,    
F1.PrintableRange,    
F1.IsNonEditable,    
F1.DeptSeq,    
F1.FirstLvlSeq,    
F1.GrpContentSeq,    
F1.InnerContentSeq,    
F1.L2ContentSeq ,    
F1.ClientID ,    
F1.Status,    
F1.IsAutoAuthorize,    
F1.IsAutoValidate,    
F1.IsAllowNull,    
F1.CONV_UOMID,    
F1.CONV_UOMCode,    
F1.CONV_Factor,    
F1.CONVFactorDecimalPt,    
F1.ConvReferenceRange,    
F1.ErrorDescription,    
F1.ErrorCode,    
F1.Reason,    
F1.CollectedDateTime    
 from #FinalList F1    
 left Join #FinalList F11 on F1.PatientVisitID=F11.PatientVisitID and F1.GroupId=F11.GroupId and F11.RowID>46    
  where f11.PatientVisitID is null                  
  order by F1.Rowid                                          
END                                                              
DROP TABLE #tblDependentInvestigation                                                              
DROP TABLE #tblPatientInvestigation                                                              
DROP TABLE #OrderedPatientInv                                                              
DROP TABLE #PInvestigationList                                                              
DROP TABLE #tblBatchVisits                          
DROP TABLE #tblOrdInvExploded                                                              
DROP TABLE #ResultSetByRowID                                                              
DROP TABLE #tblPatientInvestigation_Mirror      
drop table #ResultFlagtable        
drop table #temppatientvisitid      
drop table #FinalList     
drop table #tempVisit                                                   
END 