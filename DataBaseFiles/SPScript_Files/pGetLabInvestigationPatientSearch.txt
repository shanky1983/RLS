create PROCEDURE [dbo].[pGetLabInvestigationPatientSearch] @orgAddID        [INT],
                                                          @OrgID           [INT],
                                                          @RoleID          [BIGINT],
                                                          @PatientID       [BIGINT],
                                                          @PatientName     [NVARCHAR] (255),
                                                          @startRowIndex   [INT],
                                                          @pageSize        [INT],
                                                          @totalRows       [INT] OUTPUT,
                                                          @pVisitType      [INT],
                                                          @pSourceId       [BIGINT],
                                                          @wardno          [NVARCHAR] (255),
                                                          @Status          [NVARCHAR] (255),
                                                          @InvName         [NVARCHAR] (255),
                                                          @FromDate        [NVARCHAR] (255),
                                                          @toDate          [NVARCHAR] (255),
                                                          @priority        [INT],
                                                          @visitNumber     NVARCHAR(100),
                                                          @patnumber       NVARCHAR(100),
                                                          @pType           NVARCHAR(20),
                                                          @pDeptID         [BIGINT],
                                                          @pTaskAction     NVARCHAR(50),
                                                          @pRefPhyID       [INT],
                                                          @pLocationID     [BIGINT],
                                                          @LoginDetail     [dbo].[LOGINDETAIL] READONLY,
                                                          @ContextInfo     [UDT_CONTEXT] READONLY,
                                                          @IsTimed         NVARCHAR(25),
                                                          @ProtocalGroupID BIGINT,
							  @barCode         NVARCHAR(100),
                                                         @allocated       NVARCHAR(10), ---Added by kapil                
						@SampleID         NVARCHAR(100)              
WITH EXECUTE AS OWNER
AS
  BEGIN
   SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED
   SET NOCOUNT ON;    
   BEGIN  TRY  
       DECLARE @EMsg nvarchar(4000),@ELine int,@Eproc nvarchar(128),@ESEVERITY int,@sptrace varchar(8000) 

      DECLARE @ConfigKeyValue NVARCHAR(10)

      SET @ConfigKeyValue = (SELECT com.ConfigValue
                             FROM   ConfigKeyMaster ckm
                                    INNER JOIN ConfigOrgMaster com
                                            ON ckm.ConfigKeyID = com.ConfigKeyID
                                               AND com.OrgID = @OrgID
                                               AND Isnull(ckm.ConfigKey, '') = 'ShowTasksUsingTatDate')

      DECLARE @DeptID NVARCHAR(MAX)
      DECLARE @chkStatus NVARCHAR(max)
      DECLARE @strSourceId NVARCHAR(200)
      DECLARE @strVisitType NVARCHAR(50)
      DECLARE @strPtNameNum NVARCHAR(250)
      DECLARE @InvNamesForInv NVARCHAR(255)
      DECLARE @InvNamesForGrpPKG NVARCHAR(255)
      DECLARE @pStatus NVARCHAR(255)
      DECLARE @Dates NVARCHAR(255)
      DECLARE @WardNos NVARCHAR(255)
      DECLARE @Vno NVARCHAR(100)
      DECLARE @Pno NVARCHAR(100)
      DECLARE @RefPhy NVARCHAR(100) = ''
      DECLARE @Location NVARCHAR(100) = ''
      DECLARE @SQLQuery NVARCHAR(Max) = ''
	   DECLARE @SamID NVARCHAR(100)
      DECLARE @ServerDate DATETIME

      SELECT @ServerDate = (SELECT dbo.Fn_getserverdate(@ContextInfo))
      DECLARE @LangCode AS NVARCHAR(80);
      SELECT @LangCode = languageCode
      FROM   @ContextInfo

      CREATE TABLE #TempProtocalGroup
        (
           ID   BIGINT,
           Type NVARCHAR(100)
        )

      IF ( @ProtocalGroupID > 0 )
        BEGIN
            INSERT INTO #TempProtocalGroup
                        (ID,
                         Type)
            SELECT Inv.Investigationid,
                   'INV'
            FROM   investigationOrgmapping Inv 
            WHERE  Inv.ProtocalGroupID = @ProtocalGroupID
                   AND Inv.OrgID = @OrgID
            UNION
            SELECT IOG.AttGroupId,
                   'GRP'
            FROM   invorggroup IOG 
            WHERE  IOG.ProtocalGroupID = @ProtocalGroupID
                   AND IOG.OrgID = @OrgID
        END


			declare @labbarcode Nvarchar(100)=null
	declare @labCode Nvarchar(100)=null
	Create table #templabcode
	(sampleid bigint,Barcode nvarchar(100),Labcode nvarchar(100))

			if(@Barcode!='')
			Begin
			insert into #templabcode
			select distinct SID,barcode,Labcode from patientinvsamplemapping PISM  (nolock)
			Inner join OrderedInvestigations OI (nolock) on PISM.Accessionnumber=Oi.Accessionnumber and OI.status!='Retest'
				where PISM.labcode=@Barcode and PISM.Orgid=@OrgID

				delete T from #templabcode T
				inner Join sampletracker ST (nolock) on ST.sampleid=T.Sampleid and ST.invsamplestatusid in (4,6)

				select top 1 @labbarcode =Barcode,@labCode=Labcode from #templabcode
			if(isnull(@labbarcode,'')!='')
			Begin
			set @Barcode=@labbarcode
			End
			End

			drop table #templabcode

      -- IF (@visitNumber='')                                                                                                          
      --BEGIN                                                                                                                                                  
      -- set @Vno='PV.VisitNumber=PV.VisitNumber'                                                                                                                                                  
      --END                                                                
      --ELSE                                                                         
      --BEGIN                                                                               
      --  set @Vno='PV.VisitNumber=''' + CONVERT(nvarchar,@visitNumber) + ''' '                                                                                                 
      --END                                                                           
      ---------------Added by kapil-------------------------        
      DECLARE @clientid NVARCHAR(max)

      IF ( @pSourceId = -1 )
        BEGIN
            SET @clientid = ''
        END
      ELSE IF ( @pSourceId <> -1 )
        BEGIN
            SET @clientid = ' INNER JOIN VisitClientMapping VCM   ON VCM.VisitID = PIV.VisitId  AND VCM.cLIENTID= '
                            + Cast(@pSourceId AS NVARCHAR)
        END

      ----------------------------end by kapil                                                                   
      IF ( @pRefPhyID > 0 )
        BEGIN
            SET @RefPhy = ' AND PV.ReferingPhysicianID='''
                          + CONVERT(NVARCHAR(50), @pRefPhyID) + ''' '
        END

      IF ( @pLocationID > 0 )
        BEGIN
            SET @Location = ' AND PV.OrgAddressID='''
                            + CONVERT(NVARCHAR(50), @pLocationID) + ''' '
        END
		IF(@SampleID='')
		BEGIN
		SET @SamID='PIV.SampleID IS NULL'
		
		END
		Else
		BEGIN
		SET @SamID= 'PIV.SampleID='''
                             + CONVERT(NVARCHAR, @SampleID) + ''' '
		END
      IF ( @visitNumber = '' )
        BEGIN
            SET @Vno = 'PV.VisitNumber=PV.VisitNumber'
        END
      ELSE
        BEGIN
            IF ( EXISTS (SELECT CKM.ConfigKey
                         FROM   ConfigOrgMaster COM 
                                INNER JOIN ConfigKeyMaster CKM 
                                        ON CKM.ConfigKeyID = COM.ConfigKeyID
                         WHERE  COM.OrgID = @OrgID
                                AND CKM.ConfigKey = 'ExternalVisitSearch'
                                AND COM.ConfigValue = 'Y') )
              BEGIN
                  --SET @where = @where + ' AND PV.ExternalVisitID='''+@visitID+''''                                                                          
                  SET @Vno = 'PV.ExternalVisitID='''
                             + CONVERT(NVARCHAR, @visitNumber) + ''' '
              END
            ELSE
              BEGIN
                  SET @Vno = 'PV.VisitNumber='''
                             + CONVERT(NVARCHAR, @visitNumber) + ''' '
              END
        END

      IF ( @patnumber = '' )
        BEGIN
            SET @Pno = 'Pt.PatientNumber=Pt.PatientNumber'
        END
      ELSE
        BEGIN
            SET @Pno = 'Pt.PatientNumber='''
                       + CONVERT(NVARCHAR, @patnumber) + ''' '
        END

      IF Ltrim(Rtrim(@wardno)) = ''
        BEGIN
            SET @WardNos = ''
    END
      ELSE
        BEGIN
            SET @WardNos = ' AND (Pv.wardno LIKE ''%''+ COALESCE('''
                           + @wardno + ''',Pv.wardno)'
                           + '+''%'' or PA.MobileNumber = COALESCE('''
                           + @wardno + ''', PA.MobileNumber))'
        END

      IF ( @pDeptID = -1 )
        BEGIN
            SET @DeptID = 'TD.DeptID= TD.DeptID'
        END
      ELSE
        BEGIN
            SET @DeptID = 'TD.deptid ='''
                          + CONVERT(NVARCHAR(255), @pDeptID) + ''' '
        END

      IF Ltrim(Rtrim(@InvName)) = ''
        BEGIN
            --set @InvNames=' AND PINV.InvestigationID=PINV.InvestigationID'         
            SET @InvNamesForInv = ' '
            SET @InvNamesForGrpPKG = ' '
        END
      ELSE
        BEGIN
            IF ( @pType = 'INV' )
              BEGIN
                  -- set @InvNames='PIV.Name=''' + CONVERT(nvarchar(255),@InvName) + ''' '                                                           
                  IF Isnull(@invname, '') <> ''
                    BEGIN
                        SET @InvNamesForInv = ' AND PIV.Name ='''
                                              + CONVERT(NVARCHAR(255), @InvName) + ''' '
                        SET @InvNamesForGrpPKG = ' AND PIV.Name ='''
                                                 + CONVERT(NVARCHAR(255), @InvName) + ''' '
                        SET @InvNamesForGrpPKG = ' AND PIV.Name ='''
                                                 + CONVERT(NVARCHAR(255), @InvName) + ''' '
                    END
              END

            IF ( @pType = 'GRP' )
              BEGIN
                  IF Isnull(@invname, '') <> ''
                    BEGIN
                        SET @InvNamesForGrpPKG = ' AND PIV.Name ='''
                                                 + CONVERT(NVARCHAR(255), @InvName) + ''' '
                        SET @InvNamesForInv = ' AND PIV.Name ='''
                                              + CONVERT(NVARCHAR(255), @InvName) + ''' '
                    END
              END

            IF ( @pType = 'PKG' )
              BEGIN
                  IF Isnull(@invname, '') <> ''
                    BEGIN
                        SET @InvNamesForGrpPKG = ' AND PIV.Name ='''
                                                 + CONVERT(NVARCHAR(255), @InvName) + ''' '
                        SET @InvNamesForInv = ' AND PIV.Name ='''
                                              + CONVERT(NVARCHAR(255), @InvName) + ''' '
                    END
              END
        END

      IF ( @Status = '-1' )
        BEGIN
            SET @pStatus = 'PIV.status=PIV.status'
        END
      ELSE
        BEGIN
            SET @pStatus = 'PIV.status=''' + CONVERT(NVARCHAR, @Status)
                           + ''' '
        END

      IF @FromDate <> ''
        BEGIN
            SET @Dates = 'AND CONVERT(nvarchar,piv.CreatedAt,103) between ISNULL(CONVERT(datetime,'''
                         + @FromDate
                         + ''',103),CONVERT(nvarchar,piv.CreatedAt,103)) and ISNULL(CONVERT(datetime,'''
                         + @toDate
                         + ''',103),CONVERT(nvarchar,piv.CreatedAt,103))'
        END
      ELSE
        BEGIN
            SET @Dates = ''
        END

      --IF   @toDate =''              
      --BEGIN              
      --  SET @toDate=null              
      --END                             
      IF Ltrim(Rtrim(@PatientName)) <> ''
        BEGIN
            IF EXISTS (SELECT 'Y'
                       FROM   Patient
                       WHERE  NAME LIKE '%' + @PatientName + '%'
                              AND OrgID = @OrgID)
              BEGIN
                  SET @strPtNameNum = ' AND PT.Name LIKE %' + @PatientName + '% '
              END
        END
      ELSE
        BEGIN
    SET @strPtNameNum = ''
        END

      IF @PatientID > 0
        BEGIN
            IF EXISTS (SELECT 'Y'
                       FROM   Patient 
                       WHERE  PatientNumber = CONVERT(NVARCHAR, @PatientID)
                              AND OrgID = @OrgID)
              BEGIN
                  SET @strPtNameNum = ' AND PT.PatientNumber='''
                                      + CONVERT(NVARCHAR, @PatientID) + ''' '
              END

            IF Ltrim(Rtrim(@strPtNameNum)) = ''
              BEGIN
                  IF EXISTS (SELECT 'Y'
                             FROM   PatientVisit 
                             WHERE  ExternalVisitID = CONVERT(NVARCHAR, @PatientID)
                                    AND OrgID = @OrgID)
                    BEGIN
                        SET @strPtNameNum = ' AND PV.ExternalVisitID='''
                                            + CONVERT(NVARCHAR, @PatientID) + ''' '
                    END
                  ELSE
                    SET @strPtNameNum = ' AND PV.ExternalVisitID='''
                                        + CONVERT(NVARCHAR, @PatientID) + ''' '
              END
        END
      ELSE
        BEGIN
            SET @strPtNameNum = ''
            SET @PatientID = 0
        -- PRINT '-5-'                            
        -- PRINT @strPtNameNum                                                                                                 
        END

      --SET @strVisitType = ' PV.LabVisitType='''          
      --                   + CONVERT(nvarchar, @pVisitType) + ''' '          
      -- PRINT '-6-'                                                                                                                                                      
      -- PRINT @strVisitType                                                                                 
      IF ( @pVisitType = -1 )
        BEGIN
            SET @strVisitType = ' ISNULL(PV.LabVisitType,0) IN (0,1,-1) '
        --set @pVisitType = null          
        -- PRINT '-7-'                                                             
        -- PRINT @strVisitType            
        END

      IF ( @pVisitType = 1 )
        BEGIN
            SET @strVisitType = ' PV.LabVisitType = 1 '
        END

      IF ( @pVisitType = 0 )
        BEGIN
            SET @strVisitType = ' isnull(PV.LabVisitType,0) = 0 '
        END

      --SET @strSourceId='VCM.ClientId = ''' + CONVERT(nvarchar, @pSourceId) + ''''                                                                                                                                            
      ---- PRINT '-8-'                                                                                                                                         
      -- -- PRINT @strVisitType                                                       
      --IF(@pSourceId=-1)                                                                                                               
      --BEGIN                                                                                                                      
      -- SET @strSourceId=' ISNULL(VCM.ClientId,0) IN (ISNULL(VCM.ClientId,0))'                                                                                   
      -- -- PRINT '-9-'                               
      -- -- PRINT @strVisitType                                    
      --END                          
      CREATE TABLE #TempDepart
        (
           DeptID BIGINT
        )

      --DECLARE @pTempDetp AS TABLE (DeptID bigint)                                                
      IF NOT EXISTS (SELECT 1
                     FROM   LoginDeptMap LDM 
                            INNER JOIN RoleDeptMap RDM 
                     ON RDM.RoleDetpID = LDM.RoleDetpID
                            INNER JOIN @LoginDetail LD
                                    ON LD.RoleID = rdm.RoleID
                                       AND LDM.loginID = LD.LoginID)
        BEGIN
		/*****************Changed By Arivalagan.kk******************/
            IF @pDeptID <> -1
              BEGIN
                  INSERT INTO #TempDepart
                  SELECT DISTINCT RDM.DeptID
                  FROM   dbo.RoleDeptMap RDM 
                         INNER JOIN @LoginDetail LD
                                 ON LD.RoleID = rdm.RoleID
                  WHERE  RDM.DeptID = @pDeptID
              END
            ELSE
              BEGIN
                  INSERT INTO #TempDepart
                  SELECT DISTINCT RDM.DeptID
                  FROM   dbo.RoleDeptMap RDM 
                         INNER JOIN @LoginDetail LD
                                 ON LD.RoleID = rdm.RoleID
              END
        --WHERE rdm.RoleID = @RoleID AND idm.OrgID = @OrgID                                                
        END
      ELSE
        BEGIN
            IF @pDeptID <> -1
              BEGIN
                  INSERT INTO #TempDepart
                  SELECT DISTINCT RDM.DeptID
                  FROM   dbo.RoleDeptMap RDM 
                         INNER JOIN LoginDeptMap LDM 
                                 ON LDM.RoleDetpID = RDM.RoleDetpID
                         INNER JOIN @LoginDetail LD
                                 ON LD.RoleID = rdm.RoleID
                                    AND LD.LoginID = LDM.loginID
                  WHERE  RDM.DeptID = @pDeptID
              END
            ELSE
              BEGIN
			 
                  INSERT INTO #TempDepart
                  SELECT DISTINCT RDM.DeptID
                  FROM   dbo.RoleDeptMap RDM 
                         INNER JOIN LoginDeptMap LDM 
                                 ON LDM.RoleDetpID = RDM.RoleDetpID
                         INNER JOIN @LoginDetail LD
                                 ON LD.RoleID = rdm.RoleID
                                    AND LD.LoginID = LDM.loginID
              END
        --WHERE rdm.RoleID = @RoleID AND idm.OrgID = @OrgID AND LDM.loginID=2629           
        END
		/*****************End Changed By Arivalagan.kk******************/
      DECLARE @TaskActionID INT
      DECLARE @TempInvestigationStatus TABLE
        (
           Status NVARCHAR(100)
        )

      -----Ramkumar.S had changed for various result entry placeholder we can set as per our client convinient-------      
      --IF( @pTaskAction = 'SelectiveAuthorization' )            
      --  BEGIN            
      --      select @TaskActionID = TaskActionID           
      --      from   TaskActions             
      --      where  ActionName = 'SelectiveAuthorization'            
      --  END            
      --ELSE            
      --  BEGIN            
      --      select @TaskActionID = TaskActionID            
      --      from   TaskActions                       where  ActionName = 'EnterResult'        
      --  END     
      ----///Comments ///----------  
      ----If we use the new place holder we should need to put a entry in taskentitymap table for newly created TackactionID----  
      -------------------------  
      ---------END---------------------------------------------  
      ----Start------------  
      IF ( @pTaskAction = 'SelectiveAuthorization' )
        BEGIN
            SELECT @TaskActionID = TA.TaskActionID
            FROM   TaskActions TA
                   INNER JOIN Taskactionorgmapping TAOM
                           ON TA.TaskActionID = TAOM.TaskactionID
            WHERE  TAOM.RoleID = @RoleID
                   AND TAOM.OrgID = @OrgID
                   AND TA.ActionName = 'SelectiveAuthorization'
        END
      ELSE
        BEGIN
            SELECT @TaskActionID = TA.TaskActionID
            FROM   TaskActions TA
                   INNER JOIN Taskactionorgmapping TAOM
                           ON TA.TaskActionID = TAOM.TaskactionID
            WHERE  TAOM.RoleID = @RoleID
                   AND TAOM.OrgID = @OrgID
                   AND TA.ActionName = 'EnterResult'
        --select    @TaskActionID  
        END

      ----END--------------  
      --select @EnterResultTaskActionID                                                                                 
      INSERT INTO @TempInvestigationStatus
      SELECT *
      FROM   dbo.Fn_getmappedstatus(@TaskActionID, 'InvestigationStatus', @OrgID)

	  /* BEGIN | NA | Sabari | 17072019 | Created | LabTechPhysicianUsers */
	  DECLARE @ConfigReportonHold NVARCHAR(MAX),@PhyAssistRoleName NVARCHAR(50);
      SELECT @PhyAssistRoleName =isnull(RoleName,'') FROM   @ContextInfo

	  SET @ConfigReportonHold = (
	  SELECT com.ConfigValue
	  FROM ConfigKeyMaster ckm
	  INNER JOIN ConfigOrgMaster com ON ckm.ConfigKeyID = com.ConfigKeyID
	  AND com.OrgID = @OrgID
	  AND ISNULL(ckm.ConfigKey, '') = 'LabTech_Complete_Validate_Approval')
	  IF(ISNULL(@ConfigReportonHold,'N')='Y' AND  @PhyAssistRoleName='Physician Assistant')
	  BEGIN
		   DECLARE @PhyassistInvestigationStatus TABLE
		   (
			   Status NVARCHAR(100)
		   )
		   INSERT INTO @PhyassistInvestigationStatus
		   SELECT 'Completed'
		   UNION
		   SELECT 'Validate'
	  
		  IF EXISTS (select TOP 1 1 FROM @TempInvestigationStatus)
		  BEGIN
		   INSERT INTO @TempInvestigationStatus
		   --select * from @PhyassistInvestigationStatus
		   SELECT status                                          
		   FROM   InvestigationStatus  WITH(NOLOCK)                                         
		   WHERE  InvestigationStatusID IN (2,12,39,40)
	      END
	  END
      /* END | NA | Sabari | 17072019 | Created | LabTechPhysicianUsers */ 
      --select * from @TempInvestigationStatus                                                                                                                                
      SELECT @chkStatus = Stuff((SELECT N', ''' + CONVERT(NVARCHAR, Status) + ''''
                                 FROM   @TempInvestigationStatus
                                 FOR XML PATH('')), 1, 2, N'')

      -- PRINT @chkStatus                             
      DECLARE @chkStatusFroOutSource NVARCHAR(max)

      IF ( @pTaskAction = 'SelectiveAuthorization' )
        BEGIN
            SELECT @chkStatusFroOutSource = Stuff((SELECT N', ''' + CONVERT(NVARCHAR, Status) + ''''
                                                   FROM   @TempInvestigationStatus
                                                   FOR XML PATH('')), 1, 2, N'')
        END
      ELSE
        BEGIN
            SELECT @chkStatusFroOutSource = Stuff((SELECT N', ''' + CONVERT(NVARCHAR, Status) + ''''
                                                   FROM   @TempInvestigationStatus
                                                   WHERE  Status = 'Pending'
                                                   FOR XML PATH('')), 1, 2, N'')
        END

      DECLARE @first_id INT

      CREATE TABLE #pTempTable
        (
           PatientVisitId   BIGINT NULL,
           PatientName      NVARCHAR(250) NULL,
           PatientId        BIGINT NOT NULL,
           VisitDate        DATETIME,
           UID              NVARCHAR(255),
           PatientVisitType NVARCHAR(100),
           Age              NVARCHAR(25),
           PatientNumber    NVARCHAR(25) NULL,
           RoomDetails      NVARCHAR(255),
           titleName        NVARCHAR(255) NULL,
           Labno            NVARCHAR(20),
           VisitNumber      NVARCHAR(200),
           IsSTAT           NVARCHAR(5),
           DeptID           BIGINT,
           ComplaintName    NVARCHAR(200),
           AgeValues        NVARCHAR(50),
           Status           NVARCHAR(50)
        )

      CREATE TABLE #pTempTablesort
        (
           PatientVisitId   BIGINT NULL,
           PatientName      NVARCHAR(250) NULL,
           PatientId        BIGINT NOT NULL,
           VisitDate        DATETIME,
           UID              NVARCHAR(255),
           PatientVisitType NVARCHAR(100),
           Age              NVARCHAR(25),
           PatientNumber    NVARCHAR(25) NULL,
           RoomDetails      NVARCHAR(255),
           titleName        NVARCHAR(255) NULL,
           Labno            NVARCHAR(20),
           VisitNumber      NVARCHAR(200),
           IsSTAT           NVARCHAR(5),
           DeptID           BIGINT,
           ComplaintName    NVARCHAR(200),
           AgeValues        NVARCHAR(50),
           STATUS           NVARCHAR(50)
      )

      CREATE TABLE #pTempTableRow
        (
           Rowid            BIGINT,
           PatientVisitId   BIGINT NULL,
           PatientName      NVARCHAR(250) NULL,
           PatientId        BIGINT NOT NULL,
           VisitDate        DATETIME,
           UID              NVARCHAR(255),
           PatientVisitType NVARCHAR(100),
           Age              NVARCHAR(25),
           PatientNumber    NVARCHAR(25) NULL,
           RoomDetails      NVARCHAR(255),
           titleName        NVARCHAR(255) NULL,
           Labno            NVARCHAR(20),
           VisitNumber      NVARCHAR(200),
           IsSTAT           NVARCHAR(5),
           DeptID           BIGINT,
           ComplaintName    NVARCHAR(200),
           ExternalVisitID  NVARCHAR(255),
           TaskDescription  NVARCHAR(255),
           AgeValues        NVARCHAR(500),
           STATUS           NVARCHAR(50),
           ReportTatDate    DATETIME
        )

      DECLARE @pTempTableRow AS TABLE
        (
           Rowid            BIGINT,
           PatientVisitId   BIGINT NULL,
           PatientName      NVARCHAR(250) NULL,
           PatientId        BIGINT NOT NULL,
           VisitDate        DATETIME,
           UID              NVARCHAR(255),
           PatientVisitType NVARCHAR(100),
           Age              NVARCHAR(25),
           PatientNumber    NVARCHAR(25) NULL,
           RoomDetails      NVARCHAR(255),
           titleName        NVARCHAR(255) NULL,
           Labno            NVARCHAR(20),
           VisitNumber      NVARCHAR(200),
           IsSTAT           NVARCHAR(5),
           DeptID           BIGINT,
           ComplaintName    NVARCHAR(200),
           ExternalVisitID  NVARCHAR(255),
           TaskDescription  NVARCHAR(255),
           AgeValues        NVARCHAR(500),
           Status           NVARCHAR(50),
           ReportTatDate    DATETIME
        )

      CREATE TABLE #pTempTableRowSAT
        (
           Rowid            BIGINT IDENTITY(1, 1),
           PatientVisitId   BIGINT NULL,
           PatientName      NVARCHAR(250) NULL,
           PatientId        BIGINT NOT NULL,
           VisitDate        DATETIME,
           UID              NVARCHAR(255),
           PatientVisitType NVARCHAR(100),
           Age              NVARCHAR(25),
           PatientNumber    NVARCHAR(25) NULL,
           RoomDetails      NVARCHAR(255),
           titleName        NVARCHAR(255) NULL,
           Labno            NVARCHAR(20),
           VisitNumber      NVARCHAR(200),
           IsSTAT           NVARCHAR(5),
           DeptID           BIGINT,
           ComplaintName    NVARCHAR(200),
           AgeValues        NVARCHAR(500),
           Status           NVARCHAR(50)
        )

      CREATE TABLE #pTempTableRowSATWIthDate
        (
           Rowid            BIGINT IDENTITY(1, 1),
           PatientVisitId   BIGINT NULL,
           PatientName      NVARCHAR(250) NULL,
           PatientId        BIGINT NOT NULL,
           VisitDate        DATETIME,
           UID              NVARCHAR(255),
           PatientVisitType NVARCHAR(100),
           Age              NVARCHAR(25),
           PatientNumber    NVARCHAR(25) NULL,
           RoomDetails      NVARCHAR(255),
           titleName        NVARCHAR(255) NULL,
           Labno            NVARCHAR(20),
           VisitNumber      NVARCHAR(200),
           IsSTAT           NVARCHAR(5),
           DeptID           BIGINT,
           ComplaintName    NVARCHAR(200),
           AgeValues        NVARCHAR(500),
           Status           NVARCHAR(50),
           ReportTatDate    DATETIME
        )

      CREATE TABLE #pTempTATColor
        (
           Rowid            BIGINT,
           PatientVisitId   BIGINT NULL,
           PatientName      NVARCHAR(250) NULL,
           PatientID        BIGINT NOT NULL,
           VisitDate        DATETIME,
           UID              NVARCHAR(255),
           PatientVisitType NVARCHAR(100),
           Age              NVARCHAR(25),
           PatientNumber    NVARCHAR(25) NULL,
           VisitNotes       NVARCHAR(255),
           TitleName        NVARCHAR(255) NULL,
           Labno            NVARCHAR(20),
           VisitNumber      NVARCHAR(200),
           STATE            NVARCHAR(5),
           DeptID           BIGINT,
           ComplaintName    NVARCHAR(200),
           RateID           BIGINT,
           ExternalVisitID  NVARCHAR(255),
           AccompaniedBy    NVARCHAR(MAX),
           NextReviewDate   NVARCHAR(500),
           STATUS           NVARCHAR(50),
           ResultEntryType  NVARCHAR(255),
           protocolgroupid  BIGINT,
           TATStatus        INT,
           ReportTat        DATETIME
        )

      DECLARE @LoginId NVARCHAR(15)

      SELECT @LoginId = loginid
      FROM   @LoginDetail

      IF ( @PatientID <> 0
           AND @PatientName = '' )
        BEGIN
            IF ( EXISTS (SELECT CKM.ConfigKey
                         FROM   ConfigOrgMaster COM 
                                INNER JOIN ConfigKeyMaster CKM 
                                        ON CKM.ConfigKeyID = COM.ConfigKeyID
                         WHERE  COM.OrgID = @OrgID
                                AND CKM.ConfigKey = 'ExternalVisitSearch') )
              BEGIN
                  -- Modified by Perumal - Start               
                  DECLARE @ExtPatientID NVARCHAR(16) --bigint                                       
                  DECLARE @PatientIdTemp NVARCHAR(16)

                  SELECT @ExtPatientID = P.PatientNumber
                  FROM   PatientVisit PV 
                         INNER JOIN Patient p 
                                 ON p.PatientID = pv.PatientID
                                    AND p.OrgID = pv.OrgID
                  WHERE  Pv.ExternalVisitID = CONVERT(NVARCHAR, @PatientID)

                  -- Modified by Perumal - End                                                                                                            
                  IF ( @ExtPatientID IS NOT NULL
                        OR Len(@ExtPatientID) > 0 ) -- @ExtPatientID >0)                                                                                            
                    BEGIN
                        --SET @PatientID=@ExtPatientID                                                                       
                        SET @PatientIdTemp = @ExtPatientID
                    END
              END
            ELSE
              BEGIN
                  SELECT @PatientID = PatientID
                  FROM   Patient 
                  WHERE  PatientNumber = @PatientIdTemp --@PatientID       
              END

            SELECT @orgAddID

            INSERT INTO #pTempTable
                        (PatientVisitId,
                         PatientName,
                         PatientId,
                         VisitDate,
                         UID,
                         PatientVisitType,
                         Age,
                         PatientNumber,
                         titleName,
                         RoomDetails,
                         Labno,
                         VisitNumber,
                         IsSTAT,
                         DeptID,
                         ComplaintName,
                         AgeValues,
                         Status)
            EXEC ( 'SELECT  DISTINCT PV.PatientVisitId,                                                                                                                     
Pt.Name as PatientName,Pt.PatientID as PatientId,CAST(PV.CreatedAt AS smalldatetime) AS                                                                                                       
CreatedAt,UID ,case  when isnull(PV.LabVisitType,0) = 0 then ''OutPatient'' else  ''InPatient''
end as PatientType,Pt.Age,Pt.PatientNumber,CASE WHEN PV.ExternalVisitID IS NULL OR PV.ExternalVisitID = ''0'' THEN CAST(PV.PatientVisitId  as nvarchar)                                                        
ELSE PV.ExternalVisitID                                                                  
END AS titleName,'''',PIV.Labno,PV.VisitNumber,isnull(PV.IsSTAT,''N'') as IsSTAT,rdm.deptId ,OA.Location,Pt.AgeValues,PIV.Status                                                                                                         
FROM  Patient Pt (NOLOCK )            
INNER JOIN PatientVisit PV (NOLOCK ) ON Pt.PatientID=PV.PatientId AND ' + @strVisitType + '                      
INNER JOIN OrderedInvestigations PIV (NOLOCK ) ON PIV.VisitID=PV.PatientVisitId                                                                                                                                                  
INNER JOIN roledeptmap rdm(NOLOCK ) ON idm.DeptID = rdm.deptid                                                                  
INNER JOIN InvestigationOrgMapping iom (NOLOCK ) ON iom.InvestigationID=PIV.ID                                                 
INNER JOIN PatientAddress PA (NOLOCK ) on PA.PatientID=PV.PatientID                                                                                          
AND  iom.DeptID = rdm.DeptID                                           
INNER JOIN FinalBill FB (NOLOCK ) on FB.VisitID = PV.PatientVisitID and FB.RefFinalBillID is Null                                       
INNER JOIN OrganizationAddress OA(NOLOCK )  on OA.OrgID=FB.OrgId AND OA.AddressId = PV.OrgAddressId ' + @clientid + '                                                
-- LEFT JOIN VisitClientMapping VCM  ON VCM.VisitID = PV.PatientVisitId                                                                                     
WHERE  (PIV.Status in (' + @chkStatus + '))                                            
AND   Pt.OrgID=' + @OrgID + '                                                                            
AND (Pv.ExternalVisitID LIKE ''%''+ COALESCE(''' + @PatientID + ''',Pv.ExternalVisitID)' + '+''%''                     
or Pt.PatientNumber = COALESCE(''' + @PatientID + ''', Pt.PatientNumber))                                                                               
--AND (Pv.wardno LIKE ''%''+ COALESCE(''' + @wardno + ''',Pv.wardno)' + '+''%'' or PA.MobileNumber = COALESCE(''' + @wardno + ''', PA.MobileNumber))                                                                
AND ' + @WardNos + '                     
AND ' + @strVisitType + ' AND ' + @strSourceId + '                
--AND PV.PriorityID=' + @priority + '                                                                          
AND   rdm.RoleID=' + @RoleID + '   AND PIV.Type=''INV''   and  ISNULL(PIV.ResCaptureLoc,PV.OrgAddressID)=' + @orgAddID + @RefPhy + @Location + '                                                                                                            
AND ' + @pStatus + '                                                                                
AND ' + @InvNamesForINV + '                                                                                                                                        
' + @Dates + '                                                                                                                         
GROUP BY  PV.CreatedAt, PIV.UID, PV.PatientVisitId,Pt.Name,Pt.PatientID,Pt.Age,PV.LabVisitType,Pt.PatientNumber                    
,Pt.OrgID,PV.OrgAddressID,PV.PatientID,PV.ExternalVisitID                                    
,PV.wardno,PIV.Labno,PV.VisitNumber,PV.IsSTAT,rdm.deptId,Pt.AgeValues                                                                                          
UNION                
SELECT  DISTINCT PV.PatientVisitId,                                                                                                             
Pt.Name as PatientName,Pt.PatientID as PatientId,CAST(PV.CreatedAt AS smalldatetime) AS                                                          
CreatedAt ,UID      
,case  when isnull(PV.LabVisitType,0) = 0                                                                                      
then ''OutPatient''                                                                               
else ''InPatient''                                                                                 
end as PatientType,Pt.Age,Pt.PatientNumber,                                                              
CASE WHEN PV.ExternalVisitID IS NULL OR PV.ExternalVisitID = ''0'' THEN PV.PatientVisitId                                                                                                                      
ELSE PV.ExternalVisitID                                                                   
END AS titleName,'''',PIV.Labno,PV.VisitNumber ,isnull(PV.IsSTAT,''N'') as IsSTAT,OA.Location,Pt.AgeValues,PIV.Status                                                                 
FROM  Patient Pt   (NOLOCK )                  
INNER JOIN PatientVisit PV(NOLOCK )   ON Pt.PatientID=PV.PatientId AND ' + @strVisitType +
            '                                                                                                                                        
INNER JOIN OrderedInvestigations PIV(NOLOCK )  ON PIV.VisitID=PV.PatientVisitId AND PIV.OrgID =' + @OrgID + '                                                                                                 
INNER JOIN roledeptmap rdm (NOLOCK ) ON idm.DeptID = rdm.deptid                                                                                  
INNER JOIN PatientAddress PA(NOLOCK )  on PA.PatientID=PV.PatientID                                                                         
INNER JOIN FinalBill FB(NOLOCK )  on FB.VisitID = PV.PatientVisitID  and FB.RefFinalBillID is Null                                        
INNER JOIN OrganizationAddress OA (NOLOCK ) on OA.OrgID=FB.OrgId AND OA.AddressId = PV.OrgAddressId                                                 
' + @clientid + '            
WHERE  (PIV.Status in (' + @chkStatus + '))                                                                                                                                                                                        
AND   Pt.OrgID=' + @OrgID + '                                                                                     
-- AND   Pt.PatientNumber=''' + @PatientID + '''                                                                                                                                                     
AND (Pv.ExternalVisitID LIKE ''%''+ COALESCE(''' + @PatientID + ''',Pv.ExternalVisitID)' + '+''%''                     
or Pt.PatientNumber = COALESCE(''' + @PatientID + ''', Pt.PatientNumber))                                                                                
--AND (Pv.wardno LIKE ''%''+ COALESCE(''' + @wardno + ''',Pv.wardno)' + '+''%'' or PA.MobileNumber = COALESCE(''' + @wardno + ''', PA.MobileNumber))                                                                                                          



        
AND ' + @WardNos + '                                                                                                                          
AND ' + @strVisitType + ' AND ' + @strSourceId + '                                                                                
--AND PV.PriorityID=' + @priority + '                      
AND PIV.Type=''GRP''    and ISNULL(PIV.ResCaptureLoc,PV.OrgAddressID)=' + @orgAddID + @RefPhy + @Location + '                                                           
AND ' + @pStatus + '                                                                                                                    
AND ' + @InvNamesForGrpPKG + '                                                                                          
' + @Dates + '                                                                
GROUP BY  PV.CreatedAt, PIV.UID,PV.PatientVisitId,Pt.Name,Pt.PatientID,Pt.Age,PV.LabVisitType,Pt.PatientNumber                    
,Pt.OrgID,PV.OrgAddressID,PV.PatientID,PV.ExternalVisitID ,PV.wardno,PIV.Labno,PV.VisitNumber,PV.IsSTAT,Pt.AgeValues                                      
UNION 
SELECT  DISTINCT PV.PatientVisitId,                       
Pt.Name as PatientName ,Pt.PatientID as PatientId,CAST(PV.CreatedAt AS smalldatetime) AS                                                                                                    
CreatedAt ,UID                              
,case  when isnull(PV.LabVisitType,0) = 0                                                                 
then ''OutPatient''                                                                                                                                  
else  ''InPatient''                                     
end as PatientType,Pt.Age,Pt.PatientNumber,                                                                                                       
CASE WHEN PV.ExternalVisitID IS NULL OR PV.ExternalVisitID = ''0'' THEN PV.PatientVisitId                                                                                                                 
ELSE PV.ExternalVisitID                            
END AS titleName, '''',PIV.Labno,PV.VisitNumber  ,isnull(PV.IsSTAT,''N'') as IsSTAT,OA.Location,Pt.AgeValues,PIV.Status                                                                                                            
FROM  Patient Pt  (NOLOCK )                   
INNER JOIN PatientVisit PV (NOLOCK )   ON Pt.PatientID=PV.PatientId        AND ' + @strVisitType + '                                                                           
INNER JOIN OrderedInvestigations PIV (NOLOCK ) ON PIV.VisitID=PV.PatientVisitId AND PIV.OrgID = ' +
            @OrgID
            +
            '                                 
INNER JOIN PatientAddress PA (NOLOCK ) on PA.PatientID=PV.PatientID                                            
INNER JOIN FinalBill FB (NOLOCK ) on FB.VisitID = PV.PatientVisitID   and FB.RefFinalBillID is Null                                                                                  
INNER JOIN OrganizationAddress OA(NOLOCK ) on OA.OrgID=FB.OrgId AND OA.AddressId = PV.OrgAddressId                                
' +
            @clientid + '  
WHERE  (PIV.Status in(' + @chkStatus + '))                                                                                                              
AND   Pt.OrgID=' + @OrgID + '                                                                               
AND (Pv.ExternalVisitID LIKE ''%''+ COALESCE(''' + @PatientID + ''',Pv.ExternalVisitID)' + '+''%''                     
or Pt.PatientNumber = COALESCE(''' + @PatientID + ''', Pt.PatientNumber))                                                                      
--AND (Pv.wardno LIKE ''%''+ COALESCE(''' + @wardno + ''',Pv.wardno)' + '+''%'' or PA.MobileNumber = COALESCE(''' + @wardno + ''', PA.MobileNumber))  
AND ' + @WardNos + '                   
AND ' + @strVisitType + ' AND ' + @strSourceId + '                                                            
--AND PV.PriorityID=' + @priority + '                                    
AND PIV.Type=''PKG''     and ISNULL(PIV.ResCaptureLoc,PV.OrgAddressID)=' + @orgAddID + @RefPhy + @Location + '                                         
AND ' + @pStatus + '                                           
AND ' + @InvNamesForGrpPKG + '                                                            
' + @Dates + '                                            
GROUP BY  PV.CreatedAt,  PIV.UID,PV.PatientVisitId,Pt.Name,Pt.PatientID,Pt.Age,PV.LabVisitType                    
,Pt.PatientNumber,Pt.OrgID,PV.OrgAddressID,PV.PatientID,PV.ExternalVisitID,PV.wardno,PIV.Labno,  
PV.VisitNumber,PV.IsSTAT,Pt.AgeValues,PIV.Status' )

       INSERT INTO #pTempTableRowSAT
                        (PatientVisitId,
                         PatientName,
                         PatientId,
                         VisitDate,
                         UID,
                         PatientVisitType,
                         Age,
                         PatientNumber,
                         titleName,
                         Labno,
                         VisitNumber,
                         IsSTAT,
                         DeptID,
                         ComplaintName,
                         AgeValues,
                         Status)
            SELECT PatientVisitId,
                   PatientName,
                   PatientId,
                   VisitDate,
                   UID,
                   PatientVisitType,
                   Age,
                   PatientNumber,
                   titleName,
                   Labno,
                   VisitNumber,
                   IsSTAT,
                   DeptID,
                   ComplaintName,
                   AgeValues,
                   Status
            FROM   #pTempTable
            WHERE  Isnull(IsSTAT, '') <> ''
            ORDER  BY VisitDate ASC

            INSERT INTO #pTempTableRowSAT
                        (PatientVisitId,
                         PatientName,
                         PatientId,
                         VisitDate,
                         UID,
                         PatientVisitType,
                         Age,
                         PatientNumber,
                         titleName,
                         Labno,
                         VisitNumber,
                         IsSTAT,
                         DeptID,
                         ComplaintName,
                         AgeValues,
                         Status)
            SELECT PatientVisitId,
                   PatientName,
                   PatientId,
                   VisitDate,
                   UID,
                   PatientVisitType,
                   Age,
                   PatientNumber,
                   titleName,
                   Labno,
                   VisitNumber,
                   IsSTAT,
                   DeptID,
                   ComplaintName,
                   AgeValues,
                   Status
            FROM   #pTempTablesort
            WHERE  Isnull(IsSTAT, '') = ''
            ORDER  BY VisitDate ASC

            INSERT INTO #pTempTableRow
                        (Rowid,
                         PatientVisitId,
                         PatientName,
                         PatientId,
                         VisitDate,
                         UID,
                         PatientVisitType,
                         Age,
                         PatientNumber,
                         titleName,
                         Labno,
                         VisitNumber,
                         IsSTAT,
                         DeptID,
                         ComplaintName,
                         AgeValues,
                         Status)
            SELECT DISTINCT Row_number()
                              OVER (
                                ORDER BY Rowid ASC ) AS rownumber,
                            PatientVisitId,
                            PatientName,
                            PatientId,
                            VisitDate,
                            UID,
                            PatientVisitType,
                            Age,
                            PatientNumber,
                            titleName,
                       Labno,
                            VisitNumber,
                            IsSTAT,
                            DeptID,
                            ComplaintName,
                            AgeValues,
                            STATUS
            FROM   #pTempTableRowSAT

            INSERT INTO @pTempTableRow
            SELECT *
            FROM   #pTempTableRow;

            WITH numbered
                 AS (SELECT PatientVisitId,
                            Row_number()
                              OVER (
                                PARTITION BY PatientVisitId
                                ORDER BY STATUS ) AS nr
                     FROM   @pTempTableRow)
            DELETE FROM numbered
            WHERE  nr > 1

            SET @startRowIndex = ( @startRowIndex - 1 ) * @pageSize

            IF @startRowIndex = 0
              SET @startRowIndex = 1

            SET ROWCOUNT @startRowIndex

            SELECT @first_id = Rowid
            FROM   @pTempTableRow
            ORDER  BY Rowid

            ---Included for Grid page navigation issue----          
            IF ( @startRowIndex = 1 )
              BEGIN
                  SELECT @first_id = @first_id
              END
            ELSE
              BEGIN
                  SELECT @first_id = @first_id + 1
              END

            --------------End-------------------------------    
            SET ROWCOUNT @pageSize

            SELECT DISTINCT Rowid,
                            PatientVisitId,
                            PatientName,
                            PatientId,
                            VisitDate,
                            UID,
                            PatientVisitType,
                            Age,
                            PatientNumber,
                            TitleName,
                            Labno,
                            VisitNumber,
                            IsSTAT,
                            DeptID,
                            ComplaintName,
                            AgeValues,
                            Status
            FROM   @pTempTableRow
            WHERE  Rowid >= @first_id
            ORDER  BY VisitDate ASC

            SET ROWCOUNT 0

            SELECT DISTINCT @totalRows = Count(*)
            FROM   @pTempTableRow
        END
      ELSE
        -- PRINT 'case 2'                                                                                                 
        CREATE TABLE #Temp_AccessionNumber
          (
             AccessionNumber BIGINT PRIMARY KEY,
             Visitid         BIGINT
          )

      IF ( ( @PatientName <> ''
             AND @PatientName IS NOT NULL )
           AND @PatientID = 0
           AND @pVisitType IN ( '0', '1', '-1' ) )
          OR ( Isnull(@PatientName, '') = ''
               AND @PatientID = 0
               AND @pVisitType IN ( '0', '1', '-1' ) )
          OR ( Isnull(@PatientName, '') <> ''
               AND @PatientID = 0
               AND @pVisitType IN ( '0', '1', '-1' ) )
        BEGIN
            --PRINT 'case 3'                                                                                                             
            IF ( Isnull(@visitNumber, '') = ''
                 AND Isnull(@PatientName, '') = ''
                 AND @Patientid = 0
                 AND Isnull(@patnumber, '') = ''
                 AND Isnull(@Dates, '') = ''
				 AND isnull(@sampleID,'') ='')
         BEGIN
			
                  -- select 'a'    
                  IF @PVisittype = '-1'
                    BEGIN
                        --select 'a'            
                        SELECT @PVisittype = NULL
                    END

                  SELECT @SQLQuery = 'Declare @Tmp as table (Refer bigint)                                      
Insert @Tmp                                              
select ReferredAccessionNo                                                     
from OrderedInvestigations    (NOLOCK)                
Where OrgID =' + Cast(@OrgID AS NVARCHAR)
                                     + ' and isnull(ReferredAccessionNo,0) > 0        
and Status in (' + @chkStatus
                                     + ')                              
Insert #Temp_AccessionNumber              
SELECT  DISTINCT               
PIV.AccessionNumber,PIV.Visitid              
FROM  OrderedInvestigations PIV  (NOLOCK)
INNER JOIN MISOrderedDept MIS (NOLOCK)  ON MIS.AccessionNumber= PIV.AccessionNumber '
                                    /* + CASE
                                         WHEN Isnull(@PType, '') IN ( '', 'GRP' ) THEN 'INNER JOIN PatientInvestigation PINV     
ON PINV.AccessionNumber= PIV.AccessionNumber and PIV.Orgid = PINV.Orgid               
--INNER JOIN PatientVisit PV  ON PV.PatientVisitId=VisitID  AND '  + @strVisitType + '    
--INNER JOIN PatientAddress PA  on PA.PatientID=PV.PatientID      
INNER JOIN InvestigationOrgMapping iom (NOLOCK) ON iom.InvestigationID=PINV.InvestigationID AND iom.OrgID=pinv.orgid     
inner join  InvdeptMaster IDM (NOLOCK) on idm.DeptID=iom.DeptID and idm.OrgID=iom.OrgID           
'
                                         ELSE 'INNER JOIN InvestigationOrgMapping iom(NOLOCK)  ON iom.InvestigationID=PIV.ID AND iom.OrgID=piv.orgid '
                                       END*/
                                     + CASE
                                         WHEN @ProtocalGroupID > 0 THEN 'Inner Join #TempProtocalGroup tmp  On tmp.ID=PIV.ID and tmp.Type=PIV.Type'
                                         ELSE ''
                                       END
                                     + ' INNER JOIN #TempDepart TD  ON TD.DeptID=MIS.DeptID                                       
Outer apply              
(               
Select case             
when isnull(PIV.Referralid,-1) = -1 then 1             
when PIV.Referralid > 0                
and  Exists  (              
Select  1              
From OutsourcingDetail OSD (NOLOCK)                 
Where OSD.PatientVisitId=PIV.VisitId and OSD.Accessionnumber=PIV.Accessionnumber --and OSD.InvestigationID=PIV.ID                                    
and OSD.Status = ''Received'' ) then 1               
else 0 end              
as Flag               
) Outstatus         '
                                     + CASE
                                         WHEN @Dates <> '' THEN ' inner join PatientInvSampleMapping PISM (NOLOCK)  on PIV.Visitid = PiSM.VisitID and  
PIV.UID = PISM.UID and PISM.Type = PIV.Type and PISM.ID = PIV.ID                                            
inner join PatientInvSample pis (NOLOCK)  on PISM.SID = pis.sampleid                                            
inner join SampleTracker ST (NOLOCK)  on ST.Sampleid=pis.Sampleid and ST.InvSampleStatusID=3  and st.Orgid = '
                                                                + Cast(@Orgid AS NVARCHAR) + '                                            
'
                                         ELSE ''
                                       END
                                     + @clientid
                                     + 'LEFT join @Tmp tp on piv.AccessionNumber = tp.Refer                                                  
LEFT JOIN InvOrgAuthorization IOA (NOLOCK) on IOA.InvestigationID=PIV.ID and IOA.UserID='
                                     + @LoginId + '               
WHERE  PIV.OrgID ='
                                     + Cast(@OrgID AS NVARCHAR)
                                     + ' and PIV.ResCaptureLoc='
                                     + Cast(@orgAddID AS NVARCHAR)
                                     + ' and  PIV.Status in (' + @chkStatus
                                     + ')               
AND ISNULL(IOA.InvestigationID,'''') = CASE WHEN '''
                       + @pTaskAction + ''' = ''SelectiveAuthorization'' THEN  '''' ELSE ISNULL(IOA.InvestigationID,'''') END              
and tp.refer is null                                    
AND PIV.Type in '
                                     + CASE
                                         WHEN Isnull(@PType, '') = '' THEN '(''INV'',''GRP'')'
                                         WHEN Isnull(@PType, '') = 'INV' THEN '(''INV'')'
                                         WHEN Isnull(@PType, '') = 'GRP' THEN '(''GRP'')'
                                         ELSE '(''INV'')'
                                       END
                                     + Cast(@RefPhy AS NVARCHAR) 
                                    + CASE WHEN isNULL(@PType,'') <>'INV' THEN  ' '+ Cast(@Location AS NVARCHAR) Else ' ' End + ' AND '
									
                                     + @pStatus + ' '
                                     + CASE
                                         WHEN @PType IN ( 'GRP', 'PKG' ) THEN @InvNamesForGrpPKG
                                         ELSE @InvNamesForInv
                                       END
                                     + CASE
                                         WHEN @pDeptID != -1 THEN 'and MIS.DeptID = '
                                                                  + Cast(@pDeptID AS NVARCHAR)
                                         ELSE ''
                                       END
                                     + @WardNos + ' and Outstatus.flag = 1 '

                  SELECT @SQLQuery = @SQLQuery + ' option(force Order)'

                  EXEC Sp_executesql
                    @SQLQuery

                  INSERT INTO #pTempTable
                              (PatientVisitId,
                               PatientName,
                               PatientId,
                               VisitDate,
                               UID,
                               PatientVisitType,
                               Age,
                               PatientNumber,
                               titleName,
                               RoomDetails,
                               Labno,
                               VisitNumber,
                               IsSTAT,
                               DeptID,
                               ComplaintName,
                               AgeValues,
                               STATUS)
                  SELECT DISTINCT PV.PatientVisitId,
                                  Pt.NAME                                                          AS patientname,
                                  Pt.PatientID                                                     AS patientid,
                                  Cast(Isnull(PIV.CreatedAt, PV.CreatedAT) AS SMALLDATETIME)       AS createdat,
                                  PIV.UID,
                                  CASE
                                    WHEN Isnull(PV.LabVisitType, 0) = 0 THEN 'OutPatient'
                                    ELSE 'InPatient'
                                  END                                                              AS patienttype,
                                  isnull(Pt.Age,'') as Age,
                                  Pt.PatientNumber,
                                  CASE
                                    WHEN PV.ExternalVisitID IS NULL
                                          OR PV.ExternalVisitID = '0' THEN Cast(PV.PatientVisitId AS NVARCHAR)
                                    ELSE PV.ExternalVisitID
                                  END                                                              AS titlename,
                                  '',
                                  PIV.Labno,
                                  PV.VisitNumber,
                                  Isnull(PV.IsSTAT, 'N')                                           AS isstat,
                                  @pDeptID                AS deptid,
                                  (SELECT location
                                   FROM   organizationaddress OA
                                   WHERE  OA.addressid = Isnull(PV.orgaddressid, PV.orgaddressid)) AS location,
                      Pt.AgeValues,
                                  PIV.STATUS
                  FROM   #Temp_AccessionNumber Tp
                         INNER JOIN Orderedinvestigations PIV
                                 ON Tp.accessionNumber = PIV.accessionNumber
                         INNER JOIN patientvisit PV
                                 ON TP.visitid = PV.Patientvisitid
                         -- and PV.visittype = Isnull(@PVisittype, PV.visittype)          
                         INNER JOIN patient Pt
                                 ON PV.Patientid = pt.Patientid
              END
            ELSE
              BEGIN
                  SELECT @SQLQuery = '                                              
Declare @Tmp as table (Refer bigint)          
Insert @Tmp                                              
select ReferredAccessionNo                              
from OrderedInvestigations                                                     
Where OrgID =' + Cast(@OrgID AS NVARCHAR)
                                     + ' and isnull(ReferredAccessionNo,0) > 0         
and Status in (' + @chkStatus
                                     + ')                                              
INSERT INTO #pTempTable (PatientVisitId,PatientName,PatientId,VisitDate,UID,PatientVisitType,                                                                    
Age,PatientNumber,titleName,RoomDetails,Labno,VisitNumber,IsSTAT,DeptID,ComplaintName,AgeValues,Status)                                                
SELECT  DISTINCT PV.PatientVisitId,   
Pt.Name as PatientName,Pt.PatientID as PatientId,CAST(PV.CreatedAt AS smalldatetime) AS                                                                                                                                                                   
CreatedAt ,PIV.UID                                     
,case  when isnull(PV.LabVisitType,0) = 0                                                                                          
then ''OutPatient''                                                     
else  ''InPatient''                                                                                                                
end as PatientType,Pt.Age,Pt.PatientNumber,                                                                        
CASE WHEN PV.ExternalVisitID IS NULL OR PV.ExternalVisitID = ''0'' THEN  CAST(PV.PatientVisitId  as nvarchar)                                                                               
ELSE PV.ExternalVisitID                                                                                                                        
END AS titleName,'''',PIV.Labno,PV.VisitNumber ,isnull(PV.IsSTAT,''N'') as IsSTAT,
Case when '+ Cast(@pDeptID AS NVARCHAR)+ ' =-1                                                                               
then Case when '+ Cast(@pDeptID AS NVARCHAR)+ ' =-1 then -1 else td.DeptID end else '
                                     + Cast(@pDeptID AS NVARCHAR)
                                     + ' end  as DeptID,              
(select location from organizationaddress OA  Where OA.addressid = Isnull(PV.orgaddressid, PV.orgaddressid)) as location,               
Pt.AgeValues,PIV.Status                                   
FROM  OrderedInvestigations PIV  (NOLOCK)
INNER JOIN MISOrderedDept MIS  (NOLOCK)  ON MIS.AccessionNumber= PIV.AccessionNumber '
                                   /*  + CASE
                                         WHEN Isnull(@PType, '') IN ( '', 'GRP' ) THEN ' 
 
INNER JOIN PatientInvestigation PINV   ON PINV.AccessionNumber= PIV.AccessionNumber and PIV.Orgid = PINV.Orgid               
INNER JOIN InvestigationOrgMapping iom  ON iom.InvestigationID=PINV.InvestigationID AND iom.OrgID=pinv.orgid              
'
                                         ELSE 'INNER JOIN InvestigationOrgMapping iom  ON iom.InvestigationID=PIV.ID AND iom.OrgID=piv.orgid '
                                       END*/
                                     + ' INNER JOIN #TempDepart TD  ON TD.DeptID=MIS.DeptID                                  
Outer apply              
(               
Select case             
when isnull(PIV.Referralid,-1) = -1 then 1             
when PIV.Referralid > 0                
and  Exists  (              
Select  1              
From OutsourcingDetail OSD                  
Where OSD.PatientVisitId=PIV.VisitId and OSD.Accessionnumber=PIV.Accessionnumber --OSD.InvestigationID=PIV.ID                                    
and OSD.Status = ''Received'' ) then 1               
else 0 end              
as Flag               
) Outstatus              
INNER JOIN PatientVisit PV    ON PIV.Visitid=PV.PatientVisitId   AND PV.OrgID ='
                                     + Cast(@Orgid AS NVARCHAR) + ' AND '
                                     + @strVisitType
                                     + '              Inner join patient Pt  on PV.Patientid = Pt.Patientid              
LEFT join @Tmp tp on piv.AccessionNumber = tp.Refer                                              
LEFT JOIN InvOrgAuthorization IOA  on IOA.InvestigationID=PIV.ID and IOA.UserID='
                                     + @LoginId + ' '
                                     + CASE
                                         WHEN @ProtocalGroupID > 0 THEN 'Inner Join #TempProtocalGroup tmp  On tmp.ID=PIV.ID and tmp.Type=PIV.Type'
                                         ELSE ''
                                       END
+ @clientid + '                
WHERE  PIV.OrgID ='
                                     + Cast(@OrgID AS NVARCHAR)
                                     + ' and  PIV.Status in (' + @chkStatus
                                     + ')               
AND ISNULL(IOA.InvestigationID,'''') = CASE WHEN '''
                                     + @pTaskAction + ''' = ''SelectiveAuthorization'' THEN  '''' ELSE ISNULL(IOA.InvestigationID,'''') END              
AND   Pt.OrgID='
                                     + Cast(@OrgID AS NVARCHAR)
                                     + ' and tp.refer is null                                    
AND (Pt.Name LIKE ''%''+ COALESCE('''
                                     + @PatientName + ''',Pt.Name)'
                                     + '+''%'')   AND ' + @strVisitType
                                     --+ '--AND PV.PriorityID='+ Cast(@priority as nvarchar)                      
                                     + ' AND PIV.Type in '
                                     + CASE
                                         WHEN Isnull(@PType, '') = '' THEN '(''INV'',''GRP'')'
                                         WHEN Isnull(@PType, '') = 'INV' THEN '(''INV'')'
                                         WHEN Isnull(@PType, '') = 'GRP' THEN '(''GRP'')'
                                         ELSE '(''INV'')'
                                       END
                                     + '  and ISNULL(PIV.ResCaptureLoc,PV.OrgAddressID)='
                                     + Cast(@orgAddID AS NVARCHAR) --+ @RefPhy+ @Location +                      
                                     + ' AND '
                                     + @pStatus + ' '
                                     + CASE
                                         WHEN @PType IN ( 'GRP', 'PKG' ) THEN @InvNamesForGrpPKG
                                         ELSE @InvNamesForInv
                                       END
                                     + '     ' + @Dates + ' and ' + @Pno + ' And ' + @Vno + ' and ' + @SamID 
                                     + ' and Outstatus.flag = 1'

                  SELECT @SQLQuery = @SQLQuery + ' option(force Order)'

                  EXEC Sp_executesql
                    @SQLQuery
              --    select @SQLQuery          
              --select * from #pTempTable        
              --return        
              END

        --start         kapil-------------------------------------------             
            DECLARE @tabletmp TABLE
              (
                 AssionNumber  BIGINT,
                 patientvisiid BIGINT
              )

            INSERT INTO @tabletmp
                        (AssionNumber,
                         patientvisiid)
            SELECT PIV.AccessionNumber,
                   PIV.VisitID
            FROM   #pTempTable PTR
                   INNER JOIN Orderedinvestigations PIV
                           ON PTR.PatientVisitId = PIV.VisitID
                   --AND isnull(PIV.SortedTask, 'N') = 'Y'                                                 
                   INNER JOIN SortedOrderTest SOT
                           ON SOT.Patientvisitid = PIV.visitID
                              AND Sot.AccessionNumber = PIV.AccessionNumber
                   INNER JOIN @LoginDetail LD
                           ON LD.RoleID = SOT.RoleID

            --------------end kapil-----------------------------------------                               
            --print @SQLQuery              
            --return                                        
            DROP TABLE #TempDepart

            --start         kapil-------------------------------------------          
            IF ( @allocated = 'Y' )
              BEGIN
                  INSERT INTO #pTempTablesort
                              (PatientVisitId,
                               PatientName,
                               PatientId,
                               VisitDate,
                               UID,
                               PatientVisitType,
                               Age,
                               PatientNumber,
                               titleName,
                               Labno,
                               VisitNumber,
                               IsSTAT,
                               DeptID,
                               ComplaintName,
                               AgeValues)
                  --,STATUS                                      
                  SELECT DISTINCT PTR.PatientVisitId,
                                  PatientName,
                                  PTR.PatientId,
                                  VisitDate,
                                  PTR.UID,
                                  PatientVisitType,
                                  Age,
                                  PatientNumber,
                                  titleName,
                                  PTR.Labno,
                                  VisitNumber,
                                  PTR.IsSTAT,
                                  PTR.DeptID,
                                  ComplaintName,
                                  AgeValues
                  --,PTR.STATUS                                      
                  FROM   #pTempTable PTR
                         INNER JOIN Orderedinvestigations PIV
                                 ON PTR.PatientVisitId = PIV.VisitID
                         --AND isnull(PIV.SortedTask, 'N') = 'Y'                           
                         INNER JOIN SortedOrderTest SOT
                                 ON SOT.Patientvisitid = PIV.visitID
                                    AND Sot.AccessionNumber = PIV.AccessionNumber
                         INNER JOIN @LoginDetail LD
                                 ON LD.RoleID = SOT.RoleID
                                    AND SOT.loginID = LD.LoginID
              END
            ELSE
              BEGIN
        INSERT INTO #pTempTablesort
                              (PatientVisitId,
                               PatientName,
                               PatientId,
                               VisitDate,
                               UID,
                               PatientVisitType,
                           Age,
                               PatientNumber,
                               titleName,
                               Labno,
                               VisitNumber,
                               IsSTAT,
                               DeptID,
                               ComplaintName,
                               AgeValues)
                  --,STATUS          
                  SELECT DISTINCT PTR.PatientVisitId,
                                  PatientName,
                                  PTR.PatientId,
                                  VisitDate,
                                  PTR.UID,
                                  PatientVisitType,
                                  Age,
                                  PatientNumber,
                                  titleName,
                                  PTR.Labno,
                                  VisitNumber,
                                  PTR.IsSTAT,
                                  PTR.DeptID,
                                  ComplaintName,
                                  AgeValues
                  --,PTR.STATUS                                      
                  FROM   #pTempTable PTR
                         INNER JOIN Orderedinvestigations PIV
                                 ON PTR.PatientVisitId = PIV.VisitID
                                    --AND isnull(PIV.SortedTask, 'N') = 'N'                                      
                                    AND PIV.AccessionNumber NOT IN (SELECT AssionNumber
                                                                    FROM   @tabletmp)
                  UNION
                  SELECT DISTINCT PTR.PatientVisitId,
                                  PatientName,
                                  PTR.PatientId,
                                  VisitDate,
                                  PTR.UID,
                                  PatientVisitType,
                                  Age,
                                  PatientNumber,
                                  titleName,
                                  PTR.Labno,
                                  VisitNumber,
                                  PTR.IsSTAT,
                                  PTR.DeptID,
                                  ComplaintName,
                                  AgeValues
                  --,PTR.STATUS                                      
                  FROM   #pTempTable PTR
                         INNER JOIN Orderedinvestigations PIV
                                 ON PTR.PatientVisitId = PIV.VisitID
                         --AND isnull(PIV.SortedTask, 'N') = 'Y'                                        
                         INNER JOIN SortedOrderTest SOT
                                 ON SOT.Patientvisitid = PIV.visitID
                                    AND Sot.AccessionNumber = PIV.AccessionNumber
                         INNER JOIN @LoginDetail LD
                                 ON LD.RoleID = SOT.RoleID
                                    AND SOT.loginID = LD.LoginID
              END

            ---end  kapil----            
            INSERT INTO #pTempTableRowSAT
                        (PatientVisitId,
                         PatientName,
                         PatientId,
                         VisitDate,
                         UID,
                         PatientVisitType,
                         Age,
                         PatientNumber,
                         titleName,
                         Labno,
                         VisitNumber,
                   IsSTAT,
                         DeptID,
                         ComplaintName,
                         AgeValues,
                         Status)
            SELECT PatientVisitId,
                   PatientName,
                   PatientId,
                   VisitDate,
                   UID,
                   PatientVisitType,
                   Age,
                   PatientNumber,
                   titleName,
                   Labno,
                   VisitNumber,
                   IsSTAT,
                   DeptID,
                   ComplaintName,
                   AgeValues,
                   Status
            FROM   #pTempTablesort ---kapil        
            WHERE  Isnull(IsSTAT, '') <> 'N'
            ORDER  BY VisitDate ASC

            INSERT INTO #pTempTableRowSAT
                        (PatientVisitId,
                         PatientName,
                         PatientId,
                         VisitDate,
                         UID,
                         PatientVisitType,
                         Age,
                         PatientNumber,
                         titleName,
                         Labno,
                         VisitNumber,
                         IsSTAT,
                         DeptID,
                         ComplaintName,
                         AgeValues,
                         Status)
            SELECT PatientVisitId,
                   PatientName,
                   PatientId,
                   VisitDate,
                   UID,
                   PatientVisitType,
                   Age,
                   PatientNumber,
                   titleName,
                   Labno,
                   VisitNumber,
                   IsSTAT,
                   DeptID,
                   ComplaintName,
                   AgeValues,
                   Status
            FROM   #pTempTablesort --kapil        
            WHERE  Isnull(IsSTAT, '') = 'N'
            ORDER  BY VisitDate ASC

            DECLARE @DisplayTextTemplate NVARCHAR(255)
            DECLARE @TaskActionName NVARCHAR(255)

            SELECT @TaskActionName = ActionName,
                   @DisplayTextTemplate = DisplayTextTemplate
            FROM   TaskActions 
            WHERE  TaskActionID = @TaskActionID
                   AND Isnull(LanguageCode, 'en-GB') = @LangCode

            -- PRINT @TaskActionName                                          
            IF ( @TaskActionName = 'SelectiveAuthorization' )
              BEGIN
                  DECLARE @TmpTbl AS TABLE
                    (
                       Labno NVARCHAR(30)
                    )

                  INSERT INTO @TmpTbl
                  SELECT PTR.Labno
                  FROM   #pTempTableRowSAT PTR
                         INNER JOIN Tasks T 
                                 ON T.PatientVisitId = PTR.PatientVisitId
                                    AND T.PatientID = PTR.PatientID
                  --AND PTR.Labno = T.RefernceID          
                  WHERE  T.TaskActionID = 62
                         AND T.TaskStatusID IN ( 1, 5 )

                  IF ( @IsTimed = 'Y' )
                    BEGIN
                        INSERT INTO #pTempTableRow
                                    (Rowid,
                                     PatientVisitId,
                                     PatientName,
                                     PatientId,
                                     VisitDate,
                                     UID,
                                     PatientVisitType,
                                     Age,
                                     PatientNumber,
                                     titleName,
                                     RoomDetails,
                                     Labno,
              VisitNumber,
                                     IsSTAT,
                                     DeptID,
                                     ComplaintName,
                                     AgeValues,
                                     Status)
                        SELECT DISTINCT Row_number()
                                          OVER (
                                            ORDER BY Rowid ASC ) AS 'rowNumber',
                                        PatientVisitId,
                                        PatientName,
                                        PatientId,
                                        VisitDate,
                                        UID,
                                        PatientVisitType,
                                        Age,
                                        PatientNumber,
                                        titleName,
                                        RoomDetails,
                                        Labno,
                                        VisitNumber,
                                        IsSTAT,
                                        DeptId,
                                        ComplaintName,
                                        AgeValues,
                                        Status
                        FROM   #pTempTableRowSAT
                        WHERE  Labno NOT IN (SELECT Labno
                                             FROM   @TmpTbl)
                               AND Datediff(hh, VisitDate, @ServerDate) > 24

                        SET @DisplayTextTemplate = 'Approvel for {PatientName}(PatientNumber:{PatientNumber})(VisitNumber:{VisitNumber})'
                    END
                  ELSE
                    BEGIN
                        --                  select 'hi'        
                        --                   select * from #pTempTableRowSAT        
                        --select * from @TmpTbl        
                        --return        
                        INSERT INTO #pTempTableRow
                                    (Rowid,
                                     PatientVisitId,
                                     PatientName,
                                     PatientId,
                                     VisitDate,
                                     UID,
                                     PatientVisitType,
                                     Age,
                                     PatientNumber,
                                     titleName,
                                     RoomDetails,
                                     Labno,
                                     VisitNumber,
                                     IsSTAT,
                                     DeptID,
                                     ComplaintName,
                                     AgeValues,
                                     Status)
                        SELECT DISTINCT Row_number()
                                          OVER (
                                            ORDER BY Rowid ASC ) AS rownumber,
                                        PatientVisitId,
                                        PatientName,
                                        PatientId,
                                        VisitDate,
                                        UID,
                                        PatientVisitType,
                                        Age,
                                        PatientNumber,
                                        titleName,
                                        RoomDetails,
                                        Labno,
                                        VisitNumber,
                                        IsSTAT,
                                        DeptId,
                                        ComplaintName,
 AgeValues,
                                        Status
                        FROM   #pTempTableRowSAT
                        WHERE  Labno NOT IN (SELECT Labno
                                             FROM   @TmpTbl)
                    END
              END
            ELSE
              BEGIN
                  -- INSERT INTO #pTempTableRow(Rowid,PatientVisitId,PatientName,PatientId,VisitDate,UID,PatientVisitType,Age,                                                                      
                  --PatientNumber,titleName,RoomDetails,Labno,VisitNumber,IsSTAT,DeptID,ComplaintName,AgeValues,Status)                                                                                                                               
                  -- SELECT 'a'                  
                  INSERT INTO #pTempTableRowSATWIthDate
                              (PatientVisitId,
                               PatientName,
                               PatientId,
                               VisitDate,
                               UID,
                               PatientVisitType,
                               Age,
                               PatientNumber,
                               titleName,
                               RoomDetails,
                               Labno,
                               VisitNumber,
                               IsSTAT,
                               DeptId,
                               ComplaintName,
                               AgeValues,
                               Status)
                  SELECT DISTINCT PatientVisitId,
                                  PatientName,
                                  PatientId,
                                  VisitDate,
                                  UID,
                                  PatientVisitType,
                                  Age,
                                  PatientNumber,
                                  titleName,
                                  RoomDetails,
                                  Labno,
                                  VisitNumber,
                                  IsSTAT,
                                  DeptId,
                                  ComplaintName,
                                  AgeValues,
                                  Status
                  FROM   (SELECT DISTINCT Row_number()
                                            OVER (
                                              ORDER BY Rowid ASC )                           AS rownumber,
                                          PatientVisitId,
                                          PatientName,
                                          PatientId,
                                          --CONVERT(DATETIME, CONVERT(NVARCHAR, VisitDate, 3)) AS visitdate,
										  CONVERT(DATETIME,VisitDate) AS visitdate,
                                          UID,
                                          PatientVisitType,
                                          Age,
                                          PatientNumber,
                                          titleName,
                                          RoomDetails,
                                          Labno,
                                          VisitNumber,
                                          IsSTAT,
                                          DeptId,
                                          ComplaintName,
                                          AgeValues,
                                          Status
                          FROM   #pTempTableRowSAT(NOLOCK)) TT
                  ORDER  BY IsSTAT DESC

                  IF ( @ConfigKeyValue = 'Y' )
                    BEGIN
                        DECLARE @TEMPFinalBill TABLE
                          (
                             PatientVisitID BIGINT,
                             ReportDatetime DATETIME
                          )

      INSERT INTO @TEMPFinalBill
                        SELECT tmp.PatientVisitID,
                               Max(fb.ReportDateTime)
                        FROM   #pTempTableRowSATWIthDate AS tmp
                               INNER JOIN FinalBill fb
                                       ON tmp.PatientVisitID = fb.VisitID
                        GROUP  BY tmp.PatientVisitID

                        --select * from #pTempTableRowSATWIthDate    where   PatientVisitID =11686                     
                        UPDATE tmp
                        SET    ReportTatDate = ( CASE
                                                   WHEN ( Isnull(tmpfb.ReportDateTime, '') = ''
                                                           OR tmpfb.ReportDateTime = '1753-01-01 00:00:00.000' ) THEN tmp.VisitDate
                                                   ELSE tmpfb.ReportDatetime
                                                 END )
                        FROM   #pTempTableRowSATWIthDate AS tmp
                               INNER JOIN @TEMPFinalBill tmpfb
                                       ON tmp.PatientVisitID = tmpfb.PatientVisitID

                        --select * from #pTempTableRowSATWIthDate    where   PatientVisitID =11686                            
                        INSERT INTO #pTempTableRow
                                    (Rowid,
                                     PatientVisitId,
                                     PatientName,
                                     PatientId,
                                     VisitDate,
                                     UID,
                                     PatientVisitType,
                                     Age,
                                     PatientNumber,
                                     titleName,
                                     RoomDetails,
                                     Labno,
                                     VisitNumber,
                                     IsSTAT,
                                     DeptID,
                                     ComplaintName,
                                     AgeValues,
                                     Status,
                                     ReportTatDate)
                        SELECT DISTINCT Row_number()
                                          OVER (
                                            ORDER BY Rowid ASC ) AS 'rowNumber',
                                        PatientVisitId,
                                        PatientName,
                                        PatientId,
                                        VisitDate                AS 'VisitDate',
                                        UID,
                                        PatientVisitType,
                                        Age,
                                        PatientNumber,
                                        titleName,
                                        RoomDetails,
                                        Labno,
                                        VisitNumber,
                                        IsSTAT,
                                        DeptId,
                                        ComplaintName,
                                        AgeValues,
                                        Status,
                                        ReportTatDate
                        FROM   #pTempTableRowSATWIthDate
                        ORDER  BY ReportTatDate
                    --    select * from #pTempTableRow  where PatientVisitId =11686         
                    END
                  ELSE
                    BEGIN
                        INSERT INTO #pTempTableRow
                                    (Rowid,
                                     PatientVisitId,
                                     PatientName,
                                     PatientId,
                          VisitDate,
                                     UID,
                                     PatientVisitType,
                                     Age,
                                     PatientNumber,
                                     titleName,
                                     RoomDetails,
                                     Labno,
                                     VisitNumber,
                                     IsSTAT,
                                     DeptID,
                                     ComplaintName,
                                     AgeValues,
                                     STATUS)
                        SELECT DISTINCT Row_number()
                                          OVER (
                                            ORDER BY Rowid ASC ) AS 'rowNumber',
                                        PatientVisitId,
                                        PatientName,
                                        PatientId,
                                        VisitDate                AS 'VisitDate',
                                        UID,
                                        PatientVisitType,
                                        Age,
                                        PatientNumber,
                                        titleName,
                                        RoomDetails,
                                        Labno,
                                        VisitNumber,
                                        IsSTAT,
                                        DeptId,
                                        ComplaintName,
                                        AgeValues,
                                        Status
                        FROM   #pTempTableRowSATWIthDate
                    END
              END
			  		 
IF(@barCode != '')

	BEGIN
	DECLARE @ConfigKeyValueExBarcode NVARCHAR(10)

      SET @ConfigKeyValueExBarcode = (SELECT com.ConfigValue
                             FROM   ConfigKeyMaster ckm
                                    INNER JOIN ConfigOrgMaster com
                                            ON ckm.ConfigKeyID = com.ConfigKeyID
                                               AND com.OrgID = @OrgID
                                               AND Isnull(ckm.ConfigKey, '') = 'ShowExternalBarcodeInsteadofBarcode')
            INSERT INTO @pTempTableRow
            SELECT TT.Rowid,TT.PatientVisitId,TT.PatientName,TT.PatientId,TT.VisitDate,TT.UID,TT.PatientVisitType,TT.Age,TT.PatientNumber,TT.RoomDetails,
           TT.titleName,TT.Labno,TT.VisitNumber,TT.IsSTAT,TT.DeptID,TT.ComplaintName,TT.ExternalVisitID,TT.TaskDescription,TT.AgeValues,TT.Status,TT.ReportTatDate
---------------------------------------------------------------------  
   -- Changed Join condition here  
------------------------------------------------------------------------              
FROM   #pTempTableRow TT INNER JOIN  PatientInvSample PIS  
   ON TT.PatientVisitId = PIS.PatientVisitID  
   --AND PIS.BarcodeNumber = @barCode
   	AND (Case when @ConfigKeyValueExBarcode='Y' and PIS.ExternalBarcode<>'' then PIS.ExternalBarcode ELse PIS.BarcodeNumber End) = @barCode
   ;  

            WITH numbered
                 AS (SELECT PatientVisitId,
                            Row_number()
                              OVER (
                                PARTITION BY PatientVisitId,UID
                                ORDER BY Status ) AS nr
                     FROM   @pTempTableRow)
            DELETE FROM numbered
            WHERE  nr > 1

		 END 

ELSE

BEGIN

 INSERT INTO @pTempTableRow
 SELECT * FROM #pTempTableRow;
  WITH numbered
                 AS (SELECT PatientVisitId,
                            Row_number()
                              OVER (
                                PARTITION BY PatientVisitId,UID
                                ORDER BY Status ) AS nr
                     FROM   @pTempTableRow)
            DELETE FROM numbered
            WHERE  nr > 1
END 

            SET @startRowIndex = ( @startRowIndex - 1 ) * @pageSize

            IF @startRowIndex = 0
              SET @startRowIndex = 1

            SET ROWCOUNT @startRowIndex

            SELECT @first_id = Rowid
            FROM   @pTempTableRow
            ORDER  BY Rowid

            ---Included for Grid page navigation issue----    
            IF ( @startRowIndex = 1 )
              BEGIN
                  SELECT @first_id = @first_id
              END
            ELSE
              BEGIN
                  SELECT @first_id = @first_id + 1
              END

            ---------End------------------------    
            SET ROWCOUNT @pageSize
IF(@SampleID != '')
BEGIN
INSERT INTO #pTempTATColor
                        (PatientVisitId,
                         PatientName,
                         PatientID,
                         VisitDate,
                         UID,
                         PatientVisitType,
                         Age,
                         PatientNumber,
                         TitleName,
                         VisitNotes,
                         Labno,
                        VisitNumber,
                         STATE,
                         Rowid,
                         DeptID,
                         ComplaintName,
                RateID,
                         ExternalVisitID,
                         AccompaniedBy,
                         NextReviewDate,
                         STATUS,
            ResultEntryType,
                         protocolgroupid,
                         ReportTat)
            SELECT DISTINCT PTR.PatientVisitId,
                            PatientName,
                            PTR.PatientId    AS PatientID,
                            PTR.VisitDate,
                            PTR.UID,
                        PatientVisitType,
                            Age,
                            PatientNumber,
                            TitleName,
                            RoomDetails      AS VisitNotes,
                            PTR.Labno,
                            PTR.VisitNumber,
                            PTR.IsSTAT       AS State,
                            Rowid,
                            DeptID,
                            ComplaintName,
                            Count(OI.ID)     AS RateID,
                            PV.ExternalVisitID,
           CASE
                              WHEN PTR.Status = 'With-hold Completion' THEN Replace(Replace(Replace(Replace(Replace(@DisplayTextTemplate, '{ExternalVisitId}', Isnull(PV.ExternalVisitID, PTR.PatientVisitId)), '{PatientNumber}', PatientNumber), '{PatientNa

me}', PatientName), '{VisitNumber}', PTR.VisitNumber), 'Enter Result For', 'Enter With-Hold Result for')
                              ELSE REPLACE(Replace(Replace(Replace(Replace(@DisplayTextTemplate, '{ExternalVisitId}', Isnull(PV.ExternalVisitID, PTR.PatientVisitId)), '{PatientNumber}', PatientNumber), '{PatientName}', PatientName), '{VisitNumber}', 
							  PTR.VisitNumber), '{SampleID}', ISNULL(OI.SampleID, PTR.PatientVisitId))
                            END              AS AccompaniedBy,
                            PTR.AgeValues    AS NextReviewDate,
                            PTR.Status,
                            CASE
                              WHEN PTR.Status = 'With-hold Completion' THEN 'WHResultEntry'
                              ELSE 'NRResultEntry'
                            END              AS ResultEntryType,
                            @ProtocalGroupID AS ProtocalGroupId,
                            ptr.ReportTatDate
            FROM   @pTempTableRow PTR
                   INNER JOIN OrderedInvestigations OI
		   ON PTR.PatientVisitId = OI.VisitID 
                   INNER JOIN PatientVisit PV
                           ON Pv.PatientVisitId = PTR.PatientVisitId
            WHERE  Rowid >= @first_id   and  OI.SampleID=@SampleID
            GROUP  BY PTR.PatientVisitId,
                      PatientName,
                      PTR.PatientId,
                      PTR.VisitDate,
                      PTR.UID,
                      PatientVisitType,
                      Age,
                      PatientNumber,
                      TitleName,
                      RoomDetails,
                      PTR.Labno,
                      PTR.VisitNumber,
                      PTR.IsSTAT,
                      Rowid,
                      DeptID,
                      ComplaintName,
                      PV.ExternalVisitID,
                      PTR.AgeValues,
                      PTR.Status,
                      ptr.ReportTatDate,
                      OI.SampleID
            ORDER  BY Rowid ASC
END
ELSE
BEGIN
 INSERT INTO #pTempTATColor
                        (PatientVisitId,
                         PatientName,
                         PatientID,
                         VisitDate,
                         UID,
                         PatientVisitType,
                         Age,
                         PatientNumber,
                         TitleName,
                         VisitNotes,
                         Labno,
                         VisitNumber,
                         STATE,
                         Rowid,
                         DeptID,
                         ComplaintName,
                         RateID,
                         ExternalVisitID,
                         AccompaniedBy,
                         NextReviewDate,
                       STATUS,
                         ResultEntryType,
                         protocolgroupid,
                         ReportTat)
            SELECT DISTINCT PTR.PatientVisitId,
                            PatientName,
                            PTR.PatientId    AS 'PatientID',
                            PTR.VisitDate,
                            PTR.UID,
                            PatientVisitType,
                            Age,
                            PatientNumber,
                            TitleName,
                            RoomDetails      AS 'VisitNotes',
                            PTR.Labno,
                            PTR.VisitNumber,
                            PTR.IsSTAT       AS 'State',
                            Rowid,
                            DeptID,
                            ComplaintName,
                            Count(OI.ID)     AS 'RateID',
                            PV.ExternalVisitID,
                            CASE
                              WHEN PTR.Status = 'With-hold Completion' THEN 
			      Replace(Replace(Replace(Replace(Replace(
			      @DisplayTextTemplate, 
			      '{ExternalVisitId}'
			      ,
			       Isnull(PV.ExternalVisitID, 
			       PTR.PatientVisitId)), 
			       '{PatientNumber}',
			        PatientNumber),
				 '{PatientName}'
				 , PatientName), '{VisitNumber}', 
				 PTR.VisitNumber), 
				 'Enter Result For'
				 , 'Enter With-Hold Result for')
                              ELSE REPLACE(Replace(Replace(Replace(Replace(@DisplayTextTemplate, 
			      '{ExternalVisitId}'
			      ,
			       Isnull(PV.ExternalVisitID, 
			       PTR.PatientVisitId)), 
			       '{PatientNumber}',
			        PatientNumber), '{PatientName}', PatientName),
				 '{VisitNumber}',
				  PTR.VisitNumber), '{SampleID}', ISNULL(OI.SampleID, PTR.PatientVisitId))
                            END              AS 'AccompaniedBy',
                            PTR.AgeValues    AS 'NextReviewDate',
                            PTR.Status,
                            CASE
                              WHEN PTR.Status = 'With-hold Completion' THEN 
			      'WHResultEntry'
                              ELSE 'NRResultEntry'
                            END              AS 'ResultEntryType',
                            @ProtocalGroupID AS 'ProtocalGroupId',
                            ptr.ReportTatDate
            FROM   @pTempTableRow PTR
                   INNER JOIN OrderedInvestigations OI
                           ON PTR.PatientVisitId = OI.VisitID
						   and PTR.UID = OI.UID
                   inner JOIN PatientVisit PV
                           ON Pv.PatientVisitId = PTR.PatientVisitId
            WHERE  Rowid >= @first_id
            GROUP  BY PTR.PatientVisitId,
                      PatientName,
                      PTR.PatientId,
                      PTR.VisitDate,
                      PTR.UID,
                      PatientVisitType,
                      Age,
                      PatientNumber,
                      TitleName,
                      RoomDetails,
                      PTR.Labno,
                      PTR.VisitNumber,
                      PTR.IsSTAT,
                      Rowid,
                      DeptID,
                      ComplaintName,
                      PV.ExternalVisitID,
                      PTR.AgeValues,
                      PTR.Status,
                      ptr.ReportTatDate,
                      OI.SampleID
            ORDER  BY Rowid ASC
END
           
			
            UPDATE tmp
            SET    TATStatus = dbo.Fntatdelaypriority(tmp.PatientVisitId, @pDeptID)
            FROM   #pTempTATColor tmp

            SELECT PatientVisitId,
                   PatientName,
                   PatientID,
                   VisitDate,
                   UID,
                   PatientVisitType,
    isnull(Age,'') as Age,
                   PatientNumber,
                   TitleName,
                   VisitNotes,
                   Labno,
                   VisitNumber,
                   STATE                AS 'State',
                   Rowid,
                   DeptID,
                   ComplaintName,
                   RateID,
                   ExternalVisitID,
                   AccompaniedBy,
                   NextReviewDate,
                   Status,
                   ResultEntryType,
                   Isnull(TATStatus, 0) AS 'Tatstatus',
                   ReportTat
            FROM   #pTempTATColor

            SET ROWCOUNT 0

            DROP TABLE #pTempTable

            SELECT DISTINCT @totalRows = Count(*)
            FROM   @pTempTableRow
        END

      DROP TABLE #TempProtocalGroup

      DROP TABLE #pTempTableRowSATWIthDate

      DROP TABLE #pTempTableRowSAT

      DROP TABLE #pTempTableRow

      DROP TABLE #pTempTATColor
	  
	  END TRY                                 
  BEGIN CATCH   
			                           
    SELECT @EMsg = Error_Message(),@ELine = Error_Line(),@Eproc = Error_procedure(),@ESEVERITY = Error_SEVERITY(),@sptrace ='pGetLabInvestigationPatientSearch @OrgID = '+cast(@OrgID as varchar)+'@PatientID = '+cast(@PatientID as varchar) 
	 
    exec usp_insert_errorinfo @EMsg,@ELine,@Eproc,@Eseverity,@sptrace; 
END CATCH 
	  
  END 


