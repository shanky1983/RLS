--EXEC pGetTestMasterDetails_LIMSAPI @pOrgCode='LIMSAPI',@TestCode='',@Page=1,@Size=30
CREATE PROCEDURE pGetTestMasterDetails_LIMSAPI(
	@pOrgCode NVARCHAR(100),
	@TestCode NVARCHAR(100),
	@Page INT,
    @Size INT
  
	)
	WITH EXECUTE AS OWNER
AS
BEGIN

DECLARE  @pOrgID INT = NULL, @pOrgAddrID INT = NULL, @pStatus NVARCHAR(50),	@SearchText NVARCHAR(50)

DECLARE @MaxRecordCount INT
 DECLARE @MaxCountReached BIT
 DECLARE @TotalRecords INT


 SELECT @MaxRecordCount=MaximumRecordCount 
 FROM APIConfiguration 
 WHERE SPName='pGetTestMasterDetails_LIMSAPI'

 IF @Size > @MaxRecordCount
 BEGIN
    SET @Size = @MaxRecordCount
    SET @MaxCountReached=1
 END


	CREATE TABLE #Temp_TestDetails
	(		 
		TestCode nvarchar(50),
		TestName nvarchar(1000),
		Type nvarchar(50),
		Gender nvarchar(50),
		SampleID int,
		SampleName nvarchar(250),
		ContainerID int,
		ContainerName nvarchar(250),
		SampleContainerColour nvarchar(100),
		DepartmentName nvarchar(100),
		DepartmentID int,
		Status Nvarchar(50)  default  '' ,
		InvestigationID BIGINT,
		OrgID INT,
		Price DECIMAL(18,2),
		CreatedAt DATETIME,
		UpdatedAt DATETIME,
		TestID BIGINT
	) 
	IF EXISTS(Select 1 from Integrationtypemaster where IntegrationTypeName = @pOrgCode)
   BEGIN
	  SELECT @pOrgID = VOM.AttuneOrgID, @pOrgAddrID = VOA.AttuneOrgAddressID, 
	         @pStatus = case ITM.Status when 1 then 'Active' else 'Inactive' end 
		FROM Integrationtypemaster ITM WITH(NOLOCK) 
			INNER JOIN VendorOrgMapping VOM  WITH(NOLOCK) ON ITM.IntegrationTypeID = VOM.VendorID
			INNER JOIN vendorOrgAddressMapping VOA WITH(NOLOCK)  ON VOA.VendorID = VOM.VendorID
		WHERE ITM.IntegrationTypeName = @pOrgCode
	END 

	SELECT @TotalRecords = COUNT(1) 
	FROM InvestigationMaster  IOG   
	INNER JOIN InvestigationOrgMapping  IG (NOLOCK) ON IOG.InvestigationID =IG.InvestigationID 
	WHERE IG.OrgID=@pOrgID AND (IOG.TestCode=@TestCode OR @TestCode='') AND ISNULL(isintegrationsent,'')=''
	 

	INSERT INTO #Temp_TestDetails (TestCode,TestName,Type,Gender,SampleID,SampleName,ContainerID,ContainerName,SampleContainerColour,
								DepartmentName,DepartmentID,Status,InvestigationID,OrgID,CreatedAt,UpdatedAt,TestID) 
	SELECT IOM.TestCode ,Replace(IOM.DisplayText,'''', ''''''),'INV', Case when IOM.Gender= 'F' then 'Female' when IOM.Gender='M' then 'Male' 
	when ISNULL(IOM.Gender,'B')='B' then 'Both' END,ISM.SampleCode,ISM.SampleDesc,iSC.SampleContainerID,ISC.ContainerName,ISNULL(ISC.ContainerColor ,'')
	,IDM.DeptName,IDM.DeptID,CASE WHEN IOM.ISActive='Y' THEN 'Active' ELSE 'InActive' END ,IOM.InvestigationID,IOM.OrgID,IOM.CreatedAt,IOM.ModifiedAt,IOM.InvestigationID
	FROM InvestigationOrgMapping  IOM (NOLOCK)  
	LEFT JOIN InvSampleMaster ISM (NOLOCK) on  ISM.SampleCode=IOM.SampleCode and IOM.OrgID=ISM.OrgID AND ISM.Langcode='en-GB'
	LEFT JOIN InvestigationSampleContainer ISC (NOLOCK)  on ISC.SampleContainerID=IOM.SampleContainerID and ISC.ORgID=IOM.OrgID  AND ISC.Langcode='en-GB'
	LEFT JOIN InvDeptMaster IDM (NOLOCK) On IDM.DeptID=IOM.DeptID and IDM.OrgID=IOM.OrgID AND IDM.Langcode='en-GB'
	WHERE IOM.Orgid=@pOrgID and ISNULL(IOM.IsIntegrationSent,0)=0
	 ORDER BY IOM.InvestigationID
      OFFSET (@Page -1) * @Size ROWS
      FETCH NEXT @Size ROWS ONLY  

	 UPDATE TR set TR.Price=IRC.Rate 
		FROM #Temp_TestDetails TR  
		INNER JOIN InvRateMaster  IRC ON IRC.ID=TR.InvestigationID 
		INNER JOIN RateMaster R (NOLOCK) ON R.OrgID=TR.OrgID AND R.RateCode='GENERAL' 

	SELECT TestCode,TestName,Type,Gender,CONVERT(NVARCHAR,SampleID) SampleID,SampleName,ContainerID,ContainerName,SampleContainerColour,
           DepartmentName,DepartmentID,Status,InvestigationID,CreatedAt ,UpdatedAt,CONVERT(NVARCHAR,TestID) TestID FROM #Temp_TestDetails  
								 
	
	 SELECT @TotalRecords as TotalRecords, cast(CEILING(CAST(@TotalRecords AS DECIMAL) / @Size) as Int) as TotalPages,
            @MaxRecordCount as AllowableRecordCount
	DROP TABLE #Temp_TestDetails 
END








