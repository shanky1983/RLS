CREATE PROCEDURE pGetDayWiseCollectionRevenueReport @pFDate [DATETIME]            
,@pTDate [DATETIME]            
,@pOrgId [INT]            
,@Pparamtype VARCHAR(100) = NULL            
,@Pparamvalue VARCHAR(100) = NULL            
,@pExcelReportId [INT] = NULL            
,@pExcelReportName VARCHAR(255) = NULL            
,@pToExecute VARCHAR(10) = NULL            
--WITH EXECUTE AS OWNER            
AS            
SET NOCOUNT ON            
BEGIN            
--pGetDayWiseCollectionRevenueReport '01-10-2020 00:00:00' , '23-10-2020 23:59:59',220            
--Declare @pFDate datetime ='01-10-2020',@pTDate datetime ='23-10-2020'            
            
set @pFDate = CONVERT(DATETIME, CONVERT(NVARCHAR, @pFDate, 103) + ' 00:00:00')            
set @pTDate = CONVERT(DATETIME, CONVERT(NVARCHAR, @pTDate, 103) + ' 23:59:59')            
Declare @Datedetails Table (Sno Int Identity(1,1),Dates varchar(10))            
            
Declare @FROM DATETIME=@pFDate            
Declare @TO DATETIME=@pTDate            
while (@FROM<=@TO)            
BEGIN            
Insert into @Datedetails(Dates)            
select Convert(VARCHAR(10),@FROM,103)            
SET @FROM = DATEADD(dd, 1, @FROM)            
END            
            
            
Declare @CollectedAmount Table (FinalbillID Bigint, CollectedAmount Decimal(18,2))            
Declare @CollectedAmount2 Table (FinalbillID Bigint, CollectedAmount Decimal(18,2))            
Create Table #fistdata (Sno int,Trans Nvarchar(20),PatientVisitID Bigint,FinalBillID Bigint,OrgID Int,CenterName Nvarchar(255),CircleName Nvarchar(255),Transactiondate Varchar(10),            
VisitDate Varchar(10),VisitNumber nvarchar(50),BillNumber Nvarchar(50),ExtPatientID Nvarchar(50),PatientName Nvarchar(255),GrossAmount Decimal(18,2),NetAmount Decimal(18,2),            
Discount Decimal(18,2),Due Decimal(18,2),Cash decimal(18,2),Cheque decimal(18,2), Card decimal(18,2),Prepaid decimal(18,2),Online decimal(18,2),DemandDraft decimal(18,2),            
CollectionDetails Decimal(18,2),AdjustmentAmount Decimal(18,2),Collection Decimal(18,2),DiscountComment Nvarchar(255),DueComment Nvarchar(255),DueApprovedBy Nvarchar(255),            
RefDocName nvarchar(255),DisApprovedBy Nvarchar(255),TransactionType Nvarchar(50),DueType Nvarchar(50),ClientName nvarchar(255),Specialization nvarchar(255),            
SourceName nvarchar(255),SalespersonName nvarchar(255),            
AmountRefund Decimal(18,2),BillStatus Nvarchar(50),Iscash nchar(6),CollectedUser Nvarchar(250),RefundDate varchar(10),IsAdvanceClient bit)            


Create Table #fistdata1 (Sno int,Trans Nvarchar(20),PatientVisitID Bigint,FinalBillID Bigint,OrgID Int,CenterName Nvarchar(255),CircleName Nvarchar(255),Transactiondate Varchar(10),            
VisitDate Varchar(10),VisitNumber nvarchar(50),BillNumber Nvarchar(50),ExtPatientID Nvarchar(50),PatientName Nvarchar(255),GrossAmount Decimal(18,2),NetAmount Decimal(18,2),            
Discount Decimal(18,2),Due Decimal(18,2),Cash decimal(18,2),Cheque decimal(18,2), Card decimal(18,2),Prepaid decimal(18,2),Online decimal(18,2),DemandDraft decimal(18,2),            
CollectionDetails Decimal(18,2),AdjustmentAmount Decimal(18,2),Collection Decimal(18,2),DiscountComment Nvarchar(255),DueComment Nvarchar(255),DueApprovedBy Nvarchar(255),            
RefDocName nvarchar(255),DisApprovedBy Nvarchar(255),TransactionType Nvarchar(50),DueType Nvarchar(50),ClientName nvarchar(255),Specialization nvarchar(255),            
SourceName nvarchar(255),SalespersonName nvarchar(255),            
AmountRefund Decimal(18,2),BillStatus Nvarchar(50),Iscash nchar(6),CollectedUser Nvarchar(250),RefundDate varchar(10),IsAdvanceClient bit)            
            
Declare @CashAmount Table (FinalbillID Bigint, Cash Decimal(18,2),Cheque Decimal(18,2),Card Decimal(18,2), DemandDraft Decimal(18,2), Online Decimal(18,2),Due Decimal(18,2),            
NetAmount Decimal(18,2),AmountRefund Decimal(18,2),Discount Decimal(18,2))            
Declare @CashAmount2 Table (FinalbillID Bigint, Cash Decimal(18,2),Cheque Decimal(18,2),Card Decimal(18,2), DemandDraft Decimal(18,2), Online Decimal(18,2),Due Decimal(18,2),            
NetAmount Decimal(18,2),AmountRefund Decimal(18,2),Discount Decimal(18,2))            
Declare @CashAmount1 Table (FinalbillID Bigint, Cash Decimal(18,2),Cheque Decimal(18,2),Card Decimal(18,2), DemandDraft Decimal(18,2), Online Decimal(18,2),Due Decimal(18,2),            
NetAmount Decimal(18,2),AmountRefund Decimal(18,2),Discount Decimal(18,2))            
            
Declare @CashAmount12 Table (FinalbillID Bigint, Cash Decimal(18,2),Cheque Decimal(18,2),Card Decimal(18,2), DemandDraft Decimal(18,2), Online Decimal(18,2),Due Decimal(18,2),            
NetAmount Decimal(18,2),AmountRefund Decimal(18,2),Discount Decimal(18,2))            
Declare @Billdata as table (PatientVisitID Bigint,FinalBillID Bigint,CollectedAmount Decimal(18,2),DiscountAmt Decimal(18,2),DiscountReason Nvarchar(255),Due Decimal(18,2),            
PaymentName Nvarchar(250),DisApprovedBy Nvarchar(255),AmountRefund decimal(18,2))            
            
Declare @Billdata1 as table (PatientVisitID Bigint,FinalBillID Bigint,CollectedAmount Decimal(18,2),DiscountAmt Decimal(18,2),DiscountReason Nvarchar(255),Due Decimal(18,2),            
PaymentName Nvarchar(250),DisApprovedBy Nvarchar(255),AmountRefund decimal(18,2))            
Insert into #fistdata (Sno,Trans,PatientVisitID,FinalBillID,OrgID,CenterName,CircleName,Transactiondate,VisitDate,VisitNumber,BillNumber,ExtPatientID,PatientName,GrossAmount,            
NetAmount,Prepaid,RefDocName,TransactionType,DueType,AdjustmentAmount,ClientName,BillStatus,Discount,DiscountComment,DisApprovedBy,Specialization,SourceName,SalespersonName,Iscash,DueComment,DueApprovedBy,RefundDate,IsAdvanceClient)            
select Distinct 1 as Sno,Convert(varchar,BD.Createdat,103) as Trans,PV.PatientVisitID,FB.FinalBillID,PV.OrgID,OA.location as CenterName,OA.City as CircleName,Convert(varchar,BD.Createdat,103) as Transactiondate,            
Convert(Varchar,PV.Visitdate,103) as VisitDate,PV.VisitNumber as VisitNumber,FB.BillNumber as BillNumber, P.PatientNumber as ExtPatientID,P.Name as PatientName,            
FB.GrossBillValue as GrossAmount,FB.NetValue as NetAmount,case when CM.isadvanceclient=1 Then FB.NetValue ELSE 0 END,            
--case when CM.isadvanceclient=1 Then 'Prepaid' Else '' End as PaymentName,            
PV.ReferingPhysicianName as RefDocName,            
Case when CM.isadvanceclient=1 Then 'PrePaid' when AD.BillStatus!='CANCELLED' Then 'Refund' WHEN AD.BillStatus='CANCELLED' Then 'Cancel' Else 'Billing' END as TransactionType,            
CASE WHEN CM.ClientCode='GENERAL' THEN 'GENERAL' ELSE 'CLIENT' END AS DueType,0 AS AdjustmentAmount,            
Case when CM.ClientName='GENERAL' Then '' Else CM.ClientName End as ClientName,            
AD.BillStatus as BillStatus,            
FB.DiscountAmount,FB.DiscountReason,U.Name as DisApprovedBy,'' as Specialization,            
Case when CM.ClientName='GENERAL' Then '' Else CM.ClientName End as SourceName,'' as SalespersonName,Iscash,PDD.DueReason,UU.Name,Convert(Varchar,AD.CreatedAt,103) as RefundDate,cm.IsAdvanceClient         
from Patient P (NOLOCK)            
Inner join PatientVisit PV (NOLOCK) ON PV.PatientID=P.PatientID AND PV.OrgID=P.OrgID            
Inner join VisitClientMapping VCM (NOLOCK) ON VCM.VisiTID=PV.PatientVisitID AND VCM.OrgID=PV.OrgID AND Isnull(VCM.IsActive,'Y')='Y'            
Inner join FinalBill FB (NOLOCK) ON FB.FinalBillID=VCM.FinalBillID AND FB.OrgID=VCM.OrgID            
Inner join Billingdetails BD (NOLOCK) ON BD.FinalBillID=FB.FinalBillID AND BD.OrgID=FB.OrgID            
LEFT join Amountrefunddetails AD (NOLOCK) ON AD.FinalBillID=BD.FinalBillID and Convert(varchar,AD.Createdat,103)= Convert(varchar,PV.Createdat,103)--AND AD.BillStatus!='CANCELLED'--AD.BillingDetailsID=BD.BillingDetailsID AND             
Inner join Organization O (NOLOCK) On O.OrgID=PV.OrgID             
Inner join OrganizationAddress OA (NOLOCK) ON OA.OrgID=PV.OrgID AND OA.AddressID=PV.OrgAddressID            
Inner join Clientmaster CM (NOLOCK) ON CM.ClientID=VCM.ClientID AND CM.orgID=VCM.OrgID            
Left join Users U (NOLOCK) ON U.LoginID=FB.DiscountApprovedBy AND U.OrgID=FB.OrgID AND Isnull(U.LoginID,0)!=0            
left join PatientDueDetails PDD (NOLOCK) ON PDD.VisiTID=VCM.VisitID AND PDD.FinalBillID=VCM.FinalBillID AND PDD.OrgID=VCM.OrgID            
Left join Users UU (NOLOCK) ON UU.LoginID=PDD.DueApprovedBy AND UU.OrgID=PDD.OrgID AND Isnull(UU.LoginID,0)!=0            
where BD.Createdat Between @pFDate AND @pTDate AND BD.OrgID=@pOrgId AND ISNULL(PV.ReferVisitID,0)=0 --and PV.PatientVisitID=10792            
--Order by PV.PatientVisitID            
Insert into #fistdata1 (Sno,Trans,PatientVisitID,FinalBillID,OrgID,CenterName,CircleName,Transactiondate,VisitDate,VisitNumber,BillNumber,ExtPatientID,PatientName,GrossAmount,            
NetAmount,Prepaid,RefDocName,TransactionType,DueType,AdjustmentAmount,ClientName,BillStatus,Discount,DiscountComment,DisApprovedBy,Specialization,SourceName,SalespersonName,Iscash,DueComment,DueApprovedBy,RefundDate,IsAdvanceClient)            
select Distinct 1 as Sno,Convert(varchar,AD.Createdat,103) as Trans,PV.PatientVisitID,FB.FinalBillID,PV.OrgID,OA.location as CenterName,OA.City as CircleName,            
Convert(varchar,AD.Createdat,103) as Transactiondate,Convert(Varchar,PV.Visitdate,103) as VisitDate,PV.VisitNumber as VisitNumber,FB.BillNumber as BillNumber,             
P.PatientNumber as ExtPatientID,P.Name as PatientName,FB.GrossBillValue as GrossAmount,FB.NetValue as NetAmount,case when CM.isadvanceclient=1 Then FB.NetValue ELSE 0 END,            
--case when CM.isadvanceclient=1 Then 'Prepaid' Else '' End as PaymentName,            
PV.ReferingPhysicianName as RefDocName,            
Case when CM.isadvanceclient=1 and AD.BillStatus!='CANCELLED' Then 'Refund' WHEN CM.isadvanceclient=1 and AD.BillStatus='CANCELLED' Then 'Cancel' when CM.isadvanceclient=1 Then 'PrePaid'         
when AD.BillStatus!='CANCELLED' Then 'Refund' WHEN AD.BillStatus='CANCELLED' Then 'Cancel' Else 'Billing' END as TransactionType,            
CASE WHEN CM.ClientCode='GENERAL' THEN 'GENERAL' ELSE 'CLIENT' END AS DueType,0 AS AdjustmentAmount,            
Case when CM.ClientName='GENERAL' Then '' Else CM.ClientName End as ClientName,            
AD.BillStatus as BillStatus,            
FB.DiscountAmount,FB.DiscountReason,U.Name as DisApprovedBy,'' as Specialization,            
Case when CM.ClientName='GENERAL' Then '' Else CM.ClientName End as SourceName,'' as SalespersonName,Iscash,PDD.DueReason,UU.Name,Convert(Varchar,AD.CreatedAt,103) as RefundDate,cm.IsAdvanceClient
from Patient P (NOLOCK)            
Inner join PatientVisit PV (NOLOCK) ON PV.PatientID=P.PatientID AND PV.OrgID=P.OrgID            
Inner join VisitClientMapping VCM (NOLOCK) ON VCM.VisiTID=PV.PatientVisitID AND VCM.OrgID=PV.OrgID AND Isnull(VCM.IsActive,'Y')='Y'            
Inner join FinalBill FB (NOLOCK) ON FB.FinalBillID=VCM.FinalBillID AND FB.OrgID=VCM.OrgID            
Inner join Billingdetails BD (NOLOCK) ON BD.FinalBillID=FB.FinalBillID AND BD.OrgID=FB.OrgID            
Inner join Amountrefunddetails AD (NOLOCK) ON AD.FinalBillID=BD.FinalBillID and Convert(varchar,AD.Createdat,103)<> Convert(varchar,PV.Createdat,103)--AND AD.BillStatus!='CANCELLED'--AD.BillingDetailsID=BD.BillingDetailsID AND             
Inner join Organization O (NOLOCK) On O.OrgID=PV.OrgID             
Inner join OrganizationAddress OA (NOLOCK) ON OA.OrgID=PV.OrgID AND OA.AddressID=PV.OrgAddressID            
Inner join Clientmaster CM (NOLOCK) ON CM.ClientID=VCM.ClientID AND CM.orgID=VCM.OrgID            
Left join Users U (NOLOCK) ON U.LoginID=FB.DiscountApprovedBy AND U.OrgID=FB.OrgID  AND Isnull(U.LoginID,0)!=0            
left join PatientDueDetails PDD (NOLOCK) ON PDD.VisiTID=VCM.VisitID AND PDD.FinalBillID=VCM.FinalBillID AND PDD.OrgID=VCM.OrgID            
Left join Users UU (NOLOCK) ON UU.LoginID=PDD.DueApprovedBy AND UU.OrgID=PDD.OrgID AND Isnull(UU.LoginID,0)!=0            
where AD.Createdat Between @pFDate AND @pTDate AND BD.OrgID=@pOrgId and Convert(varchar,AD.Createdat,103)<> Convert(varchar,PV.Createdat,103)  AND ISNULL(PV.ReferVisitID,0)=0        
Order by PV.PatientVisitID            
Delete from #fistdata where BillStatus='CANCELLED' and RefundDate=Trans            
            
Insert into @Billdata (PatientVisitID,FinalBillID,CollectedAmount,DiscountAmt,DiscountReason,Due,PaymentName,DisApprovedBy,AmountRefund)            
select Distinct PP.PatientVisitID,PP.FinalBillID,Sum(ARD.OtherCurrencyAmount) as CollectedAmount,P.DiscountAmt,P.DiscountReason,            
Case when P.DueBillNo is Not null  and FB.Due!=0.00 Then (Sum(FB.Due)-(Isnull(Sum(P.OtherCurrencyAmount),0.00) + isnull(Sum(P.DiscountAmt),0.00))) Else Sum(FB.Due) End as Due,            
PT.PaymentName  ,U.Name as DisApprovedBy,Sum(FB.AmountRefund) as AmountRefund            
from #fistdata PP             
Inner join FinalBill FB (NOLOCK) ON FB.VisitID=PP.PatientVisitID AND FB.FinalBillID=PP.FinalBillID and FB.OrgID=PP.OrgID             
left join AmountReceivedDetails ARD (NOLOCK) ON ARD.FinalBillID=FB.FinalBillID AND ARD.OrgID=FB.OrgID AND PP.Transactiondate=Convert(varchar,ARD.Createdat,103)             
--AND Isnull(ARD.ReceiptNO,0)=0            
left join Duepaiddetail P (NOLOCK) ON P.PaidBillNo=FB.FinalBillID AND P.OrgID=FB.OrgID AND PP.Transactiondate=Convert(varchar,P.PaidDate,103)            
left join PaymentType PT (NOLOCK) on PT.PaymentTypeID=ARD.TypeID            
left join Users U (NOLOCK) ON U.Loginid=P.DiscountApprovedBy  AND Isnull(U.LoginID,0)!=0            
where FB.FinalBillID=PP.FinalBillID             
group by PP.PatientVisitID,PP.FinalBillID,P.DiscountAmt,P.DiscountReason,FB.Due,P.OtherCurrencyAmount,P.DiscountAmt,PT.PaymentName,U.Name,P.DueBillNo             
            
Insert into @Billdata1 (PatientVisitID,FinalBillID,CollectedAmount,DiscountAmt,DiscountReason,Due,PaymentName,DisApprovedBy,AmountRefund)            
select Distinct PP.PatientVisitID,PP.FinalBillID,Sum(ARD.OtherCurrencyAmount) as CollectedAmount,P.DiscountAmt,P.DiscountReason,            
Case when P.DueBillNo is Not null and FB.Due!=0.00  Then (Sum(FB.Due)-(Isnull(Sum(P.OtherCurrencyAmount),0.00) + isnull(Sum(P.DiscountAmt),0.00))) Else Sum(FB.Due) End as Due,            
PT.PaymentName  ,U.Name as DisApprovedBy,Sum(FB.AmountRefund) as AmountRefund            
from #fistdata1 PP             
Inner join FinalBill FB (NOLOCK) ON FB.VisitID=PP.PatientVisitID AND FB.FinalBillID=PP.FinalBillID and FB.OrgID=PP.OrgID             
left join AmountReceivedDetails ARD (NOLOCK) ON ARD.FinalBillID=FB.FinalBillID AND ARD.OrgID=FB.OrgID AND PP.Transactiondate<>Convert(varchar,ARD.Createdat,103)             
--AND Isnull(ARD.ReceiptNO,0)=0            
left join Duepaiddetail P (NOLOCK) ON P.PaidBillNo=FB.FinalBillID AND P.OrgID=FB.OrgID AND PP.Transactiondate<>Convert(varchar,P.PaidDate,103)            
left join PaymentType PT (NOLOCK) on PT.PaymentTypeID=ARD.TypeID            
left join Users U (NOLOCK) ON U.Loginid=P.DiscountApprovedBy AND Isnull(U.LoginID,0)!=0            
where FB.FinalBillID=PP.FinalBillID             
group by PP.PatientVisitID,PP.FinalBillID,P.DiscountAmt,P.DiscountReason,FB.Due,P.OtherCurrencyAmount,P.DiscountAmt,PT.PaymentName,U.Name,P.DueBillNo             
Delete from #fistdata where PatientVisitid not in (select Distinct PatientVisitID from @Billdata)            
Delete from #fistdata1 where PatientVisitid not in (select Distinct PatientVisitID from @Billdata1)            
            
Insert into @CashAmount (FinalBillID,Cash,Cheque,Card,DemandDraft,Online,Due,NetAmount,AmountRefund,Discount)            
Select Distinct FinalBillID,Case when PaymentName='Cash' Then Isnull(CollectedAmount,0.00) End as Cash,
Case when PaymentName='Cheque' Then Isnull(CollectedAmount,0.00) End as Cheque,            
Case when PaymentName='Credit/Debit Card' Then Isnull(CollectedAmount,0.00)  when PaymentName='MASTER' Then Isnull(CollectedAmount,0.00)  when PaymentName='Credit Note' Then Isnull(CollectedAmount,0.00)  End as Card,Case when PaymentName='Demand Draft'   
Then Isnull(CollectedAmount,0.00) End as DemandDraft,                   
Case when PaymentName='Online' Then Isnull(CollectedAmount,0.00) End as Online,isnull(Due,0.00) as Due,sum(Isnull(DiscountAmt,0.00)) as NetAmount,            
sum(isnull(AmountRefund,0.00)) as AmountRefund,Sum(Isnull(DiscountAmt,0.00)) as Discount            
From @Billdata Group by FinalBillID,PaymentName,CollectedAmount,Due            
            
Insert into @CashAmount2 (FinalBillID,Cash,Cheque,Card,DemandDraft,Online,Due,NetAmount,AmountRefund,Discount)            
Select Distinct FinalBillID,Case when PaymentName='Cash' Then Isnull(CollectedAmount,0.00) End as Cash,Case when PaymentName='Cheque' Then Isnull(CollectedAmount,0.00) End as Cheque,            
Case when PaymentName='Credit/Debit Card' or PaymentName='MASTER' or PaymentName='Credit Note' Then Isnull(CollectedAmount,0.00) End as Card,Case when PaymentName='Demand Draft' Then Isnull(CollectedAmount,0.00) End as DemandDraft,                    
Case when PaymentName='Online' Then Isnull(CollectedAmount,0.00) End as Online,isnull(Due,0.00) as Due,sum(Isnull(DiscountAmt,0.00)) as NetAmount,            
sum(isnull(AmountRefund,0.00)) as AmountRefund,Sum(Isnull(DiscountAmt,0.00)) as Discount            
From @Billdata1 Group by FinalBillID,PaymentName,CollectedAmount,Due            
Insert into @CollectedAmount (FinalBillID,CollectedAmount)            
Select Distinct FinalBillID,sum(CollectedAmount) from @Billdata group by FinalBillID            
            
Insert into @CollectedAmount2 (FinalBillID,CollectedAmount)            
Select Distinct FinalBillID,sum(CollectedAmount) from @Billdata1 group by FinalBillID            
Insert into @CashAmount1 (FinalBillID,Cash,Cheque,Card,DemandDraft,Online,Due,NetAmount,AmountRefund,Discount)            
select Distinct FinalBillID, Sum(isnull(Cash,0)) as Cash, Sum(isnull(Cheque,0)) as Cheque, Sum(isnull(Card,0)) as Card, Sum(isnull(DemandDraft,0)) as DemandDraft,            
Sum(isnull(Online,0)) as Online,isnull(Due,0.00),Sum(isnull(NetAmount,0.00)) as NetAmount,Sum(isnull(AmountRefund,0.00)) as AmountRefund,Sum(isnull(Discount,0.00)) as Discount             
from @CashAmount group by FinalBillID,Due            
            
Insert into @CashAmount12 (FinalBillID,Cash,Cheque,Card,DemandDraft,Online,Due,NetAmount,AmountRefund,Discount)            
select Distinct FinalBillID, Sum(isnull(Cash,0)) as Cash, Sum(isnull(Cheque,0)) as Cheque, Sum(isnull(Card,0)) as Card, Sum(isnull(DemandDraft,0)) as DemandDraft,            
Sum(isnull(Online,0)) as Online,isnull(Due,0.00),Sum(isnull(NetAmount,0.00)) as NetAmount,Sum(isnull(AmountRefund,0.00)) as AmountRefund,Sum(isnull(Discount,0.00)) as Discount             
from @CashAmount2 group by FinalBillID,Due            
update FD set FD.Cash=isnull(DF.Cash,0.00),FD.Cheque=isnull(DF.Cheque,0.00),FD.Card=isnull(DF.Card,0.00),FD.DemandDraft=isnull(DF.DemandDraft,0.00),             
FD.Online=isnull(DF.Online,0.00),FD.Due=isnull(DF.Due,0.00),FD.NetAmount=(FD.NetAmount-isnull(DF.Discount,0.00)),FD.AmountRefund=isnull(DF.AmountRefund,0.00),FD.Discount=(FD.Discount+ isnull(DF.Discount,0.00))            
FROM #fistdata FD            
Inner join @CashAmount1 DF ON DF.FinalBillID=FD.FinalBillID            
            
update FD set FD.Cash=isnull(DF.Cash,0.00),FD.Cheque=isnull(DF.Cheque,0.00),FD.Card=isnull(DF.Card,0.00),FD.DemandDraft=isnull(DF.DemandDraft,0.00),             
FD.Online=isnull(DF.Online,0.00),FD.Due=isnull(DF.Due,0.00),FD.NetAmount=(FD.NetAmount-isnull(DF.Discount,0.00)),FD.AmountRefund=isnull(DF.AmountRefund,0.00),FD.Discount=(FD.Discount+ isnull(DF.Discount,0.00))            
FROM #fistdata1 FD            
Inner join @CashAmount12 DF ON DF.FinalBillID=FD.FinalBillID            
update FD set FD.Collection=DF.CollectedAmount from #fistdata FD            
Inner join @CollectedAmount DF ON DF.FinalBillID=FD.FinalBillID            
            
update FD set FD.Collection=DF.CollectedAmount from #fistdata1 FD            
Inner join @CollectedAmount2 DF ON DF.FinalBillID=FD.FinalBillID            
Update FD set FD.DiscountComment=(Isnull(FD.DiscountComment,'') + Isnull(BD.DiscountReason,'')),            
FD.DisApprovedBy=(Isnull(FD.DisApprovedBy,'') +' ' + isnull(BD.DisApprovedBy,''))            
from #fistdata FD --FD.Collection=BD.CollectedAmount,            
Inner join @Billdata BD ON BD.PatientVisitID=FD.PatientVisitID AND BD.FinalBillID=FD.FinalBillID            
Update FD set FD.DiscountComment=(Isnull(FD.DiscountComment,'') + Isnull(BD.DiscountReason,'')),            
FD.DisApprovedBy=(Isnull(FD.DisApprovedBy,'') +' ' + isnull(BD.DisApprovedBy,''))            
from #fistdata1 FD --FD.Collection=BD.CollectedAmount,            
Inner join @Billdata1 BD ON BD.PatientVisitID=FD.PatientVisitID AND BD.FinalBillID=FD.FinalBillID            
            
--Insert into #fistdata (Sno,Trans,PatientVisitID,TD.FinalBillID,TD.OrgID,CenterName,CircleName, Transactiondate,VisitDate,VisitNumber,BillNumber,            
--ExtPatientID,PatientName,GrossAmount,NetAmount,Prepaid,RefDocName,TransactionType,DueType,AdjustmentAmount,ClientName,BillStatus,Discount,            
--DiscountComment,DisApprovedBy,Specialization,SourceName,SalespersonName,Cash,Cheque,Card,DemandDraft,Online,Due,AmountRefund,            
--Collection)            
--select Distinct Sno,Convert(varchar,ADS.Createdat,103) as Trans,PatientVisitID,TD.FinalBillID,TD.OrgID,CenterName,CircleName,            
--Convert(varchar,ADS.Createdat,103) as Transactiondate,VisitDate,VisitNumber,BillNumber,ExtPatientID,            
--PatientName,GrossAmount,NetAmount,Prepaid,RefDocName,'Refund' AS TransactionType,DueType,AdjustmentAmount,ClientName,isnull(TD.BillStatus,'') as BillStatus,Discount,            
--isnull(DiscountComment,'') as DiscountComment,Isnull(DisApprovedBy,'') as DisApprovedBy,Isnull(Specialization,'') as Specialization,            
--isnull(SourceName,'') as SourceName,isnull(SalespersonName,'') as SalespersonName,Cash,Cheque,Card,DemandDraft,Online,Due,            
--AmountRefund,TD.Collection            
--from #fistdata TD             
--Inner join Amountrefunddetails ADS (NOLOCK) ON ADS.FinalBillID=TD.FinalBillID             
--AND Convert(varchar,ADS.Createdat,103)<>Convert(varchar,TD.VisitDate,103)            
--WHERE ADS.BillStatus!='CANCELLED'            
Insert into #fistdata            
select * from #fistdata1            
update #fistdata set Due=GrossAmount where Iscash='N'            
Update #fistdata set GrossAmount= -GrossAmount, NetAmount= -NetAmount,DemandDraft=-DemandDraft,Discount=-Discount,Cash=-Cash,Card=-Card,Cheque=-Cheque,Online=-Online,Collection=-Collection,Due=-Due where TransactionType='Refund'            
Update #fistdata set Discount=0.00,Cash=0.00,Cheque=0.00,Collection=0.00,Card=0.00,Due=0.00,DemandDraft=0.00,Online=0.00 where TransactionType='Prepaid'            
Update #fistdata set GrossAmount= -GrossAmount, NetAmount= -NetAmount,DemandDraft=-DemandDraft,Discount=-Discount,Cash=-Cash,Card=-Card,Cheque=-Cheque,        
Online=-Online,Collection=-Collection,Due=-Due,Prepaid=-Prepaid where TransactionType='Cancel'            
update #fistdata set Due=0.00 where Iscash='N' and IsAdvanceClient=1

            
Update FTT Set FTT.CollectedUser=U.Name from #fistdata FTT--selva            
Inner join FinalBill BDD (NOLOCK) ON BDD.FinalBillid=FTT.FinalBillID AND BDD.OrgID=FTT.OrgID            
Inner join Users U (NOLOCK) ON U.LoginID=BDD.CreatedBy AND BDD.OrgID=U.OrgID            
--WHERE FTT.TransactionType in ('Billing','PrePaid','Refund','Cancel')             
            
Update FTT Set FTT.CollectedUser= (CASE WHEN FTT.Transactiondate!=FTT.VisitDate THEN U.Name END)from #fistdata FTT--selva            
Inner join Amountrefunddetails BDD (NOLOCK) ON BDD.FinalBillid=FTT.FinalBillID AND BDD.OrgID=FTT.OrgID            
Inner join Users U (NOLOCK) ON U.LoginID=BDD.CreatedBy AND BDD.OrgID=U.OrgID            
WHERE FTT.TransactionType in ('Refund','Cancel')            
            
--IF EXISTS (select 1 from #fistdata where TransactionType='Refund')            
--BEGIN            
--Update FTT Set FTT.CollectedUser=U.Name from #fistdata FTT--selva            
--Inner join Amountrefunddetails BDD (NOLOCK) ON BDD.FinalBillid=FTT.FinalBillID AND BDD.OrgID=FTT.OrgID            
--Inner join Users U (NOLOCK) ON U.LoginID=BDD.CreatedBy AND BDD.OrgID=U.OrgID            
--END            
 Insert Into #fistdata (Sno,Trans,PatientName,GrossAmount,Discount,NetAmount,Due,Cash,Cheque,Card,Prepaid,Online,DemandDraft,AdjustmentAmount,Collection)            
 select 2 as Sno,Trans,'TOTAL' as PatientName,Sum(GrossAmount) as GrossAmount,Sum(isnull(Discount,0.00)) as Discount,Sum(isnull(NetAmount,0.00)) as NetAmount,            
 Sum(isnull(Due,0.00)) as Due, Sum(isnull(Cash,0.00)) as Cash, Sum(isnull(Cheque,0.00)) as Cheque,Sum(isnull(Card,0.00)) as Card,            
 Sum(isnull(Prepaid,0.00)) as Prepaid,Sum(isnull(Online,0.00)) as Online,Sum(isnull(DemandDraft,0.00)) as DemandDraft,Sum(isnull(AdjustmentAmount,0.00)) as AdjustmentAmount, Sum(isnull(Collection,0.00)) as Collection from #fistdata            
 WHERE OrgID=@pOrgId Group by Trans            
            
            
 --------------------------------------------------------------------------------------------------------            
 --------------------------------------------------------------------------------------------------------            
Create Table #seconddata (Sno int,Trans Nvarchar(20),PatientVisitID Bigint,FinalBillID Bigint,OrgID Int,CenterName Nvarchar(255),CircleName Nvarchar(255),Transactiondate Varchar(10),            
VisitDate Varchar(10),VisitNumber nvarchar(50),BillNumber Nvarchar(50),ExtPatientID Nvarchar(50),PatientName Nvarchar(255),GrossAmount Decimal(18,2),NetAmount Decimal(18,2),            
Discount Decimal(18,2),Due Decimal(18,2),Cash decimal(18,2),Cheque decimal(18,2), Card decimal(18,2),Prepaid decimal(18,2),Online decimal(18,2),DemandDraft Decimal(18,2),            
CollectionDetails Decimal(18,2),AdjustmentAmount Decimal(18,2),Collection Decimal(18,2),DiscountComment Nvarchar(255),            
RefDocName nvarchar(255),DisApprovedBy Nvarchar(255),TransactionType Nvarchar(50),DueType Nvarchar(50),ClientName nvarchar(255),            
ClientID Int,ReceiptNo int,Specialization nvarchar(255),SourceName nvarchar(255),SalespersonName nvarchar(255),CollectedUser Nvarchar(250),DueComment Nvarchar(255),DueApprovedBy Nvarchar(255))             
            
Declare @CashsAmount Table (ClientID Bigint, Cash Decimal(18,2),Cheque Decimal(18,2),Card Decimal(18,2), DemandDraft Decimal(18,2), Online Decimal(18,2),Trans nvarchar(10),            
ReceiptNo int)            
            
Declare @CashsAmount1 Table (ClientID Bigint, Cash Decimal(18,2),Cheque Decimal(18,2),Card Decimal(18,2), DemandDraft Decimal(18,2), Online Decimal(18,2),Trans nvarchar(10),            
ReceiptNo int)            
Declare @seconddata Table (ClientID Int,PaymentName Nvarchar(50),Transactiondate Varchar(20),ReceiptNo Int,PaidCurrencyAmount Decimal(18,3))            
            
Insert into #seconddata (Sno,Trans,OrgID,CenterName,CircleName,Transactiondate,VisitDate,CollectionDetails,Collection,ClientName,TransactionType,DueType,ClientID,ReceiptNo,BillNumber            
,Specialization,SourceName,SalespersonName,CollectedUser)            
select Distinct 1 as Sno,Convert(varchar,CH.Createdat,103) as Trans,CH.OrgID,OA.location as CenterName,OA.City as CircleName,Convert(varchar,CH.Createdat,103) as Transactiondate,Convert(Varchar,CH.Createdat,103) as VisitDate,            
sum(CH.PaidCurrencyAmount) as CollectionDetails,--PT.PaymentName as PaymentName,            
sum(CH.PaidCurrencyAmount) AS Collection,CM.ClientName as ClientName,'Advance' as TransactionType,'CLIENT' as DueType,CM.ClientID,CH.ReceiptNo,CH.ReceiptNo as BillNumber,'' as Specialization,            
Case when CM.ClientName='GENERAL' Then '' Else CM.ClientName End as SourceName,'' as SalespersonName,U.Name as CollectedUser            
from CollectionsHistory CH (NOLOCK)            
--Inner join PaymentType PT ON PT.PaymentTypeID=CH.PaymentTypeID            
Inner join Clientmaster CM (NOLOCK) ON CM.ClientID=CH.Identificationid AND CM.OrgID=CH.OrgID            
Inner join OrganizationAddress OA (NOLOCK) On OA.OrgID=CM.OrgID AND OA.AddressID=CM.OrgAddressID            
Inner join Users U (NOLOCK) On U.Loginid=CH.Createdby AND U.OrgiD=CH.OrgID            
where CH.OrgID=@pOrgId AND CH.Createdat between @pFDate AND @pTDate            
Group By CH.OrgID,OA.location,OA.City,CM.ClientName,CH.Createdat,CM.ClientID,CH.PaidCurrencyAmount,CH.ReceiptNo,U.Name            
            
Insert into @seconddata (ClientID,PaymentName,Transactiondate,ReceiptNo,PaidCurrencyAmount)            
select TT.ClientID,PH.PaymentName,TT.Transactiondate,TT.ReceiptNo,CJ.PaidCurrencyAmount from  #seconddata TT             
Inner join CollectionsHistory CJ (NOLOCK) ON CJ.Identificationid=TT.ClientID AND CJ.ReceiptNo=TT.ReceiptNo            
Inner join PaymentType PH (NOLOCK) ON PH.PaymentTypeID=CJ.PaymentTypeID            
            
Insert into @CashsAmount (ClientID,Cash,Cheque,Card,DemandDraft,Online,Trans,ReceiptNo)            
Select Distinct ClientID,Case when PaymentName='Cash' Then Isnull(PaidCurrencyAmount,0.00) End as Cash,Case when PaymentName='Cheque' Then Isnull(PaidCurrencyAmount,0.00) End as Cheque,            
Case when PaymentName='Credit/Debit Card' Then Isnull(PaidCurrencyAmount,0.00) End as Card,Case when PaymentName='Demand Draft' Then Isnull(PaidCurrencyAmount,0.00) End as DemandDraft,            
Case when PaymentName='Online' Then Isnull(PaidCurrencyAmount,0.00) End as Online,Transactiondate as Trans,ReceiptNo            
From @seconddata Group by ClientID,PaymentName,PaidCurrencyAmount,Transactiondate,ReceiptNo            
            
Insert into @CashsAmount1 (ClientID,Cash,Cheque,Card,DemandDraft,Online,Trans,ReceiptNo)            
select Distinct ClientID, Sum(isnull(Cash,0)) as Cash, Sum(isnull(Cheque,0)) as Cheque, Sum(isnull(Card,0)) as Card, Sum(isnull(DemandDraft,0)) as DemandDraft,            
Sum(isnull(Online,0)) as Online,Trans,ReceiptNo            
from @CashsAmount group by ClientID,Trans,ReceiptNo            
            
update FD set FD.Cash=isnull(DF.Cash,0.00),FD.Cheque=isnull(DF.Cheque,0.00),FD.Card=isnull(DF.Card,0.00),FD.DemandDraft=isnull(DF.DemandDraft,0.00),             
FD.Online=isnull(DF.Online,0.00)            
FROM #seconddata FD            
Inner join @CashsAmount1 DF ON DF.ClientID=FD.ClientID AND DF.Trans=FD.Trans AND DF.ReceiptNo=FD.ReceiptNo            
            
 Insert Into #seconddata (Sno,Trans,PatientName,GrossAmount,Discount,NetAmount,Due,Cash,Cheque,Card,Prepaid,Online,DemandDraft,AdjustmentAmount,Collection)            
 select 2 as Sno,Trans,'TOTAL' as PatientName,Sum(GrossAmount) as GrossAmount,Sum(isnull(Discount,0.00)) as Discount,Sum(isnull(NetAmount,0.00)) as NetAmount,            
 Sum(isnull(Due,0.00)) as Due, Sum(isnull(Cash,0.00)) as Cash, Sum(isnull(Cheque,0.00)) as Cheque,Sum(isnull(Card,0.00)) as Card,            
 Sum(isnull(Prepaid,0.00)) as Prepaid,Sum(isnull(Online,0.00)) as Online,Sum(isnull(DemandDraft,0.00)) as DemandDraft,Sum(isnull(AdjustmentAmount,0.00)) as AdjustmentAmount,             
 Sum(isnull(Collection,0.00)) as Collection from #seconddata            
 WHERE OrgID=@pOrgId Group by Trans            
             
-------------------------------------------------------------------------------------------------            
-------------------------------------------------------------------------------------------------            
            
Declare @CollecteddueAmount Table (FinalbillID Bigint, CollectedAmount Decimal(18,2))            
Create Table #thirddata (Sno int,Trans Nvarchar(20),PatientVisitID Bigint,FinalBillID Bigint,OrgID Int,CenterName Nvarchar(255),CircleName Nvarchar(255),Transactiondate Varchar(10),            
VisitDate Varchar(10),VisitNumber nvarchar(50),ExtPatientID Nvarchar(50),BillNumber Nvarchar(50),PatientName Nvarchar(255),GrossAmount Decimal(18,2),NetAmount Decimal(18,2),            
Discount Decimal(18,2),Due Decimal(18,2),Cash decimal(18,2),Cheque decimal(18,2), Card decimal(18,2),Prepaid decimal(18,2),Online decimal(18,2),DemandDraft Decimal(18,2),            
AdjustmentAmount Decimal(18,2),Collection Decimal(18,2),DiscountComment Nvarchar(255),            
RefDocName nvarchar(255),DisApprovedBy Nvarchar(255),TransactionType Nvarchar(50),DueType Nvarchar(50),ClientName nvarchar(255),            
ReceiptNo int,Specialization nvarchar(255),SourceName nvarchar(255),SalespersonName nvarchar(255),CollectedUser Nvarchar(250),DueComment Nvarchar(255),DueApprovedBy Nvarchar(255))            
Declare @CashdueAmount Table (FinalbillID Bigint, Cash Decimal(18,2),Cheque Decimal(18,2),Card Decimal(18,2), DemandDraft Decimal(18,2), Online Decimal(18,2),Due Decimal(18,2),            
NetAmount Decimal(18,2),AmountRefund Decimal(18,2),Discount Decimal(18,2),CollectedUser Nvarchar(250))            
Declare @CashdueAmount1 Table (FinalbillID Bigint, Cash Decimal(18,2),Cheque Decimal(18,2),Card Decimal(18,2), DemandDraft Decimal(18,2), Online Decimal(18,2),Due Decimal(18,2),            
NetAmount Decimal(18,2),AmountRefund Decimal(18,2),Discount Decimal(18,2),CollectedUser Nvarchar(250))            
            
Insert into #thirddata (Sno,Trans,PatientVisitID,FinalBillID,OrgID,CenterName,CircleName,Transactiondate,VisitDate,VisitNumber,ExtPatientID,BillNumber,PatientName,                    
Collection,RefDocName,ClientName,TransactionType,DueType,ReceiptNo,Specialization,SourceName,SalespersonName,DueComment,DueApprovedBy)            
select Distinct 1 as Sno,Convert(varchar,DP.PaidDate,103) as Trans,PV.PatientVisitID,VCM.FinalBillID,PV.OrgID,OA.location as CenterName,OA.City as CircleName,            
Convert(varchar,DP.PaidDate,103) as Transactiondate,Convert(Varchar,PV.Createdat,103) as VisitDate,PV.VisitNumber as VisitNumber, P.PatientNumber as ExtPatientID,PDD.BillNo,P.Name as PatientName,                    
DP.OtherCurrencyAmount as Collection,PV.ReferingPhysicianName as RefDocName,CM.ClientName as ClientName,'Pending Collection' as TransactionType,            
CASE WHEN CM.ClientCode='GENERAL' THEN 'GENERAL' ELSE 'CLIENT' END AS DueType,DP.ReceiptNo,'' as Specialization,            
Case when CM.ClientName='GENERAL' Then '' Else CM.ClientName End as SourceName,'' as SalespersonName,PDD.DueReason,UU.Name            
From Duepaiddetail DP (NOLOCK)             
Inner Join AmountReceivedDetails ARD (NOLOCK) ON ARD.FinalBillID=DP.DueBillNo AND ARD.OrgID=DP.OrgID And ARD.ReceiptNO!=0             
left join AmountRefundDetails ACD (NOLOCK) ON ACD.FinalBillID=ARD.FinalBillID AND ACD.OrgID=ARD.OrgID            
Inner join VisitClientMapping VCM (NOLOCK) ON VCM.FinalBillID=ARD.FinalBillID AND VCM.OrgID=ARD.OrgID AND Isnull(VCM.IsActive,'Y')='Y'            
Inner Join ClientMaster CM (NOLOCK) ON CM.ClientID=VCM.ClientID AND CM.OrgID=VCM.OrgID            
Inner join PatientVisit PV (NOLOCK) ON PV.PatientVisitID=VCM.VisitID AND PV.OrgID=VCM.OrgID            
Inner join Patient P (NOLOCK) ON P.PatientID=PV.PatientID AND P.OrgID=PV.OrgID            
Inner join OrganizationAddress OA (NOLOCK) ON OA.OrgID=PV.OrgID AND OA.AddressID=PV.OrgAddressID            
Inner join Organization O (NOLOCK) On O.OrgID=PV.OrgID             
left join PatientDueDetails PDD (NOLOCK) ON PDD.VisiTID=VCM.VisitID AND PDD.FinalBillID=VCM.FinalBillID AND PDD.OrgID=VCM.OrgID            
Left join Users UU (NOLOCK) ON UU.LoginID=PDD.DueApprovedBy AND UU.OrgID=PDD.OrgID AND Isnull(UU.LoginID,0)!=0            
Where DP.OrgID=@pOrgId AND DP.PaidDate Between @pFDate AND @pTDate --AND ACD.FinalBillID is NULL     
and CONVERT(VARCHAR, DP.CreatedAt,103)!= CONVERT(VARCHAR,PV.CreatedAt,103)AND ISNULL(PV.ReferVisitID,0)=0 --And PV.PatientVisitID Not in (select Distinct PatientVisitID From #fistdata)                      
                    
Declare @thirddata Table (FinalBillID Bigint,ReceiptNO Decimal(18,2),Collection Decimal(18,2),PaymentName Nvarchar(50),CollectedUser Nvarchar(250))            
Insert into @thirddata (FinalBillID,ReceiptNO,Collection,PaymentName, CollectedUser)            
select TR.FinalBillID,TR.ReceiptNO,ARS.OtherCurrencyAmount as Collection,PY.PaymentName,U.Name from #thirddata TR             
Inner join AmountReceivedDetails ARS (NOLOCK) ON ARS.FinalBillID=TR.FinalBillID AND ARS.OrgID=TR.OrgID            
Inner join PaymentType PY (NOLOCK) ON PY.PaymentTypeID=ARS.TypeID            
Left join Users U (NOLOCK) On U.LoginID=ARS.Createdby            
WHERE TR.ReceiptNO=ARS.ReceiptNO AND TR.OrgID=ARS.OrgID            
            
--Update SS Set SS.Cash= Case when TF.PaymentName='Cash' Then TF.Collection END,SS.Cheque= CASE when TF.PaymentName='Cheque' Then TF.Collection END,             
--SS.Card= CASE when TF.PaymentName='Credit/Debit Card' Then TF.Collection END,SS.Prepaid= CASE when TF.PaymentName='Prepaid' Then TF.Collection END,             
--SS.Online= CASE when TF.PaymentName='Online' Then TF.Collection END,SS.DemandDraft= CASE when TF.PaymentName='DemandDraft' Then TF.Collection END            
--FROM #thirddata SS            
--Inner join @thirddata TF On TF.FinalBillID=SS.FinalBillID AND TF.ReceiptNO=SS.ReceiptNO            
            
Insert into @CashdueAmount (FinalBillID,Cash,Cheque,Card,DemandDraft,Online,CollectedUser)            
Select Distinct FinalBillID,Case when PaymentName='Cash' Then Isnull(Collection,0.00) End as Cash,            
Case when PaymentName='Cheque' Then Isnull(Collection,0.00) End as Cheque,            
Case when PaymentName='Credit/Debit Card' Then Isnull(Collection,0.00) End as Card,            
Case when PaymentName='Demand Draft' Then Isnull(Collection,0.00) End as DemandDraft,            
Case when PaymentName='Online' Then Isnull(Collection,0.00) End as Online,CollectedUser            
From @thirddata-- Group by FinalBillID,PaymentName,Collection            
            
Insert into @CollecteddueAmount (FinalBillID,CollectedAmount)            
Select Distinct FinalBillID,sum(Collection) from @thirddata group by FinalBillID            
            
Insert into @CashdueAmount1 (FinalBillID,Cash,Cheque,Card,DemandDraft,Online,CollectedUser)            
select Distinct FinalBillID, Sum(isnull(Cash,0)) as Cash, Sum(isnull(Cheque,0)) as Cheque, Sum(isnull(Card,0)) as Card, Sum(isnull(DemandDraft,0)) as DemandDraft,            
Sum(isnull(Online,0)) as Online,CollectedUser            
from @CashdueAmount group by FinalBillID,CollectedUser            
            
update FD set FD.Cash=isnull(DF.Cash,0.00),FD.Cheque=isnull(DF.Cheque,0.00),FD.Card=isnull(DF.Card,0.00),FD.DemandDraft=isnull(DF.DemandDraft,0.00),             
FD.Online=isnull(DF.Online,0.00),FD.CollectedUser=DF.CollectedUser            
FROM #thirddata FD            
Inner join @CashdueAmount1 DF ON DF.FinalBillID=FD.FinalBillID            
            
update FD set FD.Collection=DF.CollectedAmount from #thirddata FD            
Inner join @CollecteddueAmount DF ON DF.FinalBillID=FD.FinalBillID            
            
Delete from #thirddata where VisitNumber in (            
Select T.VisitNumber from #thirddata T            
Inner join #fistdata F On F.VisitNumber=T.VisitNumber             
WHERE F.VisitNumber=T.VisitNumber AND F.Transactiondate=T.Transactiondate)            
 Insert Into #thirddata (Sno,Trans,PatientName,GrossAmount,Discount,NetAmount,Due,Cash,Cheque,Card,Prepaid,Online,DemandDraft,AdjustmentAmount,Collection)            
 select 2 as Sno,Trans,'TOTAL' as PatientName,Sum(isnull(GrossAmount,0.00)) as GrossAmount,Sum(isnull(Discount,0.00)) as Discount,            
 Sum(isnull(NetAmount,0.00)) as NetAmount, Sum(isnull(Due,0.00)) as Due, Sum(isnull(Cash,0.00)) as Cash, Sum(isnull(Cheque,0.00)) as Cheque,            
 Sum(isnull(Card,0.00)) as Card, Sum(isnull(Prepaid,0.00)) as Prepaid,Sum(isnull(Online,0.00)) as Online,Sum(isnull(DemandDraft,0.00)) as DemandDraft,            
 Sum(isnull(AdjustmentAmount,0.00)) as AdjustmentAmount, Sum(isnull(Collection,0.00)) as Collection from #thirddata            
 WHERE OrgID=@pOrgId Group by Trans            
            
--------------------------------------------------------------------------------------            
--------------------------------------------------------------------------------------        
            
Create Table #fourddata (Sno int,Trans Nvarchar(20),PatientVisitID Bigint,FinalBillID Bigint,OrgID Int,CenterName Nvarchar(255),CircleName Nvarchar(255),Transactiondate Varchar(10),            
VisitDate Varchar(10),VisitNumber nvarchar(50),BillNumber Nvarchar(50),ExtPatientID Nvarchar(50),PatientName Nvarchar(255),GrossAmount Decimal(18,2),NetAmount Decimal(18,2),            
Discount Decimal(18,2),Due Decimal(18,2),Cash decimal(18,2),Cheque decimal(18,2), Card decimal(18,2),Prepaid decimal(18,2),Online decimal(18,2),DemandDraft Decimal(18,2),            
AdjustmentAmount Decimal(18,2),Collection Decimal(18,2),DiscountComment Nvarchar(255),            
RefDocName nvarchar(255),DisApprovedBy Nvarchar(255),TransactionType Nvarchar(50),DueType Nvarchar(50),InvoiceID Bigint,             
ReceiptNo nvarchar(50),Specialization nvarchar(255),SourceName nvarchar(255),SalespersonName nvarchar(255),CollectedUser Nvarchar(250),DueComment Nvarchar(255),DueApprovedBy Nvarchar(255))            
            
Declare @fourData Table (InvoiceID bigint,ReceiptNo nvarchar(50),PaymentName nvarchar(50),Collection decimal(18,2),CollectedUser Nvarchar(250))            
            
Insert into #fourddata (Sno,Trans,OrgID,CenterName,CircleName,Transactiondate,VisitDate,Collection,ReceiptNo,AdjustmentAmount,TransactionType,DueType,InvoiceID,Specialization,SourceName,SalespersonName,BillNumber,CollectedUser)            
select 1 as Sno,Convert(varchar,IR.Createdat,103) as Trans,IR.OrgID,OA.location as CenterName,OA.City as CircleName,Convert(varchar,IR.Createdat,103) as Transactiondate,Convert(Varchar,I.Createdat,103) as VisitDate,            
Sum(IR.ReceivedAmount) as Collection,IR.ReceiptNumber as ReceiptNo,            
isnull(sum(IR.TDSAmount),0.00)+isnull(sum(IR.DiscountAmount),0.00)+isnull(sum(IR.CreditAmount),0.00)+isnull(sum(IR.WriteOffAmt),0.00) as AdjustmentAmount,            
'Pending Collection' as TransactionType,'CLIENT' as DueType,IR.InvoiceID,'' as Specialization,            
'' as SourceName,'' as SalespersonName,I.InvoiceNumber as BillNumber,U.Name            
FROM InvoiceReceipts IR (NOLOCK)             
INNER join Invoice I (NOLOCK) On IR.InvoiceID=I.InvoiceID AND IR.OrgID=I.OrgID AND IR.OrgAddID=I.OrgAddID            
Inner join OrganizationAddress OA (NOLOCK) ON OA.OrgID=I.OrgID AND OA.AddressID=I.OrgAddID            
Inner join Organization O (NOLOCK) On O.OrgID=IR.OrgID             
inner join Users U (NOLOCK) On U.LoginID=IR.Createdby             
where IR.OrgID=@pOrgId AND IR.Createdat between @pFDate AND @pTDate            
group by IR.Createdat,IR.OrgID,            
OA.location,OA.City,I.Createdat,IR.ReceiptNumber,IR.InvoiceID,I.InvoiceNumber,U.Name            
            
Insert into @fourData (InvoiceID,ReceiptNo,PaymentName,Collection,CollectedUser)            
Select FT.InvoiceID,FT.ReceiptNo,PT.PaymentName,IT.ReceivedAmount,U.Name FROM #fourddata FT             
Inner join InvoiceReceipts IT (NOLOCK) ON IT.InvoiceID=FT.InvoiceID AND IT.ReceiptNumber=FT.ReceiptNo            
Inner join PaymentType PT (NOLOCK) ON PT.PaymentTypeID=IT.PaymentTypeID            
inner join Users U (NOLOCK) On U.LoginID=IT.Createdby             
            
update DR SET DR.SourceName=CM.ClientName FROM #fourddata DR            
inner join Invoicedetails ID (NOLOCK) ON ID.InvoiceID=DR.InvoiceID             
Inner join Clientmaster CM (NOLOCK) ON CM.ClientID=ID.ClientID AND CM.OrgID=@pOrgId            
            
Update ES SET ES.Cash= Case when FR.PaymentName='Cash' Then FR.Collection END,ES.Cheque= CASE when FR.PaymentName='Cheque' Then FR.Collection END,             
ES.Card= CASE when FR.PaymentName='Credit/Debit Card' Then FR.Collection END,ES.Prepaid= CASE when FR.PaymentName='Prepaid' Then FR.Collection END,             
ES.Online= CASE when FR.PaymentName='Online' Then FR.Collection END,ES.DemandDraft= CASE when FR.PaymentName='DemandDraft' Then FR.Collection END,            
ES.CollectedUser=FR.CollectedUser             
FROM #fourddata ES            Inner join @fourData FR ON FR.InvoiceID=ES.InvoiceID AND FR.ReceiptNo=ES.ReceiptNo            
            
            
 Insert Into #fourddata (Sno,Trans,PatientName,GrossAmount,Discount,NetAmount,Due,Cash,Cheque,Card,Prepaid,Online,DemandDraft,AdjustmentAmount,Collection)            
 select 2 as Sno,Trans,'TOTAL' as PatientName,Sum(isnull(GrossAmount,0.00)) as GrossAmount,Sum(isnull(Discount,0.00)) as Discount,Sum(isnull(NetAmount,0.00)) as NetAmount,            
 Sum(isnull(Due,0.00)) as Due, Sum(isnull(Cash,0.00)) as Cash, Sum(isnull(Cheque,0.00)) as Cheque,Sum(isnull(Card,0.00)) as Card,            
 Sum(isnull(Prepaid,0.00)) as Prepaid,Sum(isnull(Online,0.00)) as Online,Sum(isnull(DemandDraft,0.00)) as DemandDraft,Sum(isnull(AdjustmentAmount,0.00)) as AdjustmentAmount,             
 Sum(isnull(Collection,0.00)) as Collection from #fourddata            
 WHERE OrgID=@pOrgId Group by Trans            
            
            
-------------------------------------------------------------------------------            
-------------------------------------------------------------------------------            
Create Table #Totaldata (Sno int,Trans Nvarchar(20),PatientVisitID Bigint,FinalBillID Bigint,OrgID Int,CenterName Nvarchar(255),CircleName Nvarchar(255),Transactiondate Varchar(10),            
VisitDate Varchar(10),VisitNumber nvarchar(50),BillNumber Nvarchar(50),ExtPatientID Nvarchar(50),PatientName Nvarchar(255),GrossAmount Decimal(18,2),NetAmount Decimal(18,2),            
Discount Decimal(18,2),Due Decimal(18,2),Cash decimal(18,2),Cheque decimal(18,2), Card decimal(18,2),Prepaid decimal(18,2),Online decimal(18,2),DemandDraft decimal(18,2),            
AdjustmentAmount Decimal(18,2),Collection Decimal(18,2),DiscountComment Nvarchar(255),        
RefDocName nvarchar(255),Specialization nvarchar(255),SourceName nvarchar(255),SalespersonName nvarchar(255),DisApprovedBy Nvarchar(255),            
TransactionType Nvarchar(50),DueType Nvarchar(50),DueComment Nvarchar(255),DueApprovedBy Nvarchar(255))            
Create Table #Totaldata1 (Sno int,Trans Nvarchar(20),PatientVisitID Bigint,FinalBillID Bigint,OrgID Int,CenterName Nvarchar(255),CircleName Nvarchar(255),Transactiondate Varchar(10),            
VisitDate Varchar(10),VisitNumber nvarchar(50),BillNumber Nvarchar(50),ExtPatientID Nvarchar(50),PatientName Nvarchar(255),GrossAmount Decimal(18,2),NetAmount Decimal(18,2),            
Discount Decimal(18,2),Due Decimal(18,2),Cash decimal(18,2),Cheque decimal(18,2), Card decimal(18,2),Prepaid decimal(18,2),Online decimal(18,2),DemandDraft decimal(18,2),            
AdjustmentAmount Decimal(18,2),Collection Decimal(18,2),DiscountComment Nvarchar(255),            
RefDocName nvarchar(255),Specialization nvarchar(255),SourceName nvarchar(255),SalespersonName nvarchar(255),DisApprovedBy Nvarchar(255),            
TransactionType Nvarchar(50),DueType Nvarchar(50),DueComment Nvarchar(255),DueApprovedBy Nvarchar(255))            
            
INSERT INTO #Totaldata (Sno,Trans,PatientName,GrossAmount,Discount,NetAmount,Due,Cash,Cheque,Card,Prepaid,Online,DemandDraft,AdjustmentAmount,Collection)            
select 3 as Sno,Trans,'GROSS TOTAL' as PatientName,Sum(isnull(GrossAmount,0.00)) as GrossAmount,Sum(isnull(Discount,0.00)) as Discount,            
Sum(isnull(NetAmount,0.00)) as NetAmount, Sum(isnull(Due,0.00)) as Due, Sum(isnull(Cash,0.00)) as Cash, Sum(isnull(Cheque,0.00)) as Cheque,            
Sum(isnull(Card,0.00)) as Card, Sum(isnull(Prepaid,0.00)) as Prepaid,Sum(isnull(Online,0.00)) as Online,Sum(isnull(DemandDraft,0.00)) as DemandDraft,            
Sum(isnull(AdjustmentAmount,0.00)) as AdjustmentAmount,             
 Sum(isnull(Collection,0.00)) as Collection FROM #fistdata WHERE Sno=2 Group By Trans            
 Union All            
 select 3 as Sno,Trans,'GROSS TOTAL' as PatientName,Sum(isnull(GrossAmount,0.00)) as GrossAmount,Sum(isnull(Discount,0.00)) as Discount,            
Sum(isnull(NetAmount,0.00)) as NetAmount, Sum(isnull(Due,0.00)) as Due, Sum(isnull(Cash,0.00)) as Cash, Sum(isnull(Cheque,0.00)) as Cheque,            
Sum(isnull(Card,0.00)) as Card, Sum(isnull(Prepaid,0.00)) as Prepaid,Sum(isnull(Online,0.00)) as Online,Sum(isnull(DemandDraft,0.00)) as DemandDraft,            
Sum(isnull(AdjustmentAmount,0.00)) as AdjustmentAmount,             
 Sum(isnull(Collection,0.00)) as Collection FROM #seconddata WHERE Sno=2 Group By Trans            
  Union All            
 select 3 as Sno,Trans,'GROSS TOTAL' as PatientName,Sum(isnull(GrossAmount,0.00)) as GrossAmount,Sum(isnull(Discount,0.00)) as Discount,            
Sum(isnull(NetAmount,0.00)) as NetAmount, Sum(isnull(Due,0.00)) as Due, Sum(isnull(Cash,0.00)) as Cash, Sum(isnull(Cheque,0.00)) as Cheque,            
Sum(isnull(Card,0.00)) as Card, Sum(isnull(Prepaid,0.00)) as Prepaid,Sum(isnull(Online,0.00)) as Online,Sum(isnull(DemandDraft,0.00)) as DemandDraft,            
Sum(isnull(AdjustmentAmount,0.00)) as AdjustmentAmount,             
 Sum(isnull(Collection,0.00)) as Collection FROM #thirddata WHERE Sno=2 Group By Trans            
  Union All            
 select 3 as Sno,Trans,'GROSS TOTAL' as PatientName,Sum(isnull(GrossAmount,0.00)) as GrossAmount,Sum(isnull(Discount,0.00)) as Discount,            
Sum(isnull(NetAmount,0.00)) as NetAmount, Sum(isnull(Due,0.00)) as Due, Sum(isnull(Cash,0.00)) as Cash, Sum(isnull(Cheque,0.00)) as Cheque,            
Sum(isnull(Card,0.00)) as Card, Sum(isnull(Prepaid,0.00)) as Prepaid,Sum(isnull(Online,0.00)) as Online,Sum(isnull(DemandDraft,0.00)) as DemandDraft,            
Sum(isnull(AdjustmentAmount,0.00)) as AdjustmentAmount,             
 Sum(isnull(Collection,0.00)) as Collection FROM #fourddata WHERE Sno=2 Group By Trans            
            
            
 INSERT INTO #Totaldata1 (Sno,Trans,PatientName,GrossAmount,Discount,NetAmount,Due,Cash,Cheque,Card,Prepaid,Online,DemandDraft,AdjustmentAmount,Collection)            
  select 3 as Sno,Trans,'GROSS TOTAL' as PatientName,Sum(isnull(GrossAmount,0.00)) as GrossAmount,Sum(isnull(Discount,0.00)) as Discount,            
Sum(isnull(NetAmount,0.00)) as NetAmount, Sum(isnull(Due,0.00)) as Due, Sum(isnull(Cash,0.00)) as Cash, Sum(isnull(Cheque,0.00)) as Cheque,            
Sum(isnull(Card,0.00)) as Card, Sum(isnull(Prepaid,0.00)) as Prepaid,Sum(isnull(Online,0.00)) as Online,Sum(isnull(DemandDraft,0.00)) as DemandDraft,            
Sum(isnull(AdjustmentAmount,0.00)) as AdjustmentAmount,             
 Sum(isnull(Collection,0.00)) as Collection FROM #Totaldata WHERE Sno=3 Group By Trans            
            
-------------------------------------------------------------------------------            
-------------------------------------------------------------------------------            
Create Table #Finaldata (Sno int,Trans Varchar(10),Data Nvarchar(255),CenterName Nvarchar(255),CircleName Nvarchar(255),Transactiondate Varchar(10),            
VisitDate Varchar(10),VisitNumber nvarchar(50),BillNumber Nvarchar(50),ExtPatientID Nvarchar(50),PatientName Nvarchar(255),GrossAmount Decimal(18,2),NetAmount Decimal(18,2),            
Discount Decimal(18,2),Due Decimal(18,2),Cash decimal(18,2),Cheque decimal(18,2), Card decimal(18,2),Prepaid decimal(18,2),Online decimal(18,2),DemandDraft Decimal(18,2),            
AdjustmentAmount Decimal(18,2),Collection Decimal(18,2),DiscountComment Nvarchar(255),            
RefDocName nvarchar(255),Specialization nvarchar(255),SourceName nvarchar(255),ClientType nvarchar(100),        
SalespersonName nvarchar(255),DisApprovedBy Nvarchar(255),TransactionType Nvarchar(50),            
DueType Nvarchar(50),CollectedUser Nvarchar(250),DueComment Nvarchar(255),DueApprovedBy Nvarchar(255))            
--------------------------------------------------------------------------------------            
--------------------------------------------------------------------------------------            
Declare @min int=1            
Declare @max int= (select max(sno) from @Datedetails)            
while (@min<=@max)            
BEGIN         
Declare @Date VARCHAR(10) = (SELECT Dates from @Datedetails where sno=@min)            
Insert Into #Finaldata (Sno,Trans,Data,CenterName,CircleName,Transactiondate,VisitDate,VisitNumber,BillNumber,ExtPatientID,PatientName,GrossAmount,Discount,NetAmount,Due,Cash,Cheque,            
Card,Prepaid,Online,DemandDraft,AdjustmentAmount,Collection,RefDocName,Specialization,SourceName,SalespersonName,DisApprovedBy,DiscountComment,DueApprovedBy,DueComment,TransactionType,DueType,CollectedUser)            
select Sno,Trans,'Daily Collection' as Data,CenterName,CircleName,Transactiondate,VisitDate,Isnull(VisitNumber,'') as VisitNumber,Isnull(BillNumber,'') as BillNumber,Isnull(ExtPatientID,'') as ExtPatientID,            
Isnull(PatientName,'') as PatientName,Isnull(GrossAmount,0.00) as GrossAmount,Isnull(Discount,0.00) as Discount,Isnull(NetAmount,0.00) AS NetAmount,            
Isnull(Due,0.00) AS Due,Isnull(Cash,0.00) AS Cash,Isnull(Cheque,0.00) AS Cheque,Isnull(Card,0.00) AS Card,Isnull(Prepaid,0.00) AS Prepaid,            
Isnull(Online,0.00) AS Online,Isnull(DemandDraft,0.00) AS DemandDraft,Isnull(AdjustmentAmount,0.00) AS AdjustmentAmount,Isnull(Collection,0.00) AS Collection,Isnull(RefDocName,'') AS RefDocName,            
Isnull(Specialization,'') AS Specialization,Isnull(SourceName,'') AS SourceName,Isnull(SalespersonName,'') AS SalespersonName,            
Isnull(DisApprovedBy,'') AS DisApprovedBy,Isnull(DiscountComment,'') AS DiscountComment,Isnull(DueApprovedBy,'') AS DueApprovedBy,Isnull(DueComment,'') AS DueComment,Isnull(TransactionType,'') AS TransactionType,Isnull(DueType,'') AS DueType,CollectedUser
   
          
            
            
             
FROM #fistdata WHERE Trans=@Date             
Union all            
select Sno,Trans,'Advance' as Data,CenterName,CircleName,Transactiondate,VisitDate,Isnull(VisitNumber,'') as VisitNumber,Isnull(BillNumber,'') as BillNumber,Isnull(ExtPatientID,'') as ExtPatientID,            
Isnull(PatientName,'') as PatientName,Isnull(GrossAmount,0.00) as GrossAmount,Isnull(Discount,0.00) as Discount,Isnull(NetAmount,0.00) AS NetAmount,            
Isnull(Due,0.00) AS Due,Isnull(Cash,0.00) AS Cash,Isnull(Cheque,0.00) AS Cheque,Isnull(Card,0.00) AS Card,Isnull(Prepaid,0.00) AS Prepaid,            
Isnull(Online,0.00) AS Online,Isnull(DemandDraft,0.00) AS DemandDraft,Isnull(AdjustmentAmount,0.00) AS AdjustmentAmount,Isnull(Collection,0.00) AS Collection,Isnull(RefDocName,'') AS RefDocName,            
Isnull(Specialization,'') AS Specialization,Isnull(SourceName,'') AS SourceName,Isnull(SalespersonName,'') AS SalespersonName,            
Isnull(DisApprovedBy,'') AS DisApprovedBy,Isnull(DiscountComment,'') AS DiscountComment,Isnull(DueApprovedBy,'') AS DueApprovedBy,Isnull(DueComment,'') AS DueComment,Isnull(TransactionType,'') AS TransactionType,Isnull(DueType,'') AS DueType,CollectedUser
      
        
          
             
FROM #seconddata WHERE Trans=@Date            
Union all            
select Sno,Trans,'Due Collection' as Data,CenterName,CircleName,Transactiondate,VisitDate,Isnull(VisitNumber,'') as VisitNumber,Isnull(BillNumber,'') as BillNumber,Isnull(ExtPatientID,'') as ExtPatientID,            
Isnull(PatientName,'') as PatientName,Isnull(GrossAmount,0.00) as GrossAmount,Isnull(Discount,0.00) as Discount,Isnull(NetAmount,0.00) AS NetAmount,            
Isnull(Due,0.00) AS Due,Isnull(Cash,0.00) AS Cash,Isnull(Cheque,0.00) AS Cheque,Isnull(Card,0.00) AS Card,Isnull(Prepaid,0.00) AS Prepaid,            
Isnull(Online,0.00) AS Online,Isnull(DemandDraft,0.00) AS DemandDraft,Isnull(AdjustmentAmount,0.00) AS AdjustmentAmount,Isnull(Collection,0.00) AS Collection,Isnull(RefDocName,'') AS RefDocName,            
Isnull(Specialization,'') AS Specialization,Isnull(SourceName,'') AS SourceName,Isnull(SalespersonName,'') AS SalespersonName,            
Isnull(DisApprovedBy,'') AS DisApprovedBy,Isnull(DiscountComment,'') AS DiscountComment,Isnull(DueApprovedBy,'') AS DueApprovedBy,Isnull(DueComment,'') AS DueComment,Isnull(TransactionType,'') AS TransactionType,Isnull(DueType,'') AS DueType,CollectedUser
  
    
      
        
          
             
FROM #thirddata WHERE Trans=@Date            
Union all            
select Sno,Trans,'Invoice Collection' as Data,CenterName,CircleName,Transactiondate,VisitDate,Isnull(VisitNumber,'') as VisitNumber,Isnull(BillNumber,'') as BillNumber,Isnull(ExtPatientID,'') as ExtPatientID,            
Isnull(PatientName,'') as PatientName,Isnull(GrossAmount,0.00) as GrossAmount,Isnull(Discount,0.00) as Discount,Isnull(NetAmount,0.00) AS NetAmount,            
Isnull(Due,0.00) AS Due,Isnull(Cash,0.00) AS Cash,Isnull(Cheque,0.00) AS Cheque,Isnull(Card,0.00) AS Card,Isnull(Prepaid,0.00) AS Prepaid,            
Isnull(Online,0.00) AS Online,Isnull(DemandDraft,0.00) AS DemandDraft,Isnull(AdjustmentAmount,0.00) AS AdjustmentAmount,Isnull(Collection,0.00) AS Collection,Isnull(RefDocName,'') AS RefDocName,            
Isnull(Specialization,'') AS Specialization,Isnull(SourceName,'') AS SourceName,Isnull(SalespersonName,'') AS SalespersonName,            
Isnull(DisApprovedBy,'') AS DisApprovedBy,Isnull(DiscountComment,'') AS DiscountComment,Isnull(DueApprovedBy,'') AS DueApprovedBy,Isnull(DueComment,'') AS DueComment,Isnull(TransactionType,'') AS TransactionType,Isnull(DueType,'') AS DueType,CollectedUser
  
    
      
        
          
             
FROM #fourddata WHERE Trans=@Date             
SET @min = @min + 1            
END            
            
Insert Into #Finaldata (Sno,Trans,Data,CenterName,CircleName,Transactiondate,VisitDate,VisitNumber,BillNumber,ExtPatientID,PatientName,GrossAmount,Discount,NetAmount,Due,Cash,Cheque,            
Card,Prepaid,Online,DemandDraft,AdjustmentAmount,Collection,RefDocName,Specialization,SourceName,SalespersonName,DisApprovedBy,DueApprovedBy,DueComment,DiscountComment,TransactionType,DueType)            
select Distinct Sno,Trans,'GROSS TOTAL' as Data,CenterName,CircleName,Transactiondate,VisitDate,Isnull(VisitNumber,'') as VisitNumber,Isnull(BillNumber,'') as BillNumber,Isnull(ExtPatientID,'') as ExtPatientID,            
Isnull(PatientName,'') as PatientName,Isnull(GrossAmount,0.00) as GrossAmount,Isnull(Discount,0.00) as Discount,Isnull(NetAmount,0.00) AS NetAmount,            
Isnull(Due,0.00) AS Due,Isnull(Cash,0.00) AS Cash,Isnull(Cheque,0.00) AS Cheque,Isnull(Card,0.00) AS Card,Isnull(Prepaid,0.00) AS Prepaid,            
Isnull(Online,0.00) AS Online,Isnull(DemandDraft,0.00) AS DemandDraft,Isnull(AdjustmentAmount,0.00) AS AdjustmentAmount,Isnull(Collection,0.00) AS Collection,Isnull(RefDocName,'') AS RefDocName,            
Isnull(Specialization,'') AS Specialization,Isnull(SourceName,'') AS SourceName,Isnull(SalespersonName,'') AS SalespersonName,            
Isnull(DisApprovedBy,'') AS DisApprovedBy,Isnull(DiscountComment,'') AS DiscountComment,Isnull(DueApprovedBy,'') AS DueApprovedBy,Isnull(DueComment,'') AS DueComment,Isnull(TransactionType,'') AS TransactionType,Isnull(DueType,'') AS DueType             
FROM #Totaldata1            
        
Update T set T.ClientType=ICT.ClientTypeName from #Finaldata T        
INNER JOIN PatientVisit PV WITH (NOLOCK) ON PV.VisitNumber=T.VisitNumber        
INNER JOIN VisitClientMapping VCM WITH(NOLOCK) ON VCM.VisitID=PV.PatientVisitID and VCM.OrgID=PV.OrgID        
INNER JOIN ClientMaster CM WITH(NOLOCK) ON CM.ClientID=VCM.ClientID and CM.OrgID=VCM.OrgID        
INNER JOIN InvClientType ICT WITH(NOLOCK) ON ICT.ClientTypeID=CM.ClientTypeID        
WHERE CM.ClientName<>'GENERAL'        
        
Declare @Oderdetails Table (Dno int Identity(1,1), Data Nvarchar(100))            
Insert into @Oderdetails (Data)            
select 'Daily Collection'            
Union all            
select 'Advance'            
Union all            
select 'Due Collection'            
Union all            
select 'Invoice Collection'            
Union all            
select 'GROSS TOTAL'            
            
select FF.Data,FF.CenterName,FF.CircleName,FF.Transactiondate,FF.VisitDate,FF.VisitNumber,FF.BillNumber,FF.ExtPatientID,FF.PatientName,FF.GrossAmount,            
FF.Discount,FF.NetAmount,FF.Due,FF.Cash,FF.Cheque,FF.Card,FF.Prepaid,FF.Online,FF.DemandDraft,FF.AdjustmentAmount,FF.Collection,FF.RefDocName,FF.Specialization,FF.SourceName,ISNULL(FF.ClientType,'') AS ClientType,           
FF.SalespersonName,FF.DisApprovedBy,FF.DiscountComment,FF.DueApprovedBy,FF.DueComment,FF.TransactionType,FF.DueType,FF.CollectedUser from #Finaldata FF             
Left join @Oderdetails OT ON OT.Data=FF.Data order by FF.Trans,OT.Dno,FF.Sno--FF.Sno,OT.Dno,FF.Trans,ROW_NUMBER() OVER ( ORDER BY FF.Data   ) Sno,            
Drop Table #fistdata            
Drop Table #seconddata            
Drop Table #thirddata            
Drop Table #fourddata            
Drop Table #Totaldata            
Drop Table #Totaldata1            
Drop Table #Finaldata            
END
