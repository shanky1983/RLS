CREATE FUNCTION [dbo].[fnGetIDwithPattern_Inventory] (
	@porgID [bigint]
	,@pOrgAddressID [bigint]
	,@pID [bigint]
	,@pCategoryID [bigint]
	,@IsReset [nchar](1)
	,@RefID [bigint] = - 1
	,@RefType [nvarchar](50) = ''
	)
RETURNS [nvarchar] (256)
	WITH EXECUTE AS CALLER
AS
BEGIN
	DECLARE @IDwithPattern NVARCHAR(256)
	DECLARE @FullPattern NVARCHAR(256)
	DECLARE @ResetNumber BIGINT
	DECLARE @LastNumber NVARCHAR(50)
	DECLARE @PatternTable TABLE (
		RowNo INT IDENTITY(1, 1)
		,PatternValue NVARCHAR(256)
		)
	DECLARE @Count INT = 0
	DECLARE @loop INT = 1
	DECLARE @Pattern NVARCHAR(256)
	DECLARE @ResultPattern NVARCHAR(256) = ''
	DECLARE @LocationCode NVARCHAR(50)
	DECLARE @DateFormat NVARCHAR(32)
	DECLARE @VisitCount NVARCHAR(32)
	DECLARE @VisitType NVARCHAR(32) = 0
	DECLARE @VisitSpecialityID NVARCHAR(32)
	DECLARE @VisitDeptID NVARCHAR(32)
	DECLARE @PatientVisitID BIGINT = - 1
	DECLARE @IsPatternAutoGenerated NCHAR(1)
	DECLARE @CityCode NVARCHAR(50)
	DECLARE @ResetDate DATETIME
	DECLARE @CurrYear NVARCHAR(5)
	DECLARE @NextYear NVARCHAR(5)
	DECLARE @LocName NVARCHAR(5)
	DECLARE @CategoryCode NVARCHAR(10)
	DECLARE @INDEX SMALLINT

	IF EXISTS (
			SELECT 'X'
			FROM IDPatternMaster
			WHERE CategoryID = @pCategoryID
				AND OrgID = @porgID
				AND Pattern IS NOT NULL
				AND ISNULL(OrgAddressID, @pOrgAddressID) = @pOrgAddressID
			)
	BEGIN
		SELECT @FullPattern = Pattern
			,@ResetDate = ResetFinancialYear
			,@ResetNumber = ResetNumber
			,@IsReset = IsReset
			,@LastNumber = LastGeneratedNumber
			,@IsPatternAutoGenerated = IsPatternAutoGenerated
		FROM IDPatternMaster
		WHERE CategoryID = @pCategoryID
			AND OrgID = @porgID
			AND Pattern IS NOT NULL
			AND ISNULL(OrgAddressID, @pOrgAddressID) = @pOrgAddressID
	END
	ELSE
	BEGIN
		RETURN @pID
	END

	IF (@IsPatternAutoGenerated = 'N')
	BEGIN
		IF EXISTS (
				SELECT 1
				FROM Sys.Objects
				WHERE NAME = 'fnGeneratePatientNumberCustomLogic'
					AND Type = 'Fn'
				)
			DECLARE @NextID NVARCHAR(50)

		SELECT @NextID = dbo.fnGeneratePatientNumberCustomLogic(@LastNumber)

		RETURN @NextID
	END

	SELECT @PatientVisitID = MAX(PatientVisitID)
	FROM PatientVisit
	WHERE PatientID = @RefID
		AND OrgID = @pOrgID

	INSERT @PatternTable
	SELECT lTrim(Rtrim(REPLACE(item, '{', ''))) item
	FROM dbo.[fnSplit](@FullPattern, '}')

	--SELECT * FROM @PatternTable        
	SELECT @Count = COUNT(1)
	FROM @PatternTable

	WHILE (@loop <= @Count)
	BEGIN
		SELECT @Pattern = PatternValue
		FROM @PatternTable
		WHERE RowNo = @loop

		IF @Pattern = 'YYYY'
		BEGIN
			SELECT @DateFormat = dbo.fnFormatDate(getdate(), @Pattern, - 1)

			SET @ResultPattern = @ResultPattern + @DateFormat
		END
		ELSE IF @Pattern = 'YY'
		BEGIN
			SELECT @DateFormat = dbo.fnFormatDate(getdate(), @Pattern, - 1)

			SET @ResultPattern = @ResultPattern + @DateFormat
		END
		ELSE IF @Pattern = 'FNYYY'
		BEGIN
			SELECT @CurrYear = dbo.fnFormatDate(dateadd(yyyy, - 1, @ResetDate), 'YYYY', - 1)

			SELECT @NextYear = dbo.fnFormatDate(@ResetDate, 'YY', - 1)

			SELECT @DateFormat = @CurrYear + '-' + @NextYear

			SET @ResultPattern = @ResultPattern + @DateFormat
		END
		ELSE IF @Pattern = 'DD'
		BEGIN
			SELECT @DateFormat = dbo.fnFormatDate(getdate(), @Pattern, - 1)

			SET @ResultPattern = @ResultPattern + @DateFormat
		END
		ELSE IF @Pattern = 'MMM'
		BEGIN
			SELECT @DateFormat = dbo.fnFormatDate(getdate(), @Pattern, - 1)

			SET @ResultPattern = @ResultPattern + @DateFormat
		END
		ELSE IF @Pattern = 'MM'
		BEGIN
			SELECT @DateFormat = dbo.fnFormatDate(getdate(), @Pattern, - 1)

			SET @ResultPattern = @ResultPattern + @DateFormat
		END
		ELSE IF @Pattern = 'LOC'
		BEGIN
			IF @pOrgAddressID IS NULL
				OR @pOrgAddressID = - 1
				SET @pOrgAddressID = NULL

			SELECT TOP 1 @LocationCode = (
					CASE 
						WHEN LEN(ISNULL(LocationCode, '')) > 0
							THEN RTRIM(LTRIM(LocationCode))
						ELSE SUBSTRING(Location, 0, 4)
						END
					)
			FROM OrganizationAddress
			WHERE OrgID = @porgID
				AND AddressID = COALESCE(@pOrgAddressID, AddressID)

			SET @ResultPattern = @ResultPattern + @LocationCode
		END
		ELSE IF @Pattern = 'CCODE'
		BEGIN
			IF @pOrgAddressID IS NULL
				OR @pOrgAddressID = - 1
				SET @pOrgAddressID = NULL

			SELECT TOP 1 @CityCode = (
					CASE 
						WHEN LEN(ISNULL(CityCode, '')) > 0
							THEN CityCode
						ELSE SUBSTRING(City, 0, 4)
						END
					)
			FROM OrganizationAddress
			WHERE OrgID = @porgID
				AND AddressID = COALESCE(@pOrgAddressID, AddressID)

			SET @ResultPattern = @ResultPattern + @CityCode
		END
		ELSE IF @Pattern = 'VIC'
			AND @RefType = 'PT'
		BEGIN
			SELECT @VisitCount = COUNT(1)
			FROM PatientVisit
			WHERE PatientID = @RefID
				AND OrgID = @porgID

			SET @ResultPattern = @ResultPattern + @VisitCount
		END
		ELSE IF @Pattern = 'VIT'
			AND @RefType = 'PT'
		BEGIN
			SELECT @VisitType = CASE 
					WHEN VisitType = 0
						THEN 'OP'
					ELSE 'IP'
					END
			FROM PatientVisit
			WHERE OrgID = @pOrgID
				AND PatientVisitID = @PatientVisitID

			SET @ResultPattern = @ResultPattern + @VisitType
		END
		ELSE IF @Pattern = 'SPE'
			AND @RefType = 'PT'
		BEGIN
			SELECT @VisitSpecialityID = ISNULL(SpecialityID, 0)
			FROM PatientVisit
			WHERE OrgID = @pOrgID
				AND PatientVisitID = @PatientVisitID

			SET @ResultPattern = @ResultPattern + @VisitSpecialityID
		END
		ELSE IF @Pattern = 'DEP'
			AND @RefType = 'PT'
		BEGIN
			SELECT @VisitDeptID = ISNULL(EmpDeptCode, 0)
			FROM PatientVisit
			WHERE OrgID = @pOrgID
				AND PatientVisitID = @PatientVisitID

			SET @ResultPattern = @ResultPattern + @VisitDeptID
		END
		ELSE IF @Pattern = 'DEP'
			AND @RefType = 'PT'
		BEGIN
			SELECT @VisitDeptID = ISNULL(EmpDeptCode, 0)
			FROM PatientVisit
			WHERE OrgID = @pOrgID
				AND PatientVisitID = @PatientVisitID

			SET @ResultPattern = @ResultPattern + @VisitDeptID
		END
		ELSE IF @Pattern = 'DEPT'
			AND @RefType <> ''
		BEGIN
			SET @ResultPattern = @ResultPattern + UPPER(@RefType)
		END
		ELSE IF @Pattern LIKE 'LOCN%'
		BEGIN
			SELECT @INDEX = CHARINDEX('_', @Pattern)

			IF (@INDEX = 0)
				SET @INDEX = 3
			ELSE
				SET @INDEX = substring(@Pattern, @INDEX + 1, len(@Pattern) - @INDEX) + 1

			SELECT @LocName = Substring(ISNULL(LocationCode, Locationname), 0, @INDEX)
			FROM Locations
			WHERE LocationID = @RefID

			SET @ResultPattern = @ResultPattern + UPPER(@LocName)
		END
		ELSE IF @Pattern = 'CAT'
		BEGIN
			SELECT @CategoryCode = CategoryCode
			FROM MasterCategories
			WHERE Categoryid = @pCategoryID

			SET @ResultPattern = @ResultPattern + UPPER(@CategoryCode)
		END
		ELSE IF @Pattern = 'Number'
		BEGIN
			IF EXISTS (
					SELECT 1
					FROM IDPatternMaster
					WHERE OrgID = @porgID
						AND CategoryID = @pCategoryID
						AND IsPading = 'Y'
					)
			BEGIN
				DECLARE @Length INT

				SELECT @Length = isnull(PadLength, 0)
				FROM IDPatternMaster
				WHERE OrgID = @porgID
					AND CategoryID = @pCategoryID
					AND IsPading = 'Y'

				SET @ResultPattern = @ResultPattern + dbo.fnPadNumber(CONVERT(NVARCHAR, @pID), @Length)
			END
			ELSE
				SET @ResultPattern = @ResultPattern + CONVERT(NVARCHAR, @pID)
		END
		ELSE
		BEGIN
			SET @ResultPattern = @ResultPattern + @Pattern
		END

		SET @loop = @loop + 1
	END

	SELECT @IDwithPattern = @ResultPattern

	RETURN @IDwithPattern
END;
