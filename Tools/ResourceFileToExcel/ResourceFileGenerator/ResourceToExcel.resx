<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        b/8O6vmX7w/KAAAAAElFTkSuQmCC
</value>
  </data>
</root>