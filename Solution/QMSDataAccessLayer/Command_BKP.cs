//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.5485
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Attune.Solution.QMSDataAccessLayer
{
    using System;
    using System.Text;
    using System.Data;
    using System.Data.SqlClient;


    public class Command_bkp
    {

        public static System.Data.SqlClient.SqlCommand pGetLocalitiesCommand(long Locality_ID, System.Data.DataTable ContextInfo)
        {
            System.Data.SqlClient.SqlCommand cmd;
            cmd = new System.Data.SqlClient.SqlCommand();
            cmd.CommandText = "pGetLocalities";
            cmd.CommandTimeout = 180;
            cmd.CommandType = CommandType.StoredProcedure;
            System.Data.SqlClient.SqlParameter _Locality_ID = new System.Data.SqlClient.SqlParameter();
            _Locality_ID.ParameterName = "@Locality_ID";
            _Locality_ID.Size = -1;
            _Locality_ID.Value = Locality_ID;
            cmd.Parameters.Add(_Locality_ID);
            System.Data.SqlClient.SqlParameter _ContextInfo = new System.Data.SqlClient.SqlParameter();
            _ContextInfo.ParameterName = "@ContextInfo";
            _ContextInfo.Size = -1;
            _ContextInfo.Value = ContextInfo;
            cmd.Parameters.Add(_ContextInfo);
            return cmd;
        }


        public static System.Data.SqlClient.SqlCommand pGetMenuItemsCommand(long RoleID, int OrgID, int pParentID, System.Data.DataTable ContextInfo)
        {
            System.Data.SqlClient.SqlCommand cmd;
            cmd = new System.Data.SqlClient.SqlCommand();
            cmd.CommandText = "pGetMenuItems_QMS";
            cmd.CommandTimeout = 180;
            cmd.CommandType = CommandType.StoredProcedure;
            System.Data.SqlClient.SqlParameter _RoleID = new System.Data.SqlClient.SqlParameter();
            _RoleID.ParameterName = "@RoleID";
            _RoleID.Size = -1;
            _RoleID.Value = RoleID;
            cmd.Parameters.Add(_RoleID);
            System.Data.SqlClient.SqlParameter _OrgID = new System.Data.SqlClient.SqlParameter();
            _OrgID.ParameterName = "@OrgID";
            _OrgID.Size = -1;
            _OrgID.Value = OrgID;
            cmd.Parameters.Add(_OrgID);
            System.Data.SqlClient.SqlParameter _pParentID = new System.Data.SqlClient.SqlParameter();
            _pParentID.ParameterName = "@pParentID";
            _pParentID.Size = -1;
            _pParentID.Value = pParentID;
            cmd.Parameters.Add(_pParentID);
            System.Data.SqlClient.SqlParameter _ContextInfo = new System.Data.SqlClient.SqlParameter();
            _ContextInfo.ParameterName = "@ContextInfo";
            _ContextInfo.Size = -1;
            _ContextInfo.Value = ContextInfo;
            cmd.Parameters.Add(_ContextInfo);
            return cmd;
        }
        public static System.Data.SqlClient.SqlCommand pGetLoginDeptCommand(int pLoginID, int pOrgID, int pRoleID, System.Data.DataTable ContextInfo)
        {
            System.Data.SqlClient.SqlCommand cmd;
            cmd = new System.Data.SqlClient.SqlCommand();
            cmd.CommandText = "pGetLoginDept";
            cmd.CommandTimeout = 180;
            cmd.CommandType = CommandType.StoredProcedure;
            System.Data.SqlClient.SqlParameter _pLoginID = new System.Data.SqlClient.SqlParameter();
            _pLoginID.ParameterName = "@pLoginID";
            _pLoginID.Size = -1;
            _pLoginID.Value = pLoginID;
            cmd.Parameters.Add(_pLoginID);
            System.Data.SqlClient.SqlParameter _pOrgID = new System.Data.SqlClient.SqlParameter();
            _pOrgID.ParameterName = "@pOrgID";
            _pOrgID.Size = -1;
            _pOrgID.Value = pOrgID;
            cmd.Parameters.Add(_pOrgID);
            System.Data.SqlClient.SqlParameter _pRoleID = new System.Data.SqlClient.SqlParameter();
            _pRoleID.ParameterName = "@pRoleID";
            _pRoleID.Size = -1;
            _pRoleID.Value = pRoleID;
            cmd.Parameters.Add(_pRoleID);
            System.Data.SqlClient.SqlParameter _ContextInfo = new System.Data.SqlClient.SqlParameter();
            _ContextInfo.ParameterName = "@ContextInfo";
            _ContextInfo.Size = -1;
            _ContextInfo.Value = ContextInfo;
            cmd.Parameters.Add(_ContextInfo);
            return cmd;
        }


        public static System.Data.SqlClient.SqlCommand pSaveAnalyteMasterDetailsCommand(long pOrgId, string pCommandFlag, System.Data.DataTable pAnalyteMaster, System.Data.DataTable ContextInfo)
        {
            System.Data.SqlClient.SqlCommand cmd;
            cmd = new System.Data.SqlClient.SqlCommand();
            cmd.CommandText = "pSaveAnalyteMasterDetails";
            cmd.CommandTimeout = 180;
            cmd.CommandType = CommandType.StoredProcedure;
            System.Data.SqlClient.SqlParameter _pOrgId = new System.Data.SqlClient.SqlParameter();
            _pOrgId.ParameterName = "@pOrgId";
            _pOrgId.Size = -1;
            _pOrgId.Value = pOrgId;
            cmd.Parameters.Add(_pOrgId);
            System.Data.SqlClient.SqlParameter _pCommandFlag = new System.Data.SqlClient.SqlParameter();
            _pCommandFlag.ParameterName = "@pCommandFlag";
            _pCommandFlag.Size = 20;
            _pCommandFlag.Value = pCommandFlag;
            cmd.Parameters.Add(_pCommandFlag);
            System.Data.SqlClient.SqlParameter _pAnalyteMaster = new System.Data.SqlClient.SqlParameter();
            _pAnalyteMaster.ParameterName = "@pAnalyteMaster";
            _pAnalyteMaster.Size = -1;
            _pAnalyteMaster.Value = pAnalyteMaster;
            cmd.Parameters.Add(_pAnalyteMaster);
            System.Data.SqlClient.SqlParameter _ContextInfo = new System.Data.SqlClient.SqlParameter();
            _ContextInfo.ParameterName = "@ContextInfo";
            _ContextInfo.Size = -1;
            _ContextInfo.Value = ContextInfo;
            cmd.Parameters.Add(_ContextInfo);
            return cmd;
        }
        public static System.Data.SqlClient.SqlCommand pSaveInvInstrumentMaster(int orgID, int roleID, DataTable InvInstrumentMaster, System.Data.DataTable ContextInfo, DateTime MaintenanceDoneDate, DateTime MaintenanceDueDate, DateTime CalibrationDoneDate, DateTime CalibrationDueDate,DataTable DeptID,out int InstrumentID)
        {
            System.Data.SqlClient.SqlCommand cmd;
            cmd = new System.Data.SqlClient.SqlCommand();
            cmd.CommandText = "pSaveInvInstrumentMaster";
            cmd.CommandTimeout = 180;
            cmd.CommandType = CommandType.StoredProcedure;
            System.Data.SqlClient.SqlParameter _pOrgId = new System.Data.SqlClient.SqlParameter();
            _pOrgId.ParameterName = "@pOrgID";
            _pOrgId.Size = -1;
            _pOrgId.Value = orgID;
            cmd.Parameters.Add(_pOrgId);
            System.Data.SqlClient.SqlParameter _RoleID = new System.Data.SqlClient.SqlParameter();
            _RoleID.ParameterName = "@pRoleID";
            _RoleID.Size = -1;
            _RoleID.Value = roleID;
            cmd.Parameters.Add(_RoleID);
            System.Data.SqlClient.SqlParameter _InvInstrumentMaster = new System.Data.SqlClient.SqlParameter();
            _InvInstrumentMaster.ParameterName = "@pInvInstrumentMaster";
            _InvInstrumentMaster.Size = -1;
            _InvInstrumentMaster.Value = InvInstrumentMaster;
            cmd.Parameters.Add(_InvInstrumentMaster);
            System.Data.SqlClient.SqlParameter _ContextInfo = new System.Data.SqlClient.SqlParameter();
            _ContextInfo.ParameterName = "@ContextInfo";
            _ContextInfo.Size = -1;
            _ContextInfo.Value = ContextInfo;
            cmd.Parameters.Add(_ContextInfo);
            System.Data.SqlClient.SqlParameter _MaintenanceDoneDate = new System.Data.SqlClient.SqlParameter();
            _MaintenanceDoneDate.ParameterName = "@pMaintenanceDoneDate";
            _MaintenanceDoneDate.Size = -1;
            _MaintenanceDoneDate.Value = MaintenanceDoneDate;
            cmd.Parameters.Add(_MaintenanceDoneDate);
            System.Data.SqlClient.SqlParameter _MaintenanceDueDate = new System.Data.SqlClient.SqlParameter();
            _MaintenanceDueDate.ParameterName = "@pMaintenanceDueDate";
            _MaintenanceDueDate.Size = -1;
            _MaintenanceDueDate.Value = MaintenanceDueDate;
            cmd.Parameters.Add(_MaintenanceDueDate);
            System.Data.SqlClient.SqlParameter _CalibrationDoneDate = new System.Data.SqlClient.SqlParameter();
            _CalibrationDoneDate.ParameterName = "@pCalibrationDoneDate";
            _CalibrationDoneDate.Size = -1;
            _CalibrationDoneDate.Value = CalibrationDoneDate;
            cmd.Parameters.Add(_CalibrationDoneDate);
            System.Data.SqlClient.SqlParameter _CalibrationDueDate = new System.Data.SqlClient.SqlParameter();
            _CalibrationDueDate.ParameterName = "@pCalibrationDueDate";
            _CalibrationDueDate.Size = -1;
            _CalibrationDueDate.Value = CalibrationDueDate;
            cmd.Parameters.Add(_CalibrationDueDate);
            System.Data.SqlClient.SqlParameter _DeptID = new System.Data.SqlClient.SqlParameter();
            _DeptID.ParameterName = "@DeptID";
            _DeptID.Size = -1;
            _DeptID.Value = DeptID;
            cmd.Parameters.Add(_DeptID);
            InstrumentID = -1;
            System.Data.SqlClient.SqlParameter _InstrumentID = new System.Data.SqlClient.SqlParameter();
            _InstrumentID.ParameterName = "@InstrumentID";
            _InstrumentID.Size = -1;
            _InstrumentID.Value = InstrumentID;
            cmd.Parameters.Add(_InstrumentID);
            _InstrumentID.Direction = ParameterDirection.Output;
            InstrumentID = ((int)(_InstrumentID.Value));
            return cmd;
        }
        public static System.Data.SqlClient.SqlCommand pUpdateFilepath(long InstrumentID, string Filepath, System.Data.DataTable ContextInfo)
        {
            System.Data.SqlClient.SqlCommand cmd;
            cmd = new System.Data.SqlClient.SqlCommand();
            cmd.CommandText = "pUpdateFilepath";
            cmd.CommandTimeout = 180;
            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            System.Data.SqlClient.SqlParameter _InstrumentID = new System.Data.SqlClient.SqlParameter();
            _InstrumentID.ParameterName = "@pInstrumentID";
            _InstrumentID.Size = -1;
            _InstrumentID.Value = InstrumentID;
            cmd.Parameters.Add(_InstrumentID);
            System.Data.SqlClient.SqlParameter _FilePath = new System.Data.SqlClient.SqlParameter();
            _FilePath.ParameterName = "@pFilepath";
            _FilePath.Size = -1;
            _FilePath.Value = Filepath;
            cmd.Parameters.Add(_FilePath);
            System.Data.SqlClient.SqlParameter _ContextInfo = new System.Data.SqlClient.SqlParameter();
            _ContextInfo.ParameterName = "@ContextInfo";
            _ContextInfo.Size = -1;
            _ContextInfo.Value = ContextInfo;
            _ContextInfo.Precision = 0;
            _ContextInfo.Scale = 0;
            cmd.Parameters.Add(_ContextInfo);
            return cmd;
        }
        public static System.Data.SqlClient.SqlCommand pUpdateInvInstrumentMaster(int ID, System.Data.DataTable ContextInfo)
        {

            System.Data.SqlClient.SqlCommand cmd;
            cmd = new System.Data.SqlClient.SqlCommand();
            cmd.CommandText = "pUpdateInvInstrumentMaster";
            cmd.CommandTimeout = 180;
            cmd.CommandType = System.Data.CommandType.StoredProcedure;
            System.Data.SqlClient.SqlParameter _InstrumentID = new System.Data.SqlClient.SqlParameter();
            _InstrumentID.ParameterName = "@pInstrumentID";
            _InstrumentID.Size = -1;
            _InstrumentID.Value = ID;
            cmd.Parameters.Add(_InstrumentID);
            System.Data.SqlClient.SqlParameter _ContextInfo = new System.Data.SqlClient.SqlParameter();
            _ContextInfo.ParameterName = "@ContextInfo";
            _ContextInfo.Size = -1;
            _ContextInfo.Value = ContextInfo;
            _ContextInfo.Precision = 0;
            _ContextInfo.Scale = 0;
            cmd.Parameters.Add(_ContextInfo);
            return cmd;
        }
        public static System.Data.SqlClient.SqlCommand pEditInstrumentMasterCommand(int pOrgID, int pRoleID, System.Data.DataTable pInvInstrumentMaster, System.Data.DataTable ContextInfo, string pMaintenanceDoneDate, string pMaintenanceDueDate, string pCalibrationDoneDate, string pCalibrationDueDate, System.Data.DataTable DeptID)
        {
            System.Data.SqlClient.SqlCommand cmd;
            cmd = new System.Data.SqlClient.SqlCommand();
            cmd.CommandText = "pEditInstrumentMaster";
            cmd.CommandTimeout = 180;
            cmd.CommandType = CommandType.StoredProcedure;
            System.Data.SqlClient.SqlParameter _pOrgID = new System.Data.SqlClient.SqlParameter();
            _pOrgID.ParameterName = "@pOrgID";
            _pOrgID.Size = -1;
            _pOrgID.Value = pOrgID;
            cmd.Parameters.Add(_pOrgID);
            System.Data.SqlClient.SqlParameter _pRoleID = new System.Data.SqlClient.SqlParameter();
            _pRoleID.ParameterName = "@pRoleID";
            _pRoleID.Size = -1;
            _pRoleID.Value = pRoleID;
            cmd.Parameters.Add(_pRoleID);
            System.Data.SqlClient.SqlParameter _pInvInstrumentMaster = new System.Data.SqlClient.SqlParameter();
            _pInvInstrumentMaster.ParameterName = "@pInvInstrumentMaster";
            _pInvInstrumentMaster.Size = -1;
            _pInvInstrumentMaster.Value = pInvInstrumentMaster;
            cmd.Parameters.Add(_pInvInstrumentMaster);
            System.Data.SqlClient.SqlParameter _ContextInfo = new System.Data.SqlClient.SqlParameter();
            _ContextInfo.ParameterName = "@ContextInfo";
            _ContextInfo.Size = -1;
            _ContextInfo.Value = ContextInfo;
            cmd.Parameters.Add(_ContextInfo);
            System.Data.SqlClient.SqlParameter _pMaintenanceDoneDate = new System.Data.SqlClient.SqlParameter();
            _pMaintenanceDoneDate.ParameterName = "@pMaintenanceDoneDate";
            _pMaintenanceDoneDate.Size = 50;
            _pMaintenanceDoneDate.Value = pMaintenanceDoneDate;
            cmd.Parameters.Add(_pMaintenanceDoneDate);
            System.Data.SqlClient.SqlParameter _pMaintenanceDueDate = new System.Data.SqlClient.SqlParameter();
            _pMaintenanceDueDate.ParameterName = "@pMaintenanceDueDate";
            _pMaintenanceDueDate.Size = 50;
            _pMaintenanceDueDate.Value = pMaintenanceDueDate;
            cmd.Parameters.Add(_pMaintenanceDueDate);
            System.Data.SqlClient.SqlParameter _pCalibrationDoneDate = new System.Data.SqlClient.SqlParameter();
            _pCalibrationDoneDate.ParameterName = "@pCalibrationDoneDate";
            _pCalibrationDoneDate.Size = 50;
            _pCalibrationDoneDate.Value = pCalibrationDoneDate;
            cmd.Parameters.Add(_pCalibrationDoneDate);
            System.Data.SqlClient.SqlParameter _pCalibrationDueDate = new System.Data.SqlClient.SqlParameter();
            _pCalibrationDueDate.ParameterName = "@pCalibrationDueDate";
            _pCalibrationDueDate.Size = 50;
            _pCalibrationDueDate.Value = pCalibrationDueDate;
            cmd.Parameters.Add(_pCalibrationDueDate);
            System.Data.SqlClient.SqlParameter _DeptID = new System.Data.SqlClient.SqlParameter();
            _DeptID.ParameterName = "@DeptID";
            _DeptID.Size = -1;
            _DeptID.Value = DeptID;
            cmd.Parameters.Add(_DeptID);
            return cmd;
        }
        public static System.Data.SqlClient.SqlCommand pLoadAnalyzerCommandCommand(System.Data.DataTable ContextInfo)
        {
            System.Data.SqlClient.SqlCommand cmd;
            cmd = new System.Data.SqlClient.SqlCommand();
            cmd.CommandText = "pLoadAnalyzerCommand";
            cmd.CommandTimeout = 180;
            cmd.CommandType = CommandType.StoredProcedure;
            System.Data.SqlClient.SqlParameter _ContextInfo = new System.Data.SqlClient.SqlParameter();
            _ContextInfo.ParameterName = "@ContextInfo";
            _ContextInfo.Size = -1;
            _ContextInfo.Value = ContextInfo;
            cmd.Parameters.Add(_ContextInfo);
            return cmd;
        }
        public static System.Data.SqlClient.SqlCommand pLoadddlPrincipleMasterCommand(System.Data.DataTable ContextInfo)
        {
            System.Data.SqlClient.SqlCommand cmd;
            cmd = new System.Data.SqlClient.SqlCommand();
            cmd.CommandText = "pLoadddlPrincipleMaster";
            cmd.CommandTimeout = 180;
            cmd.CommandType = CommandType.StoredProcedure;
            System.Data.SqlClient.SqlParameter _ContextInfo = new System.Data.SqlClient.SqlParameter();
            _ContextInfo.ParameterName = "@ContextInfo";
            _ContextInfo.Size = -1;
            _ContextInfo.Value = ContextInfo;
            cmd.Parameters.Add(_ContextInfo);
            return cmd;
        }
        public static System.Data.SqlClient.SqlCommand PgetDeviceInstrumentnameCommand(string status, string InvestigationName, System.Data.DataTable ContextInfo)
        {
            System.Data.SqlClient.SqlCommand cmd;
            cmd = new System.Data.SqlClient.SqlCommand();
            cmd.CommandText = "PgetDeviceInstrumentname";
            cmd.CommandTimeout = 180;
            cmd.CommandType = CommandType.StoredProcedure;
            System.Data.SqlClient.SqlParameter _status = new System.Data.SqlClient.SqlParameter();
            _status.ParameterName = "@status";
            _status.Size = 50;
            _status.Value = status;
            cmd.Parameters.Add(_status);
            System.Data.SqlClient.SqlParameter _InvestigationName = new System.Data.SqlClient.SqlParameter();
            _InvestigationName.ParameterName = "@InvestigationName";
            _InvestigationName.Size = 10;
            _InvestigationName.Value = InvestigationName;
            cmd.Parameters.Add(_InvestigationName);
            System.Data.SqlClient.SqlParameter _ContextInfo = new System.Data.SqlClient.SqlParameter();
            _ContextInfo.ParameterName = "@ContextInfo";
            _ContextInfo.Size = -1;
            _ContextInfo.Value = ContextInfo;
            cmd.Parameters.Add(_ContextInfo);
            return cmd;
        }
        public static System.Data.SqlClient.SqlCommand pGetAnalyzerDeatilsQMSCommand(int OrgID,int LocationID ,int DeptID,DateTime Dtime, System.Data.DataTable ContextInfo)
        {
            System.Data.SqlClient.SqlCommand cmd;
            cmd = new System.Data.SqlClient.SqlCommand();
            cmd.CommandText = "pGetAnalyzerDeatilsQMS";
            cmd.CommandTimeout = 180;
            cmd.CommandType = CommandType.StoredProcedure;
            System.Data.SqlClient.SqlParameter _OrgID = new System.Data.SqlClient.SqlParameter();
            _OrgID.ParameterName = "@OrgID";
            _OrgID.Size = 50;
            _OrgID.Value = OrgID;
            cmd.Parameters.Add(_OrgID);
            System.Data.SqlClient.SqlParameter _LocationID = new System.Data.SqlClient.SqlParameter();
            _LocationID.ParameterName = "@LocationID";
            _LocationID.Size = 50;
            _LocationID.Value = LocationID ;
            cmd.Parameters.Add(_LocationID);
            System.Data.SqlClient.SqlParameter _DeptID = new System.Data.SqlClient.SqlParameter();
            _DeptID.ParameterName = "@DeptID";
            _DeptID.Size = 50;
            _DeptID.Value = DeptID;
            cmd.Parameters.Add(_DeptID);
            System.Data.SqlClient.SqlParameter _Dtime = new System.Data.SqlClient.SqlParameter();
            _Dtime.ParameterName = "@Dtime";
            _Dtime.Size = 50;
            _Dtime.Value = Dtime;
            cmd.Parameters.Add(_Dtime);
            System.Data.SqlClient.SqlParameter _ContextInfo = new System.Data.SqlClient.SqlParameter();
            _ContextInfo.ParameterName = "@ContextInfo";
            _ContextInfo.Size = -1;
            _ContextInfo.Value = ContextInfo;
            cmd.Parameters.Add(_ContextInfo);
            return cmd;
        }
        public static System.Data.SqlClient.SqlCommand PgetAnalyteForAnalyzerCommand(string InstrumentID,DateTime dTime,string Level, System.Data.DataTable ContextInfo)
        {
            System.Data.SqlClient.SqlCommand cmd;
            cmd = new System.Data.SqlClient.SqlCommand();
            cmd.CommandText = "PgetAnalyteForAnalyzer ";
            cmd.CommandTimeout = 180;
            cmd.CommandType = CommandType.StoredProcedure;
            System.Data.SqlClient.SqlParameter _InstrumentID = new System.Data.SqlClient.SqlParameter();
            _InstrumentID.ParameterName = "@InstrumentID";
            _InstrumentID.Size = 50;
            _InstrumentID.Value = InstrumentID;
            cmd.Parameters.Add(_InstrumentID);
            System.Data.SqlClient.SqlParameter _dTime = new System.Data.SqlClient.SqlParameter();
            _dTime.ParameterName = "@dTime";
            _dTime.Size = 50;
            _dTime.Value =dTime;
            cmd.Parameters.Add(_dTime);
          System.Data.SqlClient.SqlParameter _level = new System.Data.SqlClient.SqlParameter();
            _level.ParameterName = "@level";
            _level.Size = 50;
            _level.Value =Level;
            cmd.Parameters.Add(_level);
            System.Data.SqlClient.SqlParameter _ContextInfo = new System.Data.SqlClient.SqlParameter();
            _ContextInfo.ParameterName = "@ContextInfo";
            _ContextInfo.Size = -1;
            _ContextInfo.Value = ContextInfo;
            cmd.Parameters.Add(_ContextInfo);
            return cmd;
        }
        public static System.Data.SqlClient.SqlCommand PgetDeviceInstrumentnameAutocompleteCommand(string status, string Prefix, System.Data.DataTable ContextInfo)
        {
            System.Data.SqlClient.SqlCommand cmd;
            cmd = new System.Data.SqlClient.SqlCommand();
            cmd.CommandText = "PgetDeviceInstrumentnameAutocomplete";
            cmd.CommandTimeout = 180;
            cmd.CommandType = CommandType.StoredProcedure;
            System.Data.SqlClient.SqlParameter _status = new System.Data.SqlClient.SqlParameter();
            _status.ParameterName = "@status";
            _status.Size = 50;
            _status.Value = status;
            cmd.Parameters.Add(_status);
            System.Data.SqlClient.SqlParameter _prefix = new System.Data.SqlClient.SqlParameter();
            _prefix.ParameterName = "@prefix";
            _prefix.Size = 10;
            _prefix.Value = Prefix;
            cmd.Parameters.Add(_prefix);
            System.Data.SqlClient.SqlParameter _ContextInfo = new System.Data.SqlClient.SqlParameter();
            _ContextInfo.ParameterName = "@ContextInfo";
            _ContextInfo.Size = -1;
            _ContextInfo.Value = ContextInfo;
            cmd.Parameters.Add(_ContextInfo);
            return cmd;
        }
        public static System.Data.SqlClient.SqlCommand pLoadDeviceDetailsCommand(int InstrumentID, System.Data.DataTable ContextInfo)
        {
            System.Data.SqlClient.SqlCommand cmd;
            cmd = new System.Data.SqlClient.SqlCommand();
            cmd.CommandText = "pLoadDeviceDetails";
            cmd.CommandTimeout = 180;
            cmd.CommandType = CommandType.StoredProcedure;
            System.Data.SqlClient.SqlParameter _InstrumentID = new System.Data.SqlClient.SqlParameter();
            _InstrumentID.ParameterName = "@InstrumentID";
            _InstrumentID.Size = -1;
            _InstrumentID.Value = InstrumentID;
            cmd.Parameters.Add(_InstrumentID);
            System.Data.SqlClient.SqlParameter _ContextInfo = new System.Data.SqlClient.SqlParameter();
            _ContextInfo.ParameterName = "@ContextInfo";
            _ContextInfo.Size = -1;
            _ContextInfo.Value = ContextInfo;
            cmd.Parameters.Add(_ContextInfo);
            return cmd;
        }
        public static System.Data.SqlClient.SqlCommand pSaveAnalyzermappingDetailsCommand(System.Data.DataTable Analyzermapping, System.Data.DataTable ContextInfo)
        {
            System.Data.SqlClient.SqlCommand cmd;
            cmd = new System.Data.SqlClient.SqlCommand();
            cmd.CommandText = "pSaveAnalyzermappingDetails";
            cmd.CommandTimeout = 180;
            cmd.CommandType = CommandType.StoredProcedure;
            System.Data.SqlClient.SqlParameter _Analyzermapping = new System.Data.SqlClient.SqlParameter();
            _Analyzermapping.ParameterName = "@Analyzermapping";
            _Analyzermapping.Size = -1;
            _Analyzermapping.Value = Analyzermapping;
            cmd.Parameters.Add(_Analyzermapping);
            System.Data.SqlClient.SqlParameter _ContextInfo = new System.Data.SqlClient.SqlParameter();
            _ContextInfo.ParameterName = "@ContextInfo";
            _ContextInfo.Size = -1;
            _ContextInfo.Value = ContextInfo;
            cmd.Parameters.Add(_ContextInfo);
            return cmd;
        }
        public static System.Data.SqlClient.SqlCommand pSaveQcValuesCommand(System.Data.DataTable Analyzermapping, System.Data.DataTable ContextInfo)
        {
            System.Data.SqlClient.SqlCommand cmd;
            cmd = new System.Data.SqlClient.SqlCommand();
            cmd.CommandText = "pSaveQcValues";
            cmd.CommandTimeout = 180;
            cmd.CommandType = CommandType.StoredProcedure;
            System.Data.SqlClient.SqlParameter _Analyzermapping = new System.Data.SqlClient.SqlParameter();
            _Analyzermapping.ParameterName = "@qcvales";
            _Analyzermapping.Size = -1;
            _Analyzermapping.Value = Analyzermapping;
            cmd.Parameters.Add(_Analyzermapping);
            System.Data.SqlClient.SqlParameter _ContextInfo = new System.Data.SqlClient.SqlParameter();
            _ContextInfo.ParameterName = "@ContextInfo";
            _ContextInfo.Size = -1;
            _ContextInfo.Value = ContextInfo;
            cmd.Parameters.Add(_ContextInfo);
            return cmd;
        }
        public static System.Data.SqlClient.SqlCommand PgetAnalyzerMappingDetailsCommand(System.Data.DataTable ContextInfo)
        {
            System.Data.SqlClient.SqlCommand cmd;
            cmd = new System.Data.SqlClient.SqlCommand();
            cmd.CommandText = "PgetAnalyzerMappingDetails";
            cmd.CommandTimeout = 180;
            cmd.CommandType = CommandType.StoredProcedure;
            System.Data.SqlClient.SqlParameter _ContextInfo = new System.Data.SqlClient.SqlParameter();
            _ContextInfo.ParameterName = "@ContextInfo";
            _ContextInfo.Size = -1;
            _ContextInfo.Value = ContextInfo;
            cmd.Parameters.Add(_ContextInfo);
            return cmd;
        }
        public static System.Data.SqlClient.SqlCommand PupdateDeviceMappingDetailsCommand(System.Data.DataTable Analyzermapping, string Frequencyday, string frequencytime, System.Data.DataTable ContextInfo)
        {
            System.Data.SqlClient.SqlCommand cmd;
            cmd = new System.Data.SqlClient.SqlCommand();
            cmd.CommandText = "PupdateDeviceMappingDetails";
            cmd.CommandTimeout = 180;
            cmd.CommandType = CommandType.StoredProcedure;
            System.Data.SqlClient.SqlParameter _Analyzermapping = new System.Data.SqlClient.SqlParameter();
            _Analyzermapping.ParameterName = "@Analyzermapping";
            _Analyzermapping.Size = -1;
            _Analyzermapping.Value = Analyzermapping;
            cmd.Parameters.Add(_Analyzermapping);
            System.Data.SqlClient.SqlParameter _Frequencyday = new System.Data.SqlClient.SqlParameter();
            _Frequencyday.ParameterName = "@Frequencyday";
            _Frequencyday.Size = 100;
            _Frequencyday.Value = Frequencyday;
            cmd.Parameters.Add(_Frequencyday);
            System.Data.SqlClient.SqlParameter _frequencytime = new System.Data.SqlClient.SqlParameter();
            _frequencytime.ParameterName = "@frequencytime";
            _frequencytime.Size = 100;
            _frequencytime.Value = frequencytime;
            cmd.Parameters.Add(_frequencytime);
            System.Data.SqlClient.SqlParameter _ContextInfo = new System.Data.SqlClient.SqlParameter();
            _ContextInfo.ParameterName = "@ContextInfo";
            _ContextInfo.Size = -1;
            _ContextInfo.Value = ContextInfo;
            cmd.Parameters.Add(_ContextInfo);
            return cmd;
        }
        public static System.Data.SqlClient.SqlCommand PdeleteAnalyzermappingDetailsCommand(string DeviceID, string Testcode, string Activationstatus, System.Data.DataTable ContextInfo)
        {
            System.Data.SqlClient.SqlCommand cmd;
            cmd = new System.Data.SqlClient.SqlCommand();
            cmd.CommandText = "PdeleteAnalyzermappingDetails";
            cmd.CommandTimeout = 180;
            cmd.CommandType = CommandType.StoredProcedure;
            System.Data.SqlClient.SqlParameter _DeviceID = new System.Data.SqlClient.SqlParameter();
            _DeviceID.ParameterName = "@DeviceID";
            _DeviceID.Size = 100;
            _DeviceID.Value = DeviceID;
            cmd.Parameters.Add(_DeviceID);
            System.Data.SqlClient.SqlParameter _Testcode = new System.Data.SqlClient.SqlParameter();
            _Testcode.ParameterName = "@Testcode";
            _Testcode.Size = 100;
            _Testcode.Value = Testcode;
            cmd.Parameters.Add(_Testcode);
            System.Data.SqlClient.SqlParameter _Activationstatus = new System.Data.SqlClient.SqlParameter();
            _Activationstatus.ParameterName = "@Activationstatus";
            _Activationstatus.Size = 100;
            _Activationstatus.Value = Activationstatus;
            cmd.Parameters.Add(_Activationstatus);
            System.Data.SqlClient.SqlParameter _ContextInfo = new System.Data.SqlClient.SqlParameter();
            _ContextInfo.ParameterName = "@ContextInfo";
            _ContextInfo.Size = -1;
            _ContextInfo.Value = ContextInfo;
            cmd.Parameters.Add(_ContextInfo);
            return cmd;
        }
        public static System.Data.SqlClient.SqlCommand pInsertLotVendorBaseCommand(System.Data.DataTable lotvendormaster, System.Data.DataTable ContextInfo)
        {
            System.Data.SqlClient.SqlCommand cmd;
            cmd = new System.Data.SqlClient.SqlCommand();
            cmd.CommandText = "pInsertLotVendorBase";
            cmd.CommandTimeout = 180;
            cmd.CommandType = CommandType.StoredProcedure;
            System.Data.SqlClient.SqlParameter _lotvendormaster = new System.Data.SqlClient.SqlParameter();
            _lotvendormaster.ParameterName = "@lotvendormaster";
            _lotvendormaster.Size = -1;
            _lotvendormaster.Value = lotvendormaster;
            cmd.Parameters.Add(_lotvendormaster);
            System.Data.SqlClient.SqlParameter _ContextInfo = new System.Data.SqlClient.SqlParameter();
            _ContextInfo.ParameterName = "@ContextInfo";
            _ContextInfo.Size = -1;
            _ContextInfo.Value = ContextInfo;
            cmd.Parameters.Add(_ContextInfo);
            return cmd;
        }
        public static System.Data.SqlClient.SqlCommand pGetLotVendormasterCommand(System.Data.DataTable contextinfo)
        {
            System.Data.SqlClient.SqlCommand cmd;
            cmd = new System.Data.SqlClient.SqlCommand();
            cmd.CommandText = "pGetLotVendormaster";
            cmd.CommandTimeout = 180;
            cmd.CommandType = CommandType.StoredProcedure;
            System.Data.SqlClient.SqlParameter _contextinfo = new System.Data.SqlClient.SqlParameter();
            _contextinfo.ParameterName = "@contextinfo";
            _contextinfo.Size = -1;
            _contextinfo.Value = contextinfo;
            cmd.Parameters.Add(_contextinfo);
            return cmd;
        }
        public static System.Data.SqlClient.SqlCommand pDeleteLotVendormasterCommand(string Activationstatus, int VendorID, System.Data.DataTable ContextInfo)
        {
            System.Data.SqlClient.SqlCommand cmd;
            cmd = new System.Data.SqlClient.SqlCommand();
            cmd.CommandText = "pDeleteLotVendormaster";
            cmd.CommandTimeout = 180;
            cmd.CommandType = CommandType.StoredProcedure;
            System.Data.SqlClient.SqlParameter _Activationstatus = new System.Data.SqlClient.SqlParameter();
            _Activationstatus.ParameterName = "@Activationstatus";
            _Activationstatus.Size = 100;
            _Activationstatus.Value = Activationstatus;
            cmd.Parameters.Add(_Activationstatus);
            System.Data.SqlClient.SqlParameter _VendorID = new System.Data.SqlClient.SqlParameter();
            _VendorID.ParameterName = "@VendorID";
            _VendorID.Size = -1;
            _VendorID.Value = VendorID;
            cmd.Parameters.Add(_VendorID);
            System.Data.SqlClient.SqlParameter _ContextInfo = new System.Data.SqlClient.SqlParameter();
            _ContextInfo.ParameterName = "@ContextInfo";
            _ContextInfo.Size = -1;
            _ContextInfo.Value = ContextInfo;
            cmd.Parameters.Add(_ContextInfo);
            return cmd;
        }
        public static System.Data.SqlClient.SqlCommand pUpdateLotVendorBaseCommand(int vendorid, System.Data.DataTable lotvendormaster, System.Data.DataTable ContextInfo)
        {
            System.Data.SqlClient.SqlCommand cmd;
            cmd = new System.Data.SqlClient.SqlCommand();
            cmd.CommandText = "pUpdateLotVendorBase";
            cmd.CommandTimeout = 180;
            cmd.CommandType = CommandType.StoredProcedure;
            System.Data.SqlClient.SqlParameter _vendorid = new System.Data.SqlClient.SqlParameter();
            _vendorid.ParameterName = "@vendorid";
            _vendorid.Size = -1;
            _vendorid.Value = vendorid;
            cmd.Parameters.Add(_vendorid);
            System.Data.SqlClient.SqlParameter _lotvendormaster = new System.Data.SqlClient.SqlParameter();
            _lotvendormaster.ParameterName = "@lotvendormaster";
            _lotvendormaster.Size = -1;
            _lotvendormaster.Value = lotvendormaster;
            cmd.Parameters.Add(_lotvendormaster);
            System.Data.SqlClient.SqlParameter _ContextInfo = new System.Data.SqlClient.SqlParameter();
            _ContextInfo.ParameterName = "@ContextInfo";
            _ContextInfo.Size = -1;
            _ContextInfo.Value = ContextInfo;
            cmd.Parameters.Add(_ContextInfo);
            return cmd;
        }
        public static System.Data.SqlClient.SqlCommand pInsertDeviceManufacturerCommand(System.Data.DataTable Manufacturer, System.Data.DataTable ContextInfo)
        {
            System.Data.SqlClient.SqlCommand cmd;
            cmd = new System.Data.SqlClient.SqlCommand();
            cmd.CommandText = "pInsertDeviceManufacturer";
            cmd.CommandTimeout = 180;
            cmd.CommandType = CommandType.StoredProcedure;
            System.Data.SqlClient.SqlParameter _Manufacturer = new System.Data.SqlClient.SqlParameter();
            _Manufacturer.ParameterName = "@Manufacturer";
            _Manufacturer.Size = -1;
            _Manufacturer.Value = Manufacturer;
            cmd.Parameters.Add(_Manufacturer);
            System.Data.SqlClient.SqlParameter _ContextInfo = new System.Data.SqlClient.SqlParameter();
            _ContextInfo.ParameterName = "@ContextInfo";
            _ContextInfo.Size = -1;
            _ContextInfo.Value = ContextInfo;
            cmd.Parameters.Add(_ContextInfo);
            return cmd;
        }
        public static System.Data.SqlClient.SqlCommand pGetLoadLotManufacturerdetailsCommand(System.Data.DataTable ContextInfo)
        {
            System.Data.SqlClient.SqlCommand cmd;
            cmd = new System.Data.SqlClient.SqlCommand();
            cmd.CommandText = "pGetLoadLotManufacturerdetails";
            cmd.CommandTimeout = 180;
            cmd.CommandType = CommandType.StoredProcedure;
            System.Data.SqlClient.SqlParameter _ContextInfo = new System.Data.SqlClient.SqlParameter();
            _ContextInfo.ParameterName = "@ContextInfo";
            _ContextInfo.Size = -1;
            _ContextInfo.Value = ContextInfo;
            cmd.Parameters.Add(_ContextInfo);
            return cmd;
        }
        public static System.Data.SqlClient.SqlCommand pDeleteLotManufacturemasterCommand(string Activationstatus, int MacID, System.Data.DataTable ContextInfo)
        {
            System.Data.SqlClient.SqlCommand cmd;
            cmd = new System.Data.SqlClient.SqlCommand();
            cmd.CommandText = "pDeleteLotManufacturemaster";
            cmd.CommandTimeout = 180;
            cmd.CommandType = CommandType.StoredProcedure;
            System.Data.SqlClient.SqlParameter _Activationstatus = new System.Data.SqlClient.SqlParameter();
            _Activationstatus.ParameterName = "@Activationstatus";
            _Activationstatus.Size = 100;
            _Activationstatus.Value = Activationstatus;
            cmd.Parameters.Add(_Activationstatus);
            System.Data.SqlClient.SqlParameter _MacID = new System.Data.SqlClient.SqlParameter();
            _MacID.ParameterName = "@MacID";
            _MacID.Size = -1;
            _MacID.Value = MacID;
            cmd.Parameters.Add(_MacID);
            System.Data.SqlClient.SqlParameter _ContextInfo = new System.Data.SqlClient.SqlParameter();
            _ContextInfo.ParameterName = "@ContextInfo";
            _ContextInfo.Size = -1;
            _ContextInfo.Value = ContextInfo;
            cmd.Parameters.Add(_ContextInfo);
            return cmd;
        }
        public static System.Data.SqlClient.SqlCommand pUpdateLoadLotManufacturerdetailsCommand(int MacID, System.Data.DataTable DeviceManufacturer, System.Data.DataTable ContextInfo)
        {
            System.Data.SqlClient.SqlCommand cmd;
            cmd = new System.Data.SqlClient.SqlCommand();
            cmd.CommandText = "pUpdateLoadLotManufacturerdetails";
            cmd.CommandTimeout = 180;
            cmd.CommandType = CommandType.StoredProcedure;
            System.Data.SqlClient.SqlParameter _MacID = new System.Data.SqlClient.SqlParameter();
            _MacID.ParameterName = "@MacID";
            _MacID.Size = -1;
            _MacID.Value = MacID;
            cmd.Parameters.Add(_MacID);
            System.Data.SqlClient.SqlParameter _DeviceManufacturer = new System.Data.SqlClient.SqlParameter();
            _DeviceManufacturer.ParameterName = "@DeviceManufacturer";
            _DeviceManufacturer.Size = -1;
            _DeviceManufacturer.Value = DeviceManufacturer;
            cmd.Parameters.Add(_DeviceManufacturer);
            System.Data.SqlClient.SqlParameter _ContextInfo = new System.Data.SqlClient.SqlParameter();
            _ContextInfo.ParameterName = "@ContextInfo";
            _ContextInfo.Size = -1;
            _ContextInfo.Value = ContextInfo;
            cmd.Parameters.Add(_ContextInfo);
            return cmd;
        }
        public static System.Data.SqlClient.SqlCommand PloadlotmanagementCommand(string Status, System.Data.DataTable ContextInfo)
        {
            System.Data.SqlClient.SqlCommand cmd;
            cmd = new System.Data.SqlClient.SqlCommand();
            cmd.CommandText = "Ploadlotmanagement";
            cmd.CommandTimeout = 180;
            cmd.CommandType = CommandType.StoredProcedure;
            System.Data.SqlClient.SqlParameter _Status = new System.Data.SqlClient.SqlParameter();
            _Status.ParameterName = "@Status";
            _Status.Size = 50;
            _Status.Value = Status;
            cmd.Parameters.Add(_Status);
            System.Data.SqlClient.SqlParameter _ContextInfo = new System.Data.SqlClient.SqlParameter();
            _ContextInfo.ParameterName = "@ContextInfo";
            _ContextInfo.Size = -1;
            _ContextInfo.Value = ContextInfo;
            cmd.Parameters.Add(_ContextInfo);
            return cmd;
        }
        public static System.Data.SqlClient.SqlCommand pSaveLotManagementCommand(System.Data.DataTable Lotmaster, System.Data.DataTable investigation, System.Data.DataTable ContextInfo)
        {
            System.Data.SqlClient.SqlCommand cmd;
            cmd = new System.Data.SqlClient.SqlCommand();
            cmd.CommandText = "pSaveLotManagement";
            cmd.CommandTimeout = 180;
            cmd.CommandType = CommandType.StoredProcedure;
            System.Data.SqlClient.SqlParameter _Lotmaster = new System.Data.SqlClient.SqlParameter();
            _Lotmaster.ParameterName = "@Lotmaster";
            _Lotmaster.Size = -1;
            _Lotmaster.Value = Lotmaster;
            cmd.Parameters.Add(_Lotmaster);
            System.Data.SqlClient.SqlParameter _investigation = new System.Data.SqlClient.SqlParameter();
            _investigation.ParameterName = "@investigation";
            _investigation.Size = -1;
            _investigation.Value = investigation;
            cmd.Parameters.Add(_investigation);
            System.Data.SqlClient.SqlParameter _ContextInfo = new System.Data.SqlClient.SqlParameter();
            _ContextInfo.ParameterName = "@ContextInfo";
            _ContextInfo.Size = -1;
            _ContextInfo.Value = ContextInfo;
            cmd.Parameters.Add(_ContextInfo);
            return cmd;
        }
        public static System.Data.SqlClient.SqlCommand pGetLoadLotdetailsCommand(System.Data.DataTable ContextInfo)
        {
            System.Data.SqlClient.SqlCommand cmd;
            cmd = new System.Data.SqlClient.SqlCommand();
            cmd.CommandText = "pGetLoadLotdetails";
            cmd.CommandTimeout = 180;
            cmd.CommandType = CommandType.StoredProcedure;
            System.Data.SqlClient.SqlParameter _ContextInfo = new System.Data.SqlClient.SqlParameter();
            _ContextInfo.ParameterName = "@ContextInfo";
            _ContextInfo.Size = -1;
            _ContextInfo.Value = ContextInfo;
            cmd.Parameters.Add(_ContextInfo);
            return cmd;
        }
      

       

        public static System.Data.SqlClient.SqlCommand pEditLotMasterCommand(System.Data.DataTable Lotmaster, System.Data.DataTable investigation, System.Data.DataTable ContextInfo)
        {
            System.Data.SqlClient.SqlCommand cmd;
            cmd = new System.Data.SqlClient.SqlCommand();
            cmd.CommandText = "pEditLotMaster";
            cmd.CommandTimeout = 180;
            cmd.CommandType = CommandType.StoredProcedure;
            System.Data.SqlClient.SqlParameter _Lotmaster = new System.Data.SqlClient.SqlParameter();
            _Lotmaster.ParameterName = "@Lotmaster";
            _Lotmaster.Size = -1;
            _Lotmaster.Value = Lotmaster;
            cmd.Parameters.Add(_Lotmaster);
            System.Data.SqlClient.SqlParameter _investigation = new System.Data.SqlClient.SqlParameter();
            _investigation.ParameterName = "@investigation";
            _investigation.Size = -1;
            _investigation.Value = investigation;
            cmd.Parameters.Add(_investigation);
            System.Data.SqlClient.SqlParameter _ContextInfo = new System.Data.SqlClient.SqlParameter();
            _ContextInfo.ParameterName = "@ContextInfo";
            _ContextInfo.Size = -1;
            _ContextInfo.Value = ContextInfo;
            cmd.Parameters.Add(_ContextInfo);
            return cmd;
        }
        public static System.Data.SqlClient.SqlCommand pDeleteLotmasterCommand(long LotID, System.Data.DataTable ContextInfo)
        {
            System.Data.SqlClient.SqlCommand cmd;
            cmd = new System.Data.SqlClient.SqlCommand();
            cmd.CommandText = "pDeleteLotmaster";
            cmd.CommandTimeout = 180;
            cmd.CommandType = CommandType.StoredProcedure;
            System.Data.SqlClient.SqlParameter _LotID = new System.Data.SqlClient.SqlParameter();
            _LotID.ParameterName = "@LotID";
            _LotID.Size = -1;
            _LotID.Value = LotID;
            cmd.Parameters.Add(_LotID);
            System.Data.SqlClient.SqlParameter _ContextInfo = new System.Data.SqlClient.SqlParameter();
            _ContextInfo.ParameterName = "@ContextInfo";
            _ContextInfo.Size = -1;
            _ContextInfo.Value = ContextInfo;
            cmd.Parameters.Add(_ContextInfo);
            return cmd;
        }

        public static System.Data.SqlClient.SqlCommand PgetQMSAutoCompDDLCommand(string Suggestion, string ControlName, System.Data.DataTable ContextInfo)
        {
            System.Data.SqlClient.SqlCommand cmd;
            cmd = new System.Data.SqlClient.SqlCommand();
            cmd.CommandText = "PgetQMSAutoCompDDL";
            cmd.CommandTimeout = 180;
            cmd.CommandType = CommandType.StoredProcedure;
            System.Data.SqlClient.SqlParameter _Suggestion = new System.Data.SqlClient.SqlParameter();
            _Suggestion.ParameterName = "@Suggestion";
            _Suggestion.Size = 50;
            _Suggestion.Value = Suggestion;
            cmd.Parameters.Add(_Suggestion);
            System.Data.SqlClient.SqlParameter _ControlName = new System.Data.SqlClient.SqlParameter();
            _ControlName.ParameterName = "@ControlName";
            _ControlName.Size = 50;
            _ControlName.Value = ControlName;
            cmd.Parameters.Add(_ControlName);
            System.Data.SqlClient.SqlParameter _ContextInfo = new System.Data.SqlClient.SqlParameter();
            _ContextInfo.ParameterName = "@ContextInfo";
            _ContextInfo.Size = -1;
            _ContextInfo.Value = ContextInfo;
            cmd.Parameters.Add(_ContextInfo);
            return cmd;
        }


        public static System.Data.SqlClient.SqlCommand pGetQCLJChartDetailsCommand(int LocationID, long InstrumentID, long AnalyteID, string Level, string FromDate, string ToDate, System.Data.DataTable ContextInfo)
        {
            System.Data.SqlClient.SqlCommand cmd;
            cmd = new System.Data.SqlClient.SqlCommand();
            cmd.CommandText = "pGetQCLJChartDetails";
            cmd.CommandTimeout = 180;
            cmd.CommandType = CommandType.StoredProcedure;
            System.Data.SqlClient.SqlParameter _LocationID = new System.Data.SqlClient.SqlParameter();
            _LocationID.ParameterName = "@LocationID";
            _LocationID.Size = -1;
            _LocationID.Value = LocationID;
            cmd.Parameters.Add(_LocationID);
            System.Data.SqlClient.SqlParameter _InstrumentID = new System.Data.SqlClient.SqlParameter();
            _InstrumentID.ParameterName = "@InstrumentID";
            _InstrumentID.Size = -1;
            _InstrumentID.Value = InstrumentID;
            cmd.Parameters.Add(_InstrumentID);
            System.Data.SqlClient.SqlParameter _AnalyteID = new System.Data.SqlClient.SqlParameter();
            _AnalyteID.ParameterName = "@AnalyteID";
            _AnalyteID.Size = -1;
            _AnalyteID.Value = AnalyteID;
            cmd.Parameters.Add(_AnalyteID);
            System.Data.SqlClient.SqlParameter _Level = new System.Data.SqlClient.SqlParameter();
            _Level.ParameterName = "@Level";
            _Level.Size = 20;
            _Level.Value = Level;
            cmd.Parameters.Add(_Level);
            System.Data.SqlClient.SqlParameter _FromDate = new System.Data.SqlClient.SqlParameter();
            _FromDate.ParameterName = "@FromDate";
            _FromDate.Size = -1;
            _FromDate.Value = FromDate;
            cmd.Parameters.Add(_FromDate);
            System.Data.SqlClient.SqlParameter _ToDate = new System.Data.SqlClient.SqlParameter();
            _ToDate.ParameterName = "@ToDate";
            _ToDate.Size = -1;
            _ToDate.Value = ToDate;
            cmd.Parameters.Add(_ToDate);
            System.Data.SqlClient.SqlParameter _ContextInfo = new System.Data.SqlClient.SqlParameter();
            _ContextInfo.ParameterName = "@ContextInfo";
            _ContextInfo.Size = -1;
            _ContextInfo.Value = ContextInfo;
            cmd.Parameters.Add(_ContextInfo);
            return cmd;
        }
		
        public static System.Data.SqlClient.SqlCommand pGetAnalyteMasterDetailsCommand(long POrgId, System.Data.DataTable ContextInfo)
        {
            System.Data.SqlClient.SqlCommand cmd;
            cmd = new System.Data.SqlClient.SqlCommand();
            cmd.CommandText = "pGetAnalyteMasterDetails";
            cmd.CommandTimeout = 180;
            cmd.CommandType = CommandType.StoredProcedure;
            System.Data.SqlClient.SqlParameter _POrgId = new System.Data.SqlClient.SqlParameter();
            _POrgId.ParameterName = "@POrgId";
            _POrgId.Size = -1;
            _POrgId.Value = POrgId;
            cmd.Parameters.Add(_POrgId);
            System.Data.SqlClient.SqlParameter _ContextInfo = new System.Data.SqlClient.SqlParameter();
            _ContextInfo.ParameterName = "@ContextInfo";
            _ContextInfo.Size = -1;
            _ContextInfo.Value = ContextInfo;
            cmd.Parameters.Add(_ContextInfo);
            return cmd;
        }
        public static System.Data.SqlClient.SqlCommand pDeleteAnalyteMasrerCommand(long PID, System.Data.DataTable ContextInfo)
        {
            System.Data.SqlClient.SqlCommand cmd;
            cmd = new System.Data.SqlClient.SqlCommand();
            cmd.CommandText = "pDeleteAnalyteMasrer";
            cmd.CommandTimeout = 180;
            cmd.CommandType = CommandType.StoredProcedure;
            System.Data.SqlClient.SqlParameter _PID = new System.Data.SqlClient.SqlParameter();
            _PID.ParameterName = "@PID";
            _PID.Size = -1;
            _PID.Value = PID;
            cmd.Parameters.Add(_PID);
            System.Data.SqlClient.SqlParameter _ContextInfo = new System.Data.SqlClient.SqlParameter();
            _ContextInfo.ParameterName = "@ContextInfo";
            _ContextInfo.Size = -1;
            _ContextInfo.Value = ContextInfo;
            cmd.Parameters.Add(_ContextInfo);
            return cmd;
        }
        public static System.Data.SqlClient.SqlCommand pUpdateAnalyteMasterDetailsCommand(
                   long pOrgID,
                   string pAnalyteName,
                   long pDepatmentID,
                   long pContatinerID,
                   string pResultValueType,
                   long pSampleID,
                   string pDecimalPlaces,
                   long pMethodID,
                   long pPrincipleID,
                   string pClassfication,
                   int pCutOffTimeValue,
                   string pCutOffTimeType,
                   string pIsActive,
                   string pIsNABL,
                   long InvestigationID,
                   System.Data.DataTable ContextInfo)
        {
            System.Data.SqlClient.SqlCommand cmd;
            cmd = new System.Data.SqlClient.SqlCommand();
            cmd.CommandText = "pUpdateAnalyteMasterDetails";
            cmd.CommandTimeout = 180;
            cmd.CommandType = CommandType.StoredProcedure;
            System.Data.SqlClient.SqlParameter _pOrgID = new System.Data.SqlClient.SqlParameter();
            _pOrgID.ParameterName = "@pOrgID";
            _pOrgID.Size = -1;
            _pOrgID.Value = pOrgID;
            cmd.Parameters.Add(_pOrgID);
            System.Data.SqlClient.SqlParameter _pAnalyteName = new System.Data.SqlClient.SqlParameter();
            _pAnalyteName.ParameterName = "@pAnalyteName";
            _pAnalyteName.Size = 250;
            _pAnalyteName.Value = pAnalyteName;
            cmd.Parameters.Add(_pAnalyteName);
            System.Data.SqlClient.SqlParameter _pDepatmentID = new System.Data.SqlClient.SqlParameter();
            _pDepatmentID.ParameterName = "@pDepatmentID";
            _pDepatmentID.Size = -1;
            _pDepatmentID.Value = pDepatmentID;
            cmd.Parameters.Add(_pDepatmentID);
            System.Data.SqlClient.SqlParameter _pContatinerID = new System.Data.SqlClient.SqlParameter();
            _pContatinerID.ParameterName = "@pContatinerID";
            _pContatinerID.Size = -1;
            _pContatinerID.Value = pContatinerID;
            cmd.Parameters.Add(_pContatinerID);
            System.Data.SqlClient.SqlParameter _pResultValueType = new System.Data.SqlClient.SqlParameter();
            _pResultValueType.ParameterName = "@pResultValueType";
            _pResultValueType.Size = 250;
            _pResultValueType.Value = pResultValueType;
            cmd.Parameters.Add(_pResultValueType);
            System.Data.SqlClient.SqlParameter _pSampleID = new System.Data.SqlClient.SqlParameter();
            _pSampleID.ParameterName = "@pSampleID";
            _pSampleID.Size = -1;
            _pSampleID.Value = pSampleID;
            cmd.Parameters.Add(_pSampleID);
            System.Data.SqlClient.SqlParameter _pDecimalPlaces = new System.Data.SqlClient.SqlParameter();
            _pDecimalPlaces.ParameterName = "@pDecimalPlaces";
            _pDecimalPlaces.Size = 250;
            _pDecimalPlaces.Value = pDecimalPlaces;
            cmd.Parameters.Add(_pDecimalPlaces);
            System.Data.SqlClient.SqlParameter _pMethodID = new System.Data.SqlClient.SqlParameter();
            _pMethodID.ParameterName = "@pMethodID";
            _pMethodID.Size = -1;
            _pMethodID.Value = pMethodID;
            cmd.Parameters.Add(_pMethodID);
            System.Data.SqlClient.SqlParameter _pPrincipleID = new System.Data.SqlClient.SqlParameter();
            _pPrincipleID.ParameterName = "@pPrincipleID";
            _pPrincipleID.Size = -1;
            _pPrincipleID.Value = pPrincipleID;
            cmd.Parameters.Add(_pPrincipleID);
            System.Data.SqlClient.SqlParameter _pClassfication = new System.Data.SqlClient.SqlParameter();
            _pClassfication.ParameterName = "@pClassfication";
            _pClassfication.Size = 250;
            _pClassfication.Value = pClassfication;
            cmd.Parameters.Add(_pClassfication);
            System.Data.SqlClient.SqlParameter _pCutOffTimeValue = new System.Data.SqlClient.SqlParameter();
            _pCutOffTimeValue.ParameterName = "@pCutOffTimeValue";
            _pCutOffTimeValue.Size = -1;
            _pCutOffTimeValue.Value = pCutOffTimeValue;
            cmd.Parameters.Add(_pCutOffTimeValue);
            System.Data.SqlClient.SqlParameter _pCutOffTimeType = new System.Data.SqlClient.SqlParameter();
            _pCutOffTimeType.ParameterName = "@pCutOffTimeType";
            _pCutOffTimeType.Size = 250;
            _pCutOffTimeType.Value = pCutOffTimeType;
            cmd.Parameters.Add(_pCutOffTimeType);
            System.Data.SqlClient.SqlParameter _pIsActive = new System.Data.SqlClient.SqlParameter();
            _pIsActive.ParameterName = "@pIsActive";
            _pIsActive.Size = 1;
            _pIsActive.Value = pIsActive;
            cmd.Parameters.Add(_pIsActive);
            System.Data.SqlClient.SqlParameter _pIsNABL = new System.Data.SqlClient.SqlParameter();
            _pIsNABL.ParameterName = "@pIsNABL";
            _pIsNABL.Size = 1;
            _pIsNABL.Value = pIsNABL;
            cmd.Parameters.Add(_pIsNABL);
            System.Data.SqlClient.SqlParameter _InvestigationID = new System.Data.SqlClient.SqlParameter();
            _InvestigationID.ParameterName = "@InvestigationID";
            _InvestigationID.Size = -1;
            _InvestigationID.Value = InvestigationID;
            cmd.Parameters.Add(_InvestigationID);
            System.Data.SqlClient.SqlParameter _ContextInfo = new System.Data.SqlClient.SqlParameter();
            _ContextInfo.ParameterName = "@ContextInfo";
            _ContextInfo.Size = -1;
            _ContextInfo.Value = ContextInfo;
            cmd.Parameters.Add(_ContextInfo);
            return cmd;
        }

        public static System.Data.SqlClient.SqlCommand pSaveInvInstrumentMasterCommand(int pOrgID, int pRoleID, System.Data.DataTable pInvInstrumentMaster, System.Data.DataTable ContextInfo, string pMaintenanceDoneDate, string pMaintenanceDueDate, string pCalibrationDoneDate, string pCalibrationDueDate, System.Data.DataTable DeptID, out int InstrumentID)
        {
            System.Data.SqlClient.SqlCommand cmd;
            cmd = new System.Data.SqlClient.SqlCommand();
            cmd.CommandText = "pSaveInvInstrumentMaster";
            cmd.CommandTimeout = 180;
            cmd.CommandType = CommandType.StoredProcedure;
            System.Data.SqlClient.SqlParameter _pOrgID = new System.Data.SqlClient.SqlParameter();
            _pOrgID.ParameterName = "@pOrgID";
            _pOrgID.Size = -1;
            _pOrgID.Value = pOrgID;
            cmd.Parameters.Add(_pOrgID);
            System.Data.SqlClient.SqlParameter _pRoleID = new System.Data.SqlClient.SqlParameter();
            _pRoleID.ParameterName = "@pRoleID";
            _pRoleID.Size = -1;
            _pRoleID.Value = pRoleID;
            cmd.Parameters.Add(_pRoleID);
            System.Data.SqlClient.SqlParameter _pInvInstrumentMaster = new System.Data.SqlClient.SqlParameter();
            _pInvInstrumentMaster.ParameterName = "@pInvInstrumentMaster";
            _pInvInstrumentMaster.Size = -1;
            _pInvInstrumentMaster.Value = pInvInstrumentMaster;
            cmd.Parameters.Add(_pInvInstrumentMaster);
            System.Data.SqlClient.SqlParameter _ContextInfo = new System.Data.SqlClient.SqlParameter();
            _ContextInfo.ParameterName = "@ContextInfo";
            _ContextInfo.Size = -1;
            _ContextInfo.Value = ContextInfo;
            cmd.Parameters.Add(_ContextInfo);
            System.Data.SqlClient.SqlParameter _pMaintenanceDoneDate = new System.Data.SqlClient.SqlParameter();
            _pMaintenanceDoneDate.ParameterName = "@pMaintenanceDoneDate";
            _pMaintenanceDoneDate.Size = 100;
            _pMaintenanceDoneDate.Value = pMaintenanceDoneDate;
            cmd.Parameters.Add(_pMaintenanceDoneDate);
            System.Data.SqlClient.SqlParameter _pMaintenanceDueDate = new System.Data.SqlClient.SqlParameter();
            _pMaintenanceDueDate.ParameterName = "@pMaintenanceDueDate";
            _pMaintenanceDueDate.Size = 100;
            _pMaintenanceDueDate.Value = pMaintenanceDueDate;
            cmd.Parameters.Add(_pMaintenanceDueDate);
            System.Data.SqlClient.SqlParameter _pCalibrationDoneDate = new System.Data.SqlClient.SqlParameter();
            _pCalibrationDoneDate.ParameterName = "@pCalibrationDoneDate";
            _pCalibrationDoneDate.Size = 100;
            _pCalibrationDoneDate.Value = pCalibrationDoneDate;
            cmd.Parameters.Add(_pCalibrationDoneDate);
            System.Data.SqlClient.SqlParameter _pCalibrationDueDate = new System.Data.SqlClient.SqlParameter();
            _pCalibrationDueDate.ParameterName = "@pCalibrationDueDate";
            _pCalibrationDueDate.Size = 100;
            _pCalibrationDueDate.Value = pCalibrationDueDate;
            cmd.Parameters.Add(_pCalibrationDueDate);
            System.Data.SqlClient.SqlParameter _DeptID = new System.Data.SqlClient.SqlParameter();
            _DeptID.ParameterName = "@DeptID";
            _DeptID.Size = -1;
            _DeptID.Value = DeptID;
            cmd.Parameters.Add(_DeptID);
            InstrumentID = -1;
            System.Data.SqlClient.SqlParameter _InstrumentID = new System.Data.SqlClient.SqlParameter();
            _InstrumentID.ParameterName = "@InstrumentID";
            _InstrumentID.Size = -1;
            _InstrumentID.Value = InstrumentID;
            cmd.Parameters.Add(_InstrumentID);
            _InstrumentID.Direction = ParameterDirection.Output;
            InstrumentID = ((int)(_InstrumentID.Value));
            return cmd;
        }

        
		  #region Rule Master Develped by Rajkumar
        public static System.Data.SqlClient.SqlCommand PgetlotdetailsCommand(long POrgId, System.Data.DataTable ContextInfo)
        {
            System.Data.SqlClient.SqlCommand cmd;
            cmd = new System.Data.SqlClient.SqlCommand();
            cmd.CommandText = "Pgetlotdetails";
            cmd.CommandTimeout = 180;
            cmd.CommandType = CommandType.StoredProcedure;
            System.Data.SqlClient.SqlParameter _POrgId = new System.Data.SqlClient.SqlParameter();
            _POrgId.ParameterName = "@POrgId";
            _POrgId.Size = -1;
            _POrgId.Value = POrgId;
            cmd.Parameters.Add(_POrgId);
            System.Data.SqlClient.SqlParameter _ContextInfo = new System.Data.SqlClient.SqlParameter();
            _ContextInfo.ParameterName = "@ContextInfo";
            _ContextInfo.Size = -1;
            _ContextInfo.Value = ContextInfo;
            cmd.Parameters.Add(_ContextInfo);
            return cmd;
        }
        public static System.Data.SqlClient.SqlCommand PgetqcrulemasterCommand(long POrgId, System.Data.DataTable ContextInfo)
        {
            System.Data.SqlClient.SqlCommand cmd;
            cmd = new System.Data.SqlClient.SqlCommand();
            cmd.CommandText = "Pgetqcrulemaster";
            cmd.CommandTimeout = 180;
            cmd.CommandType = CommandType.StoredProcedure;
            System.Data.SqlClient.SqlParameter _POrgId = new System.Data.SqlClient.SqlParameter();
            _POrgId.ParameterName = "@POrgId";
            _POrgId.Size = -1;
            _POrgId.Value = POrgId;
            cmd.Parameters.Add(_POrgId);
            System.Data.SqlClient.SqlParameter _ContextInfo = new System.Data.SqlClient.SqlParameter();
            _ContextInfo.ParameterName = "@ContextInfo";
            _ContextInfo.Size = -1;
            _ContextInfo.Value = ContextInfo;
            cmd.Parameters.Add(_ContextInfo);
            return cmd;
        }

        public static System.Data.SqlClient.SqlCommand PsaveqcrulemasterCommand(long LotId, long Analyte, string ManufacturerRefRange, string ManufacturerMean, int Run, decimal LabRefRange, decimal LabMean, decimal LabSD, string LJChartCalc, long OrgId, long CreatedBy, System.DateTime CreatedAt, long ModifiedBy, System.DateTime ModifiedAt)
        {
            System.Data.SqlClient.SqlCommand cmd;
            cmd = new System.Data.SqlClient.SqlCommand();
            cmd.CommandText = "Psaveqcrulemaster";
            cmd.CommandTimeout = 180;
            cmd.CommandType = CommandType.StoredProcedure;
            System.Data.SqlClient.SqlParameter _LotId = new System.Data.SqlClient.SqlParameter();
            _LotId.ParameterName = "@LotId";
            _LotId.Size = -1;
            _LotId.Value = LotId;
            cmd.Parameters.Add(_LotId);
            System.Data.SqlClient.SqlParameter _Analyte = new System.Data.SqlClient.SqlParameter();
            _Analyte.ParameterName = "@Analyte";
            _Analyte.Size = -1;
            _Analyte.Value = Analyte;
            cmd.Parameters.Add(_Analyte);
            System.Data.SqlClient.SqlParameter _ManufacturerRefRange = new System.Data.SqlClient.SqlParameter();
            _ManufacturerRefRange.ParameterName = "@ManufacturerRefRange";
            _ManufacturerRefRange.Size = 512;
            _ManufacturerRefRange.Value = ManufacturerRefRange;
            cmd.Parameters.Add(_ManufacturerRefRange);
            System.Data.SqlClient.SqlParameter _ManufacturerMean = new System.Data.SqlClient.SqlParameter();
            _ManufacturerMean.ParameterName = "@ManufacturerMean";
            _ManufacturerMean.Size = 512;
            _ManufacturerMean.Value = ManufacturerMean;
            cmd.Parameters.Add(_ManufacturerMean);
            System.Data.SqlClient.SqlParameter _Run = new System.Data.SqlClient.SqlParameter();
            _Run.ParameterName = "@Run";
            _Run.Size = -1;
            _Run.Value = Run;
            cmd.Parameters.Add(_Run);
            System.Data.SqlClient.SqlParameter _LabRefRange = new System.Data.SqlClient.SqlParameter();
            _LabRefRange.ParameterName = "@LabRefRange";
            _LabRefRange.Size = -1;
            _LabRefRange.Value = LabRefRange;
            cmd.Parameters.Add(_LabRefRange);
            System.Data.SqlClient.SqlParameter _LabMean = new System.Data.SqlClient.SqlParameter();
            _LabMean.ParameterName = "@LabMean";
            _LabMean.Size = -1;
            _LabMean.Value = LabMean;
            cmd.Parameters.Add(_LabMean);
            System.Data.SqlClient.SqlParameter _LabSD = new System.Data.SqlClient.SqlParameter();
            _LabSD.ParameterName = "@LabSD";
            _LabSD.Size = -1;
            _LabSD.Value = LabSD;
            cmd.Parameters.Add(_LabSD);
            System.Data.SqlClient.SqlParameter _LJChartCalc = new System.Data.SqlClient.SqlParameter();
            _LJChartCalc.ParameterName = "@LJChartCalc";
            _LJChartCalc.Size = 512;
            _LJChartCalc.Value = LJChartCalc;
            cmd.Parameters.Add(_LJChartCalc);
            System.Data.SqlClient.SqlParameter _OrgId = new System.Data.SqlClient.SqlParameter();
            _OrgId.ParameterName = "@OrgId";
            _OrgId.Size = -1;
            _OrgId.Value = OrgId;
            cmd.Parameters.Add(_OrgId);
            System.Data.SqlClient.SqlParameter _CreatedBy = new System.Data.SqlClient.SqlParameter();
            _CreatedBy.ParameterName = "@CreatedBy";
            _CreatedBy.Size = -1;
            _CreatedBy.Value = CreatedBy;
            cmd.Parameters.Add(_CreatedBy);
            System.Data.SqlClient.SqlParameter _CreatedAt = new System.Data.SqlClient.SqlParameter();
            _CreatedAt.ParameterName = "@CreatedAt";
            _CreatedAt.Size = -1;
            _CreatedAt.Value = CreatedAt;
            cmd.Parameters.Add(_CreatedAt);
            System.Data.SqlClient.SqlParameter _ModifiedBy = new System.Data.SqlClient.SqlParameter();
            _ModifiedBy.ParameterName = "@ModifiedBy";
            _ModifiedBy.Size = -1;
            _ModifiedBy.Value = ModifiedBy;
            cmd.Parameters.Add(_ModifiedBy);
            System.Data.SqlClient.SqlParameter _ModifiedAt = new System.Data.SqlClient.SqlParameter();
            _ModifiedAt.ParameterName = "@ModifiedAt";
            _ModifiedAt.Size = -1;
            _ModifiedAt.Value = ModifiedAt;
            cmd.Parameters.Add(_ModifiedAt);
            return cmd;
        }

        public static System.Data.SqlClient.SqlCommand pDeleteRuleMasterCommand(long QCRID, System.Data.DataTable ContextInfo)
        {
            System.Data.SqlClient.SqlCommand cmd;
            cmd = new System.Data.SqlClient.SqlCommand();
            cmd.CommandText = "pDeleteRuleMaster";
            cmd.CommandTimeout = 180;
            cmd.CommandType = CommandType.StoredProcedure;
            System.Data.SqlClient.SqlParameter _QCRID = new System.Data.SqlClient.SqlParameter();
            _QCRID.ParameterName = "@QCRID";
            _QCRID.Size = -1;
            _QCRID.Value = QCRID;
            cmd.Parameters.Add(_QCRID);
            System.Data.SqlClient.SqlParameter _ContextInfo = new System.Data.SqlClient.SqlParameter();
            _ContextInfo.ParameterName = "@ContextInfo";
            _ContextInfo.Size = -1;
            _ContextInfo.Value = ContextInfo;
            cmd.Parameters.Add(_ContextInfo);
            return cmd;
        }

        public static System.Data.SqlClient.SqlCommand pUpdateQcRuleMasterCommand(long QCRID, long LotId, long Analyte, string ManufacturerRefRange, string ManufacturerMean, int Run, decimal LabRefRange, decimal LabMean, decimal LabSD, string LJChartCalc, long OrgId, System.Data.DataTable ContextInfo)
        {
            System.Data.SqlClient.SqlCommand cmd;
            cmd = new System.Data.SqlClient.SqlCommand();
            cmd.CommandText = "pUpdateQcRuleMaster";
            cmd.CommandTimeout = 180;
            cmd.CommandType = CommandType.StoredProcedure;
            System.Data.SqlClient.SqlParameter _QCRID = new System.Data.SqlClient.SqlParameter();
            _QCRID.ParameterName = "@QCRID";
            _QCRID.Size = -1;
            _QCRID.Value = QCRID;
            cmd.Parameters.Add(_QCRID);
            System.Data.SqlClient.SqlParameter _LotId = new System.Data.SqlClient.SqlParameter();
            _LotId.ParameterName = "@LotId";
            _LotId.Size = -1;
            _LotId.Value = LotId;
            cmd.Parameters.Add(_LotId);
            System.Data.SqlClient.SqlParameter _Analyte = new System.Data.SqlClient.SqlParameter();
            _Analyte.ParameterName = "@Analyte";
            _Analyte.Size = -1;
            _Analyte.Value = Analyte;
            cmd.Parameters.Add(_Analyte);
            System.Data.SqlClient.SqlParameter _ManufacturerRefRange = new System.Data.SqlClient.SqlParameter();
            _ManufacturerRefRange.ParameterName = "@ManufacturerRefRange";
            _ManufacturerRefRange.Size = 512;
            _ManufacturerRefRange.Value = ManufacturerRefRange;
            cmd.Parameters.Add(_ManufacturerRefRange);
            System.Data.SqlClient.SqlParameter _ManufacturerMean = new System.Data.SqlClient.SqlParameter();
            _ManufacturerMean.ParameterName = "@ManufacturerMean";
            _ManufacturerMean.Size = 512;
            _ManufacturerMean.Value = ManufacturerMean;
            cmd.Parameters.Add(_ManufacturerMean);
            System.Data.SqlClient.SqlParameter _Run = new System.Data.SqlClient.SqlParameter();
            _Run.ParameterName = "@Run";
            _Run.Size = -1;
            _Run.Value = Run;
            cmd.Parameters.Add(_Run);
            System.Data.SqlClient.SqlParameter _LabRefRange = new System.Data.SqlClient.SqlParameter();
            _LabRefRange.ParameterName = "@LabRefRange";
            _LabRefRange.Size = -1;
            _LabRefRange.Value = LabRefRange;
            cmd.Parameters.Add(_LabRefRange);
            System.Data.SqlClient.SqlParameter _LabMean = new System.Data.SqlClient.SqlParameter();
            _LabMean.ParameterName = "@LabMean";
            _LabMean.Size = -1;
            _LabMean.Value = LabMean;
            cmd.Parameters.Add(_LabMean);
            System.Data.SqlClient.SqlParameter _LabSD = new System.Data.SqlClient.SqlParameter();
            _LabSD.ParameterName = "@LabSD";
            _LabSD.Size = -1;
            _LabSD.Value = LabSD;
            cmd.Parameters.Add(_LabSD);
            System.Data.SqlClient.SqlParameter _LJChartCalc = new System.Data.SqlClient.SqlParameter();
            _LJChartCalc.ParameterName = "@LJChartCalc";
            _LJChartCalc.Size = 512;
            _LJChartCalc.Value = LJChartCalc;
            cmd.Parameters.Add(_LJChartCalc);
            System.Data.SqlClient.SqlParameter _OrgId = new System.Data.SqlClient.SqlParameter();
            _OrgId.ParameterName = "@OrgId";
            _OrgId.Size = -1;
            _OrgId.Value = OrgId;
            cmd.Parameters.Add(_OrgId);
            System.Data.SqlClient.SqlParameter _ContextInfo = new System.Data.SqlClient.SqlParameter();
            _ContextInfo.ParameterName = "@ContextInfo";
            _ContextInfo.Size = -1;
            _ContextInfo.Value = ContextInfo;
            cmd.Parameters.Add(_ContextInfo);
            return cmd;
        }
        #region Inter Lab Comaprison
       
        public static System.Data.SqlClient.SqlCommand PgetDepartmentInvetigationCommand(int Departmentid, string type,int VendorID, DateTime ProcessingDateTime, System.Data.DataTable ContextInfo)
        {
            System.Data.SqlClient.SqlCommand cmd;
            cmd = new System.Data.SqlClient.SqlCommand();
            cmd.CommandText = "PgetDepartmentInvetigation";
            cmd.CommandTimeout = 180;
            cmd.CommandType = CommandType.StoredProcedure;

            System.Data.SqlClient.SqlParameter _Departmentid = new System.Data.SqlClient.SqlParameter();
            _Departmentid.ParameterName = "@Departmentid";
            _Departmentid.Size = -1;
            _Departmentid.Value = Departmentid;
            cmd.Parameters.Add(_Departmentid);

            System.Data.SqlClient.SqlParameter _VendorID = new System.Data.SqlClient.SqlParameter();
            _VendorID.ParameterName = "@VendorID";
            _VendorID.Size = 100;
            _VendorID.Value = VendorID;
            cmd.Parameters.Add(_VendorID);

            System.Data.SqlClient.SqlParameter _ProcessingDateTime = new System.Data.SqlClient.SqlParameter();
            _ProcessingDateTime.ParameterName = "@Processingdate";
            _ProcessingDateTime.Size = 100;
            _ProcessingDateTime.Value = ProcessingDateTime;
            cmd.Parameters.Add(_ProcessingDateTime);

            System.Data.SqlClient.SqlParameter _type = new System.Data.SqlClient.SqlParameter();
            _type.ParameterName = "@type";
            _type.Size = 100;
            _type.Value = type;
            cmd.Parameters.Add(_type);

            System.Data.SqlClient.SqlParameter _ContextInfo = new System.Data.SqlClient.SqlParameter();
            _ContextInfo.ParameterName = "@ContextInfo";
            _ContextInfo.Size = -1;
            _ContextInfo.Value = ContextInfo;
            cmd.Parameters.Add(_ContextInfo);
            return cmd;
        }
        public static System.Data.SqlClient.SqlCommand PinsertinternalExternalQualityMasterCommand(
                    long ExValueId,
                    long ExAssureId,
                    long VendorID,
                    string CycleIdentification,
                    System.DateTime DateOfProcessing,
                    string Interpretation,
                    string HasFile,
                    string FileType,
                    string FilePath,
                    long EQMID,
                    long InvestigationID,
                    string ResultValue,
                    string InternalResultValue,
                    string ExternalResultValue,
                    decimal Deviation,
                    decimal Correction,
                    string Zscore,
                    string Status,
                    string RootCause,
                    string CorrectiveAction,
                    string PreventiveAction,
                    long OrgId,
                    System.Data.DataTable ContextInfo)
        {
            System.Data.SqlClient.SqlCommand cmd;
            cmd = new System.Data.SqlClient.SqlCommand();
            cmd.CommandText = "PinsertinternalExternalQualityMaster";
            cmd.CommandTimeout = 180;
            cmd.CommandType = CommandType.StoredProcedure;
            System.Data.SqlClient.SqlParameter _ExValueId = new System.Data.SqlClient.SqlParameter();
            _ExValueId.ParameterName = "@ExValueId";
            _ExValueId.Size = -1;
            _ExValueId.Value = ExValueId;
            cmd.Parameters.Add(_ExValueId);
            System.Data.SqlClient.SqlParameter _ExAssureId = new System.Data.SqlClient.SqlParameter();
            _ExAssureId.ParameterName = "@ExAssureId";
            _ExAssureId.Size = -1;
            _ExAssureId.Value = ExAssureId;
            cmd.Parameters.Add(_ExAssureId);
            System.Data.SqlClient.SqlParameter _VendorID = new System.Data.SqlClient.SqlParameter();
            _VendorID.ParameterName = "@VendorID";
            _VendorID.Size = -1;
            _VendorID.Value = VendorID;
            cmd.Parameters.Add(_VendorID);
            System.Data.SqlClient.SqlParameter _CycleIdentification = new System.Data.SqlClient.SqlParameter();
            _CycleIdentification.ParameterName = "@CycleIdentification";
            _CycleIdentification.Size = 500;
            _CycleIdentification.Value = CycleIdentification;
            cmd.Parameters.Add(_CycleIdentification);
            System.Data.SqlClient.SqlParameter _DateOfProcessing = new System.Data.SqlClient.SqlParameter();
            _DateOfProcessing.ParameterName = "@DateOfProcessing";
            _DateOfProcessing.Size = -1;
            _DateOfProcessing.Value = DateOfProcessing;
            cmd.Parameters.Add(_DateOfProcessing);
            System.Data.SqlClient.SqlParameter _Interpretation = new System.Data.SqlClient.SqlParameter();
            _Interpretation.ParameterName = "@Interpretation";
            _Interpretation.Size = 500;
            _Interpretation.Value = Interpretation;
            cmd.Parameters.Add(_Interpretation);
            System.Data.SqlClient.SqlParameter _HasFile = new System.Data.SqlClient.SqlParameter();
            _HasFile.ParameterName = "@HasFile";
            _HasFile.Size = 2;
            _HasFile.Value = HasFile;
            cmd.Parameters.Add(_HasFile);
            System.Data.SqlClient.SqlParameter _FileType = new System.Data.SqlClient.SqlParameter();
            _FileType.ParameterName = "@FileType";
            _FileType.Size = 15;
            _FileType.Value = FileType;
            cmd.Parameters.Add(_FileType);
            System.Data.SqlClient.SqlParameter _FilePath = new System.Data.SqlClient.SqlParameter();
            _FilePath.ParameterName = "@FilePath";
            _FilePath.Size = 100;
            _FilePath.Value = FilePath;
            cmd.Parameters.Add(_FilePath);
            System.Data.SqlClient.SqlParameter _EQMID = new System.Data.SqlClient.SqlParameter();
            _EQMID.ParameterName = "@EQMID";
            _EQMID.Size = -1;
            _EQMID.Value = EQMID;
            cmd.Parameters.Add(_EQMID);
            System.Data.SqlClient.SqlParameter _InvestigationID = new System.Data.SqlClient.SqlParameter();
            _InvestigationID.ParameterName = "@InvestigationID";
            _InvestigationID.Size = -1;
            _InvestigationID.Value = InvestigationID;
            cmd.Parameters.Add(_InvestigationID);
            System.Data.SqlClient.SqlParameter _ResultValue = new System.Data.SqlClient.SqlParameter();
            _ResultValue.ParameterName = "@ResultValue";
            _ResultValue.Size = 15;
            _ResultValue.Value = ResultValue;
            cmd.Parameters.Add(_ResultValue);
            System.Data.SqlClient.SqlParameter _InternalResultValue = new System.Data.SqlClient.SqlParameter();
            _InternalResultValue.ParameterName = "@InternalResultValue";
            _InternalResultValue.Size = 15;
            _InternalResultValue.Value = InternalResultValue;
            cmd.Parameters.Add(_InternalResultValue);
            System.Data.SqlClient.SqlParameter _ExternalResultValue = new System.Data.SqlClient.SqlParameter();
            _ExternalResultValue.ParameterName = "@ExternalResultValue";
            _ExternalResultValue.Size = 15;
            _ExternalResultValue.Value = ExternalResultValue;
            cmd.Parameters.Add(_ExternalResultValue);
            System.Data.SqlClient.SqlParameter _Deviation = new System.Data.SqlClient.SqlParameter();
            _Deviation.ParameterName = "@Deviation";
            _Deviation.Size = -1;
            _Deviation.Value = Deviation;
            cmd.Parameters.Add(_Deviation);
            System.Data.SqlClient.SqlParameter _Correction = new System.Data.SqlClient.SqlParameter();
            _Correction.ParameterName = "@Correction";
            _Correction.Size = -1;
            _Correction.Value = Correction;
            cmd.Parameters.Add(_Correction);
            System.Data.SqlClient.SqlParameter _Zscore = new System.Data.SqlClient.SqlParameter();
            _Zscore.ParameterName = "@Zscore";
            _Zscore.Size = 15;
            _Zscore.Value = Zscore;
            cmd.Parameters.Add(_Zscore);
            System.Data.SqlClient.SqlParameter _Status = new System.Data.SqlClient.SqlParameter();
            _Status.ParameterName = "@Status";
            _Status.Size = 15;
            _Status.Value = Status;
            cmd.Parameters.Add(_Status);
            System.Data.SqlClient.SqlParameter _RootCause = new System.Data.SqlClient.SqlParameter();
            _RootCause.ParameterName = "@RootCause";
            _RootCause.Size = 500;
            _RootCause.Value = RootCause;
            cmd.Parameters.Add(_RootCause);
            System.Data.SqlClient.SqlParameter _CorrectiveAction = new System.Data.SqlClient.SqlParameter();
            _CorrectiveAction.ParameterName = "@CorrectiveAction";
            _CorrectiveAction.Size = 500;
            _CorrectiveAction.Value = CorrectiveAction;
            cmd.Parameters.Add(_CorrectiveAction);
            System.Data.SqlClient.SqlParameter _PreventiveAction = new System.Data.SqlClient.SqlParameter();
            _PreventiveAction.ParameterName = "@PreventiveAction";
            _PreventiveAction.Size = 500;
            _PreventiveAction.Value = PreventiveAction;
            cmd.Parameters.Add(_PreventiveAction);
            System.Data.SqlClient.SqlParameter _OrgId = new System.Data.SqlClient.SqlParameter();
            _OrgId.ParameterName = "@OrgId";
            _OrgId.Size = -1;
            _OrgId.Value = OrgId;
            cmd.Parameters.Add(_OrgId);
            System.Data.SqlClient.SqlParameter _ContextInfo = new System.Data.SqlClient.SqlParameter();
            _ContextInfo.ParameterName = "@ContextInfo";
            _ContextInfo.Size = -1;
            _ContextInfo.Value = ContextInfo;
            cmd.Parameters.Add(_ContextInfo);
            return cmd;
        }

        public static System.Data.SqlClient.SqlCommand pSaveInternalExternalQualityValuesCommand(System.Data.DataTable UDTInternalExternal, System.Data.DataTable UDTInExQA, System.Data.DataTable ContextInfo)
        {
            System.Data.SqlClient.SqlCommand cmd;
            cmd = new System.Data.SqlClient.SqlCommand();
            cmd.CommandText = "pSaveInternalExternalQualityValues";
            cmd.CommandTimeout = 180;
            cmd.CommandType = CommandType.StoredProcedure;
            System.Data.SqlClient.SqlParameter _UDTInternalExternal = new System.Data.SqlClient.SqlParameter();
            _UDTInternalExternal.ParameterName = "@UDTInternalExternal";
            _UDTInternalExternal.Size = -1;
            _UDTInternalExternal.Value = UDTInternalExternal;
            cmd.Parameters.Add(_UDTInternalExternal);
            System.Data.SqlClient.SqlParameter _UDTInExQA = new System.Data.SqlClient.SqlParameter();
            _UDTInExQA.ParameterName = "@UDTInExQA";
            _UDTInExQA.Size = -1;
            _UDTInExQA.Value = UDTInExQA;
            cmd.Parameters.Add(_UDTInExQA);
            System.Data.SqlClient.SqlParameter _ContextInfo = new System.Data.SqlClient.SqlParameter();
            _ContextInfo.ParameterName = "@ContextInfo";
            _ContextInfo.Size = -1;
            _ContextInfo.Value = ContextInfo;
            cmd.Parameters.Add(_ContextInfo);
            return cmd;
        }
        public static System.Data.SqlClient.SqlCommand PdeleteinternalexternalqualityvalueCommand(long ValId, System.Data.DataTable ContextInfo)
        {
            System.Data.SqlClient.SqlCommand cmd;
            cmd = new System.Data.SqlClient.SqlCommand();
            cmd.CommandText = "Pdeleteinternalexternalqualityvalue";
            cmd.CommandTimeout = 180;
            cmd.CommandType = CommandType.StoredProcedure;
            System.Data.SqlClient.SqlParameter _ValId = new System.Data.SqlClient.SqlParameter();
            _ValId.ParameterName = "@ValId";
            _ValId.Size = -1;
            _ValId.Value = ValId;
            cmd.Parameters.Add(_ValId);
            System.Data.SqlClient.SqlParameter _ContextInfo = new System.Data.SqlClient.SqlParameter();
            _ContextInfo.ParameterName = "@ContextInfo";
            _ContextInfo.Size = -1;
            _ContextInfo.Value = ContextInfo;
            cmd.Parameters.Add(_ContextInfo);
            return cmd;
        }

        #endregion
          #endregion
		       public static System.Data.SqlClient.SqlCommand pCheckDeviceCodeCommand(string pDeviceID, out string pStatus, System.Data.DataTable ContextInfo)
        {
            System.Data.SqlClient.SqlCommand cmd;
            cmd = new System.Data.SqlClient.SqlCommand();
            cmd.CommandText = "pCheckDeviceCode";
            cmd.CommandTimeout = 180;
            cmd.CommandType = CommandType.StoredProcedure;
            System.Data.SqlClient.SqlParameter _pDeviceID = new System.Data.SqlClient.SqlParameter();
            _pDeviceID.ParameterName = "@pDeviceID";
            _pDeviceID.Size = 12;
            _pDeviceID.Value = pDeviceID;
            cmd.Parameters.Add(_pDeviceID);
            pStatus = null;
            System.Data.SqlClient.SqlParameter _pStatus = new System.Data.SqlClient.SqlParameter();
            _pStatus.ParameterName = "@pStatus";
            _pStatus.Size = 1;
            _pStatus.Value = pStatus;
            cmd.Parameters.Add(_pStatus);
            _pStatus.Direction = ParameterDirection.Output;
            System.Data.SqlClient.SqlParameter _ContextInfo = new System.Data.SqlClient.SqlParameter();
            _ContextInfo.ParameterName = "@ContextInfo";
            _ContextInfo.Size = -1;
            _ContextInfo.Value = ContextInfo;
            cmd.Parameters.Add(_ContextInfo);
            pStatus = ((string)(_pStatus.Value));
            return cmd;
        }
        public static System.Data.SqlClient.SqlCommand pCheckTestCodeCommand(string pTestCode, string pDeviceID, out string pStatus, System.Data.DataTable ContextInfo)
        {
            System.Data.SqlClient.SqlCommand cmd;
            cmd = new System.Data.SqlClient.SqlCommand();
            cmd.CommandText = "pCheckTestCode";
            cmd.CommandTimeout = 180;
            cmd.CommandType = CommandType.StoredProcedure;
            System.Data.SqlClient.SqlParameter _pTestCode = new System.Data.SqlClient.SqlParameter();
            _pTestCode.ParameterName = "@pTestCode";
            _pTestCode.Size = 12;
            _pTestCode.Value = pTestCode;
            cmd.Parameters.Add(_pTestCode);
            System.Data.SqlClient.SqlParameter _pDeviceID = new System.Data.SqlClient.SqlParameter();
            _pDeviceID.ParameterName = "@pDeviceID";
            _pDeviceID.Size = 12;
            _pDeviceID.Value = pDeviceID;
            cmd.Parameters.Add(_pDeviceID);
            pStatus = null;
            System.Data.SqlClient.SqlParameter _pStatus = new System.Data.SqlClient.SqlParameter();
            _pStatus.ParameterName = "@pStatus";
            _pStatus.Size = 1;
            _pStatus.Value = pStatus;
            cmd.Parameters.Add(_pStatus);
            _pStatus.Direction = ParameterDirection.Output;
            System.Data.SqlClient.SqlParameter _ContextInfo = new System.Data.SqlClient.SqlParameter();
            _ContextInfo.ParameterName = "@ContextInfo";
            _ContextInfo.Size = -1;
            _ContextInfo.Value = ContextInfo;
            cmd.Parameters.Add(_ContextInfo);
            pStatus = ((string)(_pStatus.Value));
            return cmd;
        }
        public static System.Data.SqlClient.SqlCommand pUpdateInvInstrumentMasterCommand(int pInstrumentID, System.Data.DataTable ContextInfo)
        {
            System.Data.SqlClient.SqlCommand cmd;
            cmd = new System.Data.SqlClient.SqlCommand();
            cmd.CommandText = "pUpdateInvInstrumentMaster";
            cmd.CommandTimeout = 180;
            cmd.CommandType = CommandType.StoredProcedure;
            System.Data.SqlClient.SqlParameter _pInstrumentID = new System.Data.SqlClient.SqlParameter();
            _pInstrumentID.ParameterName = "@pInstrumentID";
            _pInstrumentID.Size = -1;
            _pInstrumentID.Value = pInstrumentID;
            cmd.Parameters.Add(_pInstrumentID);
            System.Data.SqlClient.SqlParameter _ContextInfo = new System.Data.SqlClient.SqlParameter();
            _ContextInfo.ParameterName = "@ContextInfo";
            _ContextInfo.Size = -1;
            _ContextInfo.Value = ContextInfo;
            cmd.Parameters.Add(_ContextInfo);
            return cmd;
        }


       
    }
}
